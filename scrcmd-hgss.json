{
  "entries": [
    {
      "name": "LookUp",
      "id": "0x0000",
      "parameters": [],
      "description": "Event faces up",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "LookDown",
      "id": "0x0001",
      "parameters": [],
      "description": "Event faces down",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "LookLeft",
      "id": "0x0002",
      "parameters": [],
      "description": "Event faces left",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "LookRight",
      "id": "0x0003",
      "parameters": [],
      "description": "Event faces right",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WalkUpSlow",
      "id": "0x0004",
      "parameters": [],
      "description": "Event faces up and moves northwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkDownSlow",
      "id": "0x0005",
      "parameters": [],
      "description": "Event faces down and moves southwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkLeftSlow",
      "id": "0x0006",
      "parameters": [],
      "description": "Event faces left and moves westwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkRightSlow",
      "id": "0x0007",
      "parameters": [],
      "description": "Event faces right and moves eastwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkUp",
      "id": "0x0008",
      "parameters": [],
      "description": "Event faces up and moves northwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkDown",
      "id": "0x0009",
      "parameters": [],
      "description": "Event faces down and moves southwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkLeft",
      "id": "0x000A",
      "parameters": [],
      "description": "Event faces left and moves westwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkRight",
      "id": "0x000B",
      "parameters": [],
      "description": "Event faces right and moves eastwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkUpFast",
      "id": "0x000C",
      "parameters": [],
      "description": "Event faces up and moves northwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkDownFast",
      "id": "0x000D",
      "parameters": [],
      "description": "Event faces down and moves southwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkLeftFast",
      "id": "0x000E",
      "parameters": [],
      "description": "Event faces left and moves westwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkRightFast",
      "id": "0x000F",
      "parameters": [],
      "description": "Event faces right and moves eastwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkUpVeryFast",
      "id": "0x0010",
      "parameters": [],
      "description": "Event faces up and moves northwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkDownVeryFast",
      "id": "0x0011",
      "parameters": [],
      "description": "Event faces down and moves southwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkLeftVeryFast",
      "id": "0x0012",
      "parameters": [],
      "description": "Event faces left and moves westwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkRightVeryFast",
      "id": "0x0013",
      "parameters": [],
      "description": "Event faces right and moves eastwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "RunUp",
      "id": "0x0014",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "RunDown",
      "id": "0x0015",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "RunLeft",
      "id": "0x0016",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "RunRight",
      "id": "0x0017",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WalkUpSlowSite",
      "id": "0x0018",
      "parameters": [],
      "description": "Event faces up and moves on the spot at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkDownSlowSite",
      "id": "0x0019",
      "parameters": [],
      "description": "Event faces down and moves on the spot at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkLeftSlowSite",
      "id": "0x001A",
      "parameters": [],
      "description": "Event faces left and moves on the spot at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkRightSlowSite",
      "id": "0x001B",
      "parameters": [],
      "description": "Event faces right and moves on the spot at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkUpSite",
      "id": "0x001C",
      "parameters": [],
      "description": "Event faces up and moves on the spot at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkDownSite",
      "id": "0x001D",
      "parameters": [],
      "description": "Event faces down and moves on the spot at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkLeftSite",
      "id": "0x001E",
      "parameters": [],
      "description": "Event faces left and moves on the spot at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkRightSite",
      "id": "0x001F",
      "parameters": [],
      "description": "Event faces right and moves on the spot at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkUpFastSite",
      "id": "0x0020",
      "parameters": [],
      "description": "Event faces up and moves on the spot at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkDownFastSite",
      "id": "0x0021",
      "parameters": [],
      "description": "Event faces down and moves on the spot at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkLeftFastSite",
      "id": "0x0022",
      "parameters": [],
      "description": "Event faces left and moves on the spot at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkRightFastSite",
      "id": "0x0023",
      "parameters": [],
      "description": "Event faces right and moves on the spot at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed.",
      "type": "movement"
    },
    {
      "name": "WalkUpVeryFastSite",
      "id": "0x0024",
      "parameters": [],
      "description": "Event faces up and moves on the spot at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkDownVeryFastSite",
      "id": "0x0025",
      "parameters": [],
      "description": "Event faces down and moves on the spot at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkLeftVeryFastSite",
      "id": "0x0026",
      "parameters": [],
      "description": "Event faces left and moves on the spot at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "WalkRightVeryFastSite",
      "id": "0x0027",
      "parameters": [],
      "description": "Event faces right and moves on the spot at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second.",
      "type": "movement"
    },
    {
      "name": "RunUpSite",
      "id": "0x0028",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "RunDownSite",
      "id": "0x0029",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "RunLeftSite",
      "id": "0x002A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "RunRightSite",
      "id": "0x002B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpUpSlow",
      "id": "0x002C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpDownSlow",
      "id": "0x002D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpLeftSlow",
      "id": "0x002E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpRightSlow",
      "id": "0x002F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpUp",
      "id": "0x0030",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpDown",
      "id": "0x0031",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpLeft",
      "id": "0x0032",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpRight",
      "id": "0x0033",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpUp1",
      "id": "0x0034",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpDown1",
      "id": "0x0035",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpLeft1",
      "id": "0x0036",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpRight1",
      "id": "0x0037",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpUp2",
      "id": "0x0038",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpDown2",
      "id": "0x0039",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpLeft2",
      "id": "0x003A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "JumpRight2",
      "id": "0x003B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitDisappear",
      "id": "0x0045",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "LockDir",
      "id": "0x0047",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "ReleaseDir",
      "id": "0x0048",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "Exclamation",
      "id": "0x004B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitWalkUpSlow",
      "id": "0x004C",
      "parameters": [],
      "description": "Event faces up and floats northwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkDownSlow",
      "id": "0x004D",
      "parameters": [],
      "description": "Event faces down and floats southwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkLeftSlow",
      "id": "0x004E",
      "parameters": [],
      "description": "Event faces left and floats westwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkRightSlow",
      "id": "0x004F",
      "parameters": [],
      "description": "Event faces right and floats eastwards at 1 tile per 32 frames",
      "notes": "Equivalent to 0.94 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkUp",
      "id": "0x0050",
      "parameters": [],
      "description": "Event faces up and floats northwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkDown",
      "id": "0x0051",
      "parameters": [],
      "description": "Event faces down and floats southwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkLeft",
      "id": "0x0052",
      "parameters": [],
      "description": "Event faces left and floats westwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkRight",
      "id": "0x0053",
      "parameters": [],
      "description": "Event faces right and floats eastwards at 1 tile per 16 frames",
      "notes": "Equivalent to 1.875 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitMoveUp",
      "id": "0x0054",
      "parameters": [],
      "description": "Event faces up and floats northwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed. \nWalk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitMoveDown",
      "id": "0x0055",
      "parameters": [],
      "description": "Event faces down and floats southwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed. \nWalk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitMoveLeft",
      "id": "0x0056",
      "parameters": [],
      "description": "Event faces left and floats westwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed. \nWalk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitMoveRight",
      "id": "0x0057",
      "parameters": [],
      "description": "Event faces right and floats eastwards at 1 tile per 8 frames",
      "notes": "Equivalent to 3.75 tiles per second. This should be taken as the standard speed. \nWalk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkBackUp",
      "id": "0x0058",
      "parameters": [],
      "description": "Event faces up and floats northwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkBackDown",
      "id": "0x0059",
      "parameters": [],
      "description": "Event faces down and floats southwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkBackLeft",
      "id": "0x005A",
      "parameters": [],
      "description": "Event faces left and floats westwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitWalkBackRight",
      "id": "0x005B",
      "parameters": [],
      "description": "Event faces right and floats eastwards at 1 tile per 4 frames",
      "notes": "Equivalent to 7.5 tiles per second. Walk animation isn't triggered.",
      "type": "movement"
    },
    {
      "name": "WaitJumpLeft1",
      "id": "0x005C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitJumpRight1",
      "id": "0x005D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitJumpLeft2",
      "id": "0x005E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitJumpRight2",
      "id": "0x005F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitMoveSite",
      "id": "0x0064",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitJumpSite",
      "id": "0x0065",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitDoubleExclamation",
      "id": "0x0067",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "WaitMoveForever",
      "id": "0x0068",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "movement"
    },
    {
      "name": "Nop",
      "id": "0x0000",
      "parameters": [],
      "description": "Nothing",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Dummy",
      "id": "0x0001",
      "parameters": [],
      "description": "Nothing",
      "notes": "Has exactly the same ASM code as Nop.",
      "type": "command"
    },
    {
      "name": "End",
      "id": "0x0002",
      "parameters": [],
      "description": "End script execution",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaitTime",
      "id": "0x0003",
      "parameters": [
        "u16: Time",
        "Var: Countdown Variable"
      ],
      "description": "Stop script execution for Time frames, storing the remaining time in the Countdown Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "RegValueSet",
      "id": "0x0004",
      "parameters": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Assigns Value to Script Register value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "RegDataSet",
      "id": "0x0005",
      "parameters": [
        "u8: Script Register",
        "u32: Value"
      ],
      "description": "Assigns Value to Script Register value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "RegAdrsSet",
      "id": "0x0006",
      "parameters": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Assigns data in Address offset to Script Register value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AdrsValueSet",
      "id": "0x0007",
      "parameters": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Assigns Value to the Address offset",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AdrsRegSet",
      "id": "0x0008",
      "parameters": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Assigns Script Register value to the Address offset",
      "notes": "",
      "type": "command"
    },
    {
      "name": "RegRegSet",
      "id": "0x0009",
      "parameters": [
        "u8: Script Register 1",
        "u8: Script Register 2"
      ],
      "description": "Assigns Script Register 2 value to Script Register 1 value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AdrsAdrsSet",
      "id": "0x000A",
      "parameters": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Assigns data in Address 2 to the Address 1 offset",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareRegs",
      "id": "0x000B",
      "parameters": [
        "u8: Script Register",
        "u8: Script Register"
      ],
      "description": "Compares two Script Register",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareRegValue",
      "id": "0x000C",
      "parameters": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Compares Script Register value with Value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareRegAdrs",
      "id": "0x000D",
      "parameters": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Compares Script Register value with data in Address",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareAdrsReg",
      "id": "0x000E",
      "parameters": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Compares data in Address with Script Register value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareAdrsValue",
      "id": "0x000F",
      "parameters": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Compares data in Address with Value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareAdrsAdrs",
      "id": "0x0010",
      "parameters": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Compares data in Address 1 with data in Address 2",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareVarValue",
      "id": "0x0011",
      "parameters": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Compares Variable value with Value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareVars",
      "id": "0x0012",
      "parameters": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Compares Variable 1 value with Variable 2 value",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ParallelCommonScript",
      "id": "0x0013",
      "parameters": [
        "u16: ???"
      ],
      "description": "???",
      "notes": "Somehow related with parallel common script execution.",
      "type": "command"
    },
    {
      "name": "CommonScript",
      "id": "0x0014",
      "parameters": [
        "u16: Global Script ID"
      ],
      "description": "Calls Global Script ID script",
      "notes": "The Common Script table is located at 0xFA48C in IPKS arm9.bin, ordered from highest to lowest with structure: u16 Global Script ID | u16 Script file | u16 Text file. The executed script inside script file is determined as: used Global Script ID - tabulated Global Script ID.",
      "type": "command"
    },
    {
      "name": "LocalScript",
      "id": "0x0015",
      "parameters": [],
      "description": "Returns to the invoking script/function after a Common Script",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Jump",
      "id": "0x0016",
      "parameters": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward",
      "notes": "Relative Jump can have negative values (backward jump).",
      "type": "command"
    },
    {
      "name": "JumpIfObjID",
      "id": "0x0017",
      "parameters": [
        "u8: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if invoking event has Event ID as ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "JumpIfBgID",
      "id": "0x0018",
      "parameters": [
        "u8: ???",
        "u32: Relative Jump"
      ],
      "description": "???",
      "notes": "Maybe jumps to a function if invoking event has a specific ID.",
      "type": "command"
    },
    {
      "name": "JumpIfPlayerDir",
      "id": "0x0019",
      "parameters": [
        "u8: Player Direction",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if player is looking in Player Direction",
      "notes": "Supposed. Needs to be tested in game.",
      "type": "command"
    },
    {
      "name": "Call",
      "id": "0x001A",
      "parameters": [
        "u32: Relative Jump"
      ],
      "description": "Calls a function, Relative Jump bytes forward or backward",
      "notes": "Can be used to make loops when calling the own invoking function.",
      "type": "command"
    },
    {
      "name": "Return",
      "id": "0x001B",
      "parameters": [],
      "description": "Returns to the invoking script/function after a Call",
      "notes": "",
      "type": "command"
    },
    {
      "name": "JumpIf",
      "id": "0x001C",
      "parameters": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, jumps to a function",
      "notes": "Ask AdAstra for the condition list. Condition table is updated after a CompareVarValue, CompareVars, CheckFlag...",
      "type": "command"
    },
    {
      "name": "CallIf",
      "id": "0x001D",
      "parameters": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, calls a function",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetFlag",
      "id": "0x001E",
      "parameters": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 1",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ClearFlag",
      "id": "0x001F",
      "parameters": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 0",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckFlag",
      "id": "0x0020",
      "parameters": [
        "u16: Flag"
      ],
      "description": "Checks if Flag is set",
      "notes": "It updates the internal condition flag and maybe part of the condition table.",
      "type": "command"
    },
    {
      "name": "SetFlagFromVar",
      "id": "0x0021",
      "parameters": [
        "Var: Flag"
      ],
      "description": "Sets the flag whose ID is stored in Flag",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ClearFlagFromVar",
      "id": "0x0022",
      "parameters": [
        "Var: Flag"
      ],
      "description": "Clears the flag whose ID is stored in Flag",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FlagStatusToVar",
      "id": "0x0023",
      "parameters": [
        "Var: Flag",
        "Var: Variable"
      ],
      "description": "Checks if Flag is set and store the result in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetTrainerFlag",
      "id": "0x0024",
      "parameters": [
        "Flex: Trainer ID"
      ],
      "description": "Sets the flag of Trainer ID, so marks it as beaten trainer",
      "notes": "So this trainer will not battle against you. Used in every Gym after the leader is beaten.",
      "type": "command"
    },
    {
      "name": "ClearTrainerFlag",
      "id": "0x0025",
      "parameters": [
        "Flex: Trainer ID"
      ],
      "description": "Clears the flag of Trainer ID, so marks it as unbeaten trainer",
      "notes": "So this trainer can be challenged again.",
      "type": "command"
    },
    {
      "name": "CheckTrainerFlag",
      "id": "0x0026",
      "parameters": [
        "Flex: Trainer ID"
      ],
      "description": "Checks if Trainer ID has been beaten",
      "notes": "It updates the internal condition flag and maybe part of the condition table.",
      "type": "command"
    },
    {
      "name": "IncrementVar",
      "id": "0x0027",
      "parameters": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable + Operand in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DecrementVar",
      "id": "0x0028",
      "parameters": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable - Operand in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetVar",
      "id": "0x0029",
      "parameters": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Stores Value in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetVarFromVariable",
      "id": "0x002A",
      "parameters": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Assigns value of Variable 2 to Variable 1",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetVarFromFlexible",
      "id": "0x002B",
      "parameters": [
        "Var: Variable",
        "Flex: Flexible Value"
      ],
      "description": "Stores Flexible Value (or its value if variable) in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MessageAll",
      "id": "0x002C",
      "parameters": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file, all at once",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Message",
      "id": "0x002D",
      "parameters": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MessageFlex",
      "id": "0x002E",
      "parameters": [
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from the text file",
      "notes": "Unlike 002D, this command also accepts a variable as the input field.",
      "type": "command"
    },
    {
      "name": "MessageNoSkip",
      "id": "0x002F",
      "parameters": [
        "Flex: Text Slot"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_030",
      "id": "0x0030",
      "parameters": [
        "u8: Text Slot"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaitAB",
      "id": "0x0031",
      "parameters": [],
      "description": "Waits for button A or button B to be pressed",
      "notes": "Somehow it uses ScrReg 0 as countdown.",
      "type": "command"
    },
    {
      "name": "WaitButton",
      "id": "0x0032",
      "parameters": [],
      "description": "Waits for a button to be pressed",
      "notes": "It seems only A, B, X and direction pad buttons work.",
      "type": "command"
    },
    {
      "name": "WaitABPad",
      "id": "0x0033",
      "parameters": [],
      "description": "Waits for button A, button B or pad buttons to be pressed",
      "notes": "Supposed. Needs to be tested in game.",
      "type": "command"
    },
    {
      "name": "OpenMessage",
      "id": "0x0034",
      "parameters": [],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CloseMessage",
      "id": "0x0035",
      "parameters": [],
      "description": "Closes message box",
      "notes": "SDSME name is misleading, for no button is needed to be pressed.",
      "type": "command"
    },
    {
      "name": "FreezeMessage",
      "id": "0x0036",
      "parameters": [],
      "description": "???",
      "notes": "Probably keeps the message box alive after a script. ASM differs with CloseMessage only in a BL instruction.",
      "type": "command"
    },
    {
      "name": "SetIconBoard",
      "id": "0x0037",
      "parameters": [
        "u8: Text Slot",
        "u8: Type",
        "u16: Icon",
        "u16: ???"
      ],
      "description": "Prepares an icon board message box displaying Text Slot message, of Type type, and with Icon image if chosen type supports it",
      "notes": "Type values from 0 to 3 are: brown (with icon), green (with icon), gray and blue.",
      "type": "command"
    },
    {
      "name": "SetTextBoard",
      "id": "0x0038",
      "parameters": [
        "u8: Type",
        "u16: Icon"
      ],
      "description": "Prepares a text board message box of Type type, and with Icon image if chosen type supports it",
      "notes": "Type values from 0 to 3 are: brown (with icon), green (with icon), gray and blue.",
      "type": "command"
    },
    {
      "name": "ShowBoard",
      "id": "0x0039",
      "parameters": [
        "u8: Process"
      ],
      "description": "Triggers different Process processes for the board",
      "notes": "Process value 0 keeps the board, value 1 creates the board, value 2 hides the board, value 3 shows the board and value 4 deletes the board.",
      "type": "command"
    },
    {
      "name": "WaitBoard",
      "id": "0x003A",
      "parameters": [],
      "description": "Waits the board last process to end",
      "notes": "Supposed.",
      "type": "command"
    },
    {
      "name": "BoardMessage",
      "id": "0x003B",
      "parameters": [
        "u8: Text Slot",
        "u16: Variable"
      ],
      "description": "Displays Text Slot message in the current text box, stores the current text box status in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CloseBoard",
      "id": "0x003C",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Returns 1 to Variable if the player has pressed a button so the board must close, 0 otherwise",
      "notes": "Variable is stored in ScrReg 0. Command waits for a button to be pressed and stores result in Variable.",
      "type": "command"
    },
    {
      "name": "Menu",
      "id": "0x003D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_03E",
      "id": "0x003E",
      "parameters": [
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "YesNoBox",
      "id": "0x003F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Opens a Yes-No dialog and stores user response in Variable",
      "notes": "Variable is stored in ScrReg 0.",
      "type": "command"
    },
    {
      "name": "MultiStandardText",
      "id": "0x0040",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #321, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button.",
      "type": "command"
    },
    {
      "name": "MultiLocalText",
      "id": "0x0041",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button.",
      "type": "command"
    },
    {
      "name": "AddMultiOption",
      "id": "0x0042",
      "parameters": [
        "u8: Text Slot",
        "u8: Multi Slot"
      ],
      "description": "Adds an option with Multi Slot ID showing Text Slot text",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShowMulti",
      "id": "0x0043",
      "parameters": [],
      "description": "Shows the prepared multi in screen",
      "notes": "The game will hide it when the player has selected an option.",
      "type": "command"
    },
    {
      "name": "ListStandardText",
      "id": "0x0044",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #321, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button. The difference between a Multi and a List seems to be that lists are scrollable.",
      "type": "command"
    },
    {
      "name": "ListLocalText",
      "id": "0x0045",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button. The difference between a Multi and a List seems to be that lists are scrollable.",
      "type": "command"
    },
    {
      "name": "AddListOption",
      "id": "0x0046",
      "parameters": [
        "Flex: Option MSG",
        "Flex: Highlight MSG",
        "Flex: List Slot"
      ],
      "description": "Adds a new option to the list, with List Slot ID and showing text line Option MSG. It also displays text line Highlight MSG when that option is highlighted.",
      "notes": "If Highlight MSG is set to 255 [0xFF], no message will be displayed when the option is highlighted.\nThis command relies on an open message box in order to display the highlight messages. \n\nTrying to highlight an option with Highlight MSG different than 255 [0xFF] will result in a crash if no message box is already being displayed.",
      "type": "command"
    },
    {
      "name": "ShowList",
      "id": "0x0047",
      "parameters": [],
      "description": "Shows the prepared list in screen",
      "notes": "The game will hide it when the player has selected an option.",
      "type": "command"
    },
    {
      "name": "MultiColumn",
      "id": "0x0048",
      "parameters": [
        "u8: Columns"
      ],
      "description": "Splits the multi window in Columns different columns",
      "notes": "",
      "type": "command"
    },
    {
      "name": "PlayFanfare",
      "id": "0x0049",
      "parameters": [
        "Flex: Sound"
      ],
      "description": "Plays Sound",
      "notes": "",
      "type": "command"
    },
    {
      "name": "StopFanfare",
      "id": "0x004A",
      "parameters": [
        "Flex: Sound"
      ],
      "description": "Stops Sound",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaitFanfare",
      "id": "0x004B",
      "parameters": [
        "Flex: Sound"
      ],
      "description": "Waits Sound to finish",
      "notes": "",
      "type": "command"
    },
    {
      "name": "PlayCry",
      "id": "0x004C",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Unused"
      ],
      "description": "Plays a Pok\u00e9mon cry",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaitCry",
      "id": "0x004D",
      "parameters": [],
      "description": "Waits the current cry to finish",
      "notes": "",
      "type": "command"
    },
    {
      "name": "PlaySound",
      "id": "0x004E",
      "parameters": [
        "u16: Sound"
      ],
      "description": "Pauses current music, then Plays Sound",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaitSound",
      "id": "0x004F",
      "parameters": [],
      "description": "Waits for Sound to finish, then resumes music",
      "notes": "",
      "type": "command"
    },
    {
      "name": "PlayMusic",
      "id": "0x0050",
      "parameters": [
        "u16: Music"
      ],
      "description": "Plays Music",
      "notes": "",
      "type": "command"
    },
    {
      "name": "StopMusic",
      "id": "0x0051",
      "parameters": [
        "u16: Unused"
      ],
      "description": "Stops current music",
      "notes": "Parameter is ignored because the game identifies what music is playing.",
      "type": "command"
    },
    {
      "name": "PlayDefaultMusic",
      "id": "0x0052",
      "parameters": [],
      "description": "Plays map default music",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetMusic",
      "id": "0x0053",
      "parameters": [
        "u16: Music"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FadeOutMusic",
      "id": "0x0054",
      "parameters": [
        "u16: Volume",
        "u16: Time"
      ],
      "description": "Fades out the current music to Volume in Time frames",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FadeInMusic",
      "id": "0x0055",
      "parameters": [
        "u16: Time"
      ],
      "description": "Fades in the current music to normal volume in Time frames",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_056",
      "id": "0x0056",
      "parameters": [
        "u8: ???",
        "u8: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_057",
      "id": "0x0057",
      "parameters": [
        "u16: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_058",
      "id": "0x0058",
      "parameters": [
        "u8: ???"
      ],
      "description": "???",
      "notes": "Seems to set a flag related to the music system.",
      "type": "command"
    },
    {
      "name": "CheckChatotCry",
      "id": "0x0059",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Checks if Chatot has custom sound, stores answer in Variable",
      "notes": "Returns 0 or 1 to the specified Variable. Not for a specific Chatot but for all (they share a custom sound).",
      "type": "command"
    },
    {
      "name": "StartChatotCry",
      "id": "0x005A",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Starts Chatot microphone record, stores answer in Variable",
      "notes": "Returns 0 or 1 to the specified Variable depending on successful recording.",
      "type": "command"
    },
    {
      "name": "StopChatotCry",
      "id": "0x005B",
      "parameters": [],
      "description": "Stops recording Chatot custom sound",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SaveChatotCry",
      "id": "0x005C",
      "parameters": [],
      "description": "???",
      "notes": "Maybe saves the custom Chatot sound in the savegame.",
      "type": "command"
    },
    {
      "name": "CMD_05D",
      "id": "0x005D",
      "parameters": [],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Movement",
      "id": "0x005E",
      "parameters": [
        "Flex: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Applies movement at Relative Jump to Event ID",
      "notes": "Movements must be halfword-aligned in the script file. If you're using an old tool which doesn't align them, force the alignment with a TextPlayerName 0x0 or some unnoticeable command of 3, 5, 7 or 9 bytes length.",
      "type": "command"
    },
    {
      "name": "WaitMovement",
      "id": "0x005F",
      "parameters": [],
      "description": "Waits for all movements to finish",
      "notes": "",
      "type": "command"
    },
    {
      "name": "LockAll",
      "id": "0x0060",
      "parameters": [],
      "description": "Locks every event in the map",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ReleaseAll",
      "id": "0x0061",
      "parameters": [],
      "description": "Releases every event in the map",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Lock",
      "id": "0x0062",
      "parameters": [
        "u16: Event ID"
      ],
      "description": "Locks Event ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Release",
      "id": "0x0063",
      "parameters": [
        "u16: Event ID"
      ],
      "description": "Releases Event ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AddOW",
      "id": "0x0064",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Add Event ID overworld in the map",
      "notes": "It is probable that, if executing this having Event ID overworld already in the map, it gets duplicated.",
      "type": "command"
    },
    {
      "name": "RemoveOW",
      "id": "0x0065",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Removes Event ID overworld from the map",
      "notes": "",
      "type": "command"
    },
    {
      "name": "LockCamera",
      "id": "0x0066",
      "parameters": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Locks the camera at position X and Y",
      "notes": "Seems to place a invisible NPC at coords X and Y. It appears that both must be the current player position.",
      "type": "command"
    },
    {
      "name": "ReleaseCamera",
      "id": "0x0067",
      "parameters": [],
      "description": "Releases the camera",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FacePlayer",
      "id": "0x0068",
      "parameters": [],
      "description": "Makes the invoking event look at the player",
      "notes": "In fact it simply takes the current player direction and makes the NPC look at the opposite direction.",
      "type": "command"
    },
    {
      "name": "GetPlayerPosition",
      "id": "0x0069",
      "parameters": [
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current player position in X and Y",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetOWPosition",
      "id": "0x006A",
      "parameters": [
        "Flex: Event ID",
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current Event ID position in X and Y",
      "notes": "If Event ID is deleted (via RemoveOW) it gives 0xFF for both coordinates.",
      "type": "command"
    },
    {
      "name": "CheckPersonPosition",
      "id": "0x006B",
      "parameters": [
        "Flex: X",
        "Flex: Z",
        "Flex: Y"
      ],
      "description": "???",
      "notes": "Maybe teleports the player to other coords?",
      "type": "command"
    },
    {
      "name": "KeepOverworld",
      "id": "0x006C",
      "parameters": [
        "Flex: Event ID",
        "u8: Value"
      ],
      "description": "If Value is 1, prevents Event ID from disappearing when entering a new map header",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetOWMovement",
      "id": "0x006D",
      "parameters": [
        "Flex: Event ID",
        "u16: Movement"
      ],
      "description": "Changes the Event ID's movement number to Movement",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveMoney",
      "id": "0x006E",
      "parameters": [
        "u32: Money"
      ],
      "description": "Adds Money to the player's money",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TakeMoney",
      "id": "0x006F",
      "parameters": [
        "u32: Money"
      ],
      "description": "Subtracts Money from the player's money",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareMoney",
      "id": "0x0070",
      "parameters": [
        "Var: Variable",
        "u32: Money"
      ],
      "description": "Stores 1 into Variable if the player has Money or more money. Stores 0 otherwise.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShowMoney",
      "id": "0x0071",
      "parameters": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows the money box at X and Y coordinates of the screen",
      "notes": "Each X and Y unit implies 8 pixels. Values of 0 or higher than the screen may glitch the screen.",
      "type": "command"
    },
    {
      "name": "HideMoney",
      "id": "0x0072",
      "parameters": [],
      "description": "Hides the money box",
      "notes": "",
      "type": "command"
    },
    {
      "name": "UpdateMoney",
      "id": "0x0073",
      "parameters": [],
      "description": "Updates the current money in the money box",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShowSpecialCurrency",
      "id": "0x0074",
      "parameters": [
        "u8: Currency",
        "Flex: X Coord",
        "Flex: Y Coord"
      ],
      "description": "Shows the Currency box at X and Y coordinates of the screen.",
      "notes": "Currency:\n\n0 = Coins\n1 = Battle Points\n2 = Athlete Points",
      "type": "command"
    },
    {
      "name": "HideSpecialCurrency",
      "id": "0x0075",
      "parameters": [],
      "description": "Hides the currently displayed special currency box.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "UpdateSpecialCurrency",
      "id": "0x0076",
      "parameters": [
        "u16: Currency"
      ],
      "description": "Updates the current Currency in the currency box.",
      "notes": "Currency types are the same as above [0074].",
      "type": "command"
    },
    {
      "name": "CheckCoins",
      "id": "0x0077",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the current casino coin amount in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveCoins",
      "id": "0x0078",
      "parameters": [
        "Flex: Coins"
      ],
      "description": "Adds Coins to the player's casino coins",
      "notes": "Important: This commands needs overlay 22 to be loaded! \nCheck OverlayManager script command.",
      "type": "command"
    },
    {
      "name": "TakeCoins",
      "id": "0x0079",
      "parameters": [
        "Flex: Coins"
      ],
      "description": "Subtracts Coins from the player's casino coins",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveAthletePoints",
      "id": "0x007A",
      "parameters": [
        "Flex: Amount"
      ],
      "description": "Adds the given Amount to the player's Athlete Points",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TakeAthletePoints",
      "id": "0x007B",
      "parameters": [
        "Flex: Amount"
      ],
      "description": "Subtracts the given Amount from the player's Athlete Points",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareAthletePoints",
      "id": "0x007C",
      "parameters": [
        "Var: Result",
        "Flex: Amount"
      ],
      "description": "Stores 1 into Variable if the player has the given Amount of Athlete Points or more. Stores 0 otherwise.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveItem",
      "id": "0x007D",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Adds Amount of Item item, stores 1 in Variable if the player had less than 1000 - Amount (100 - Amount if TM/HM), stores 0 otherwise",
      "notes": "Both Item and Amount are flexible, but if you use CommonScript 0x7F1 after that (as it is meant to be) you must place these two values in 0x8004 and 0x8005 in order to make the script work properly.",
      "type": "command"
    },
    {
      "name": "TakeItem",
      "id": "0x007E",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Subs Amount of Item item, stores 1 in Variable if the player had at least Amount items in the bag, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckItemSpace",
      "id": "0x007F",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has less than 1000 - Amount of Item items (100 - Amount if TM/HM), stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckItem",
      "id": "0x0080",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has at least Amount of Item items in the bag, stores 0 otherwise",
      "notes": "Even if the Amount to check for is 0, the check will return 0 if you don't have the item at all.",
      "type": "command"
    },
    {
      "name": "CheckItemIsMachine",
      "id": "0x0081",
      "parameters": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Item is TM or HM, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetItemPocket",
      "id": "0x0082",
      "parameters": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores the bag pocket of Item in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetStarter",
      "id": "0x0083",
      "parameters": [
        "Flex: Pok\u00e9mon"
      ],
      "description": "Stores Pok\u00e9mon as the starting Pok\u00e9mon in the game save data",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GenderMessage",
      "id": "0x0084",
      "parameters": [
        "u8: Male Text",
        "u8: Female Text"
      ],
      "description": "Displays Male Text or Female Text message depending on player's gender",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_085",
      "id": "0x0085",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_086",
      "id": "0x0086",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_087",
      "id": "0x0087",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_088",
      "id": "0x0088",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GivePokemon",
      "id": "0x0089",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Level",
        "Flex: Item",
        "Flex: Form",
        "Flex: Ability",
        "Var: Variable"
      ],
      "description": "Gives Pok\u00e9mon at level Level, with the given Item, Form and Ability. Store 1 in Variable if succeed and 0 otherwise.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GivePokemonEgg",
      "id": "0x008A",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Location"
      ],
      "description": "Gives a Pok\u00e9mon egg received from Location text slot at text bank #281",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ReplaceMove",
      "id": "0x008B",
      "parameters": [
        "Flex: Party Slot",
        "Flex: Move Slot",
        "u16: Move ID"
      ],
      "description": "Overwrites Move Slot of the Pok\u00e9mon at the specified Party Slot with Move ID.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckPokemonHasMove",
      "id": "0x008C",
      "parameters": [
        "Var: Variable",
        "Flex: Move ID",
        "Flex: Party Slot"
      ],
      "description": "Checks if a Pok\u00e9mon at the specified Party Slot knows a move with given Move ID.\nStores 1 into Variable if yes, 0 otherwise.",
      "notes": "Example: Headbutt tutor in Ilex Forest (Script File 92, Script 3)",
      "type": "command"
    },
    {
      "name": "CheckMoveInParty",
      "id": "0x008D",
      "parameters": [
        "Var: Variable",
        "Flex: Move ID"
      ],
      "description": "Checks if any Pok\u00e9mon in the party knows Move ID move, stores in Variable the position of the first Pok\u00e9mon that knows it or stores 6 if no Pok\u00e9mon in the party knows the move",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_08E",
      "id": "0x008E",
      "parameters": [
        "Flex: ???",
        "Var: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ChooseRivalName",
      "id": "0x008F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming the rival, stores 1 in Variable if user cancels the proccess",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetCounterpartSprite",
      "id": "0x0090",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 97 (Lyra sprite ID) into the Variable if you're playing as Ethan;\nStores 0 (Ethan sprite ID) into the Variable if you're playing as Lyra.",
      "notes": "Remember that Overworld Entities with sprite IDs 101 to 116 refer to the value of vars 0x4020-0x402F for the sprite to display.",
      "type": "command"
    },
    {
      "name": "UpgradePokegear",
      "id": "0x0091",
      "parameters": [
        "u8: Module"
      ],
      "description": "Adds the worldmap to the Pokegear if Module is 1, adds the radio if Module is 2",
      "notes": "",
      "type": "command"
    },
    {
      "name": "RecordPokegearNumber",
      "id": "0x0092",
      "parameters": [
        "Flex: ???"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_093",
      "id": "0x0093",
      "parameters": [
        "Flex: ???",
        "Var: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_094",
      "id": "0x0094",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_095",
      "id": "0x0095",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ReturnScreen",
      "id": "0x0096",
      "parameters": [],
      "description": "Restores the normal overworld screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_097",
      "id": "0x0097",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Wifi",
      "id": "0x0098",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_099",
      "id": "0x0099",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "OpenPokemonDress",
      "id": "0x009A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_09B",
      "id": "0x009B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_09C",
      "id": "0x009C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WorldMapScreen",
      "id": "0x009D",
      "parameters": [],
      "description": "Opens the worldmap screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_09E",
      "id": "0x009E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_09F",
      "id": "0x009F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0A0",
      "id": "0x00A0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CallEnd2",
      "id": "0x00A1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0A2",
      "id": "0x00A2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "EndGameScreen",
      "id": "0x00A3",
      "parameters": [],
      "description": "Opens the Hall of Fame and game ending screens",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0A4",
      "id": "0x00A4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0A5",
      "id": "0x00A5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WFC",
      "id": "0x00A6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "StarterSelectionScreen",
      "id": "0x00A7",
      "parameters": [],
      "description": "Opens the starter Pok\u00e9mon selection screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0A8",
      "id": "0x00A8",
      "parameters": [
        "Flex: ???"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0A9",
      "id": "0x00A9",
      "parameters": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0AA",
      "id": "0x00AA",
      "parameters": [
        "Var: Variable"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0AB",
      "id": "0x00AB",
      "parameters": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WritePlayerName",
      "id": "0x00AC",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming the player, stores 1 in Variable if user cancels the proccess",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WritePokemonName",
      "id": "0x00AD",
      "parameters": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming a Pok\u00e9mon in Party Position, stores 1 in Variable if user cancels the proccess",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FadeScreen",
      "id": "0x00AE",
      "parameters": [
        "u16: Frame Count",
        "u16: Duration",
        "u16: Fade Style",
        "u16: Color"
      ],
      "description": "Fades screen to chosen 15-bit Color, using the chosen Fade Style. The transition will render Frame Count images, of Duration length each.",
      "notes": "Type 0 for fade in, Type 1 for fade out. Color has 15-bit format. Transition is the number of color changes that the game does in the fading.",
      "type": "command"
    },
    {
      "name": "WaitFadeScreen",
      "id": "0x00AF",
      "parameters": [],
      "description": "Waits for the screen fade to end",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Warp",
      "id": "0x00B0",
      "parameters": [
        "Flex: Map",
        "u16: Door",
        "Flex: X",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Warps to X and Y position of Map header with initial Dir direction, using Door warp",
      "notes": "When Door is 0 it doesn't use any door animation.",
      "type": "command"
    },
    {
      "name": "RockClimbAnimation",
      "id": "0x00B1",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses rock climb with the Pok\u00e9mon at Party Position position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SurfAnimation",
      "id": "0x00B2",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses surf with the Pok\u00e9mon at Party Position position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaterfallAnimation",
      "id": "0x00B3",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses waterfall with the Pok\u00e9mon at Party Position position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FlyAnimation",
      "id": "0x00B4",
      "parameters": [
        "u16: Map",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Flies to Map header map, to coordinates X and Y",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FlashAnimation",
      "id": "0x00B5",
      "parameters": [],
      "description": "Sets weather to 12 (darkness after flash) and then updates the weather graphics",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WhirlpoolAnimation",
      "id": "0x00B6",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses whirlpool with the Pok\u00e9mon at Party Position position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CutAnimation",
      "id": "0x00B7",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses cut with the Pok\u00e9mon at Party Position position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckBike",
      "id": "0x00B8",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player is riding the bike, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "RideBike",
      "id": "0x00B9",
      "parameters": [
        "u8: Action"
      ],
      "description": "Changes player form from normal to riding the bike if Action is 1, otherwise it sets the normal form to the player",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CyclingRoad",
      "id": "0x00BA",
      "parameters": [
        "u8: Action"
      ],
      "description": "If Action is 1, the game sets the cycling road flag and moves the player down. Otherwise the flag is deactivated.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckPlayerForm",
      "id": "0x00BB",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current player form",
      "notes": "Values 0 is for normal form, value 1 for riding the bike and value 2 for surfing.",
      "type": "command"
    },
    {
      "name": "SetPlayerForm",
      "id": "0x00BC",
      "parameters": [
        "u16: Form"
      ],
      "description": "Activates the Form bit in the internal player form data",
      "notes": "The purpose of the different bits still needs to be researched.",
      "type": "command"
    },
    {
      "name": "UpdatePlayerForm",
      "id": "0x00BD",
      "parameters": [],
      "description": "Updates changes in the internal player form data in the screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPlayerName",
      "id": "0x00BE",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores player's name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextRivalName",
      "id": "0x00BF",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores rival's name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextCounterpart",
      "id": "0x00C0",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores counterpart's name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPartyPokemon",
      "id": "0x00C1",
      "parameters": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the name of the Pok\u00e9mon in Party Position in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextItem",
      "id": "0x00C2",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPocket",
      "id": "0x00C3",
      "parameters": [
        "u8: String Buffer",
        "Flex: Pocket"
      ],
      "description": "Stores Pocket's name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextMachineMove",
      "id": "0x00C4",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores the name of the move contained in Item TM/HM in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextMove",
      "id": "0x00C5",
      "parameters": [
        "u8: String Buffer",
        "Flex: Move"
      ],
      "description": "Stores battle Move's name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextNumber",
      "id": "0x00C6",
      "parameters": [
        "u8: String Buffer",
        "Flex: Number"
      ],
      "description": "Stores a Number in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPokeNickname",
      "id": "0x00C7",
      "parameters": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the nickname of the Pok\u00e9mon in Party Position in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetVariableObject",
      "id": "0x00C8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPlayerTrainerType",
      "id": "0x00C9",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores player's Union Room trainer type in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPokemon",
      "id": "0x00CA",
      "parameters": [
        "u8: String Buffer",
        "Flex: Pok\u00e9mon",
        "u16: Unused",
        "u8: Unused"
      ],
      "description": "Stores Pok\u00e9mon's name in String Buffer",
      "notes": "The two Unused parameters are for defining male/female nouns and singular/plural nouns respectively. However both don't apply in this command.",
      "type": "command"
    },
    {
      "name": "TextStarterPokemon",
      "id": "0x00CB",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the player' starter Pok\u00e9mon in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextRivalStarter",
      "id": "0x00CC",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the rival' starter Pok\u00e9mon in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextCounterpartStarter",
      "id": "0x00CD",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the counterpart' starter Pok\u00e9mon in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckStarter",
      "id": "0x00CE",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the starter Pok\u00e9mon ID in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyTextGoods",
      "id": "0x00CF",
      "parameters": [
        "u8: String Buffer",
        "Flex: Unused"
      ],
      "description": "Loads an empty string in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyTextTrap",
      "id": "0x00D0",
      "parameters": [
        "u8: Unused",
        "Flex: Unused"
      ],
      "description": "Nothing",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyTextTreasure",
      "id": "0x00D1",
      "parameters": [
        "u8: Unused",
        "Flex: Unused"
      ],
      "description": "Nothing",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextMapName",
      "id": "0x00D2",
      "parameters": [
        "u8: String Buffer",
        "Flex: Map"
      ],
      "description": "Stores Map header name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetSwarmInfo",
      "id": "0x00D3",
      "parameters": [
        "Var: Map",
        "Var: Pok\u00e9mon"
      ],
      "description": "Selects a zone depending on a random seed, then stores the zone ID in Map and the corresponding swarm Pok\u00e9mon of that zone in Pok\u00e9mon",
      "notes": "Predicted. Needs to be checked.",
      "type": "command"
    },
    {
      "name": "TrainerID",
      "id": "0x00D4",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the trainer ID number in Variable depending on the script ID",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerBattle",
      "id": "0x00D5",
      "parameters": [
        "Flex: Trainer 1",
        "Flex: Trainer 2",
        "u8: ???",
        "u8: ???"
      ],
      "description": "Starts a battle against Trainer 1 and, if Trainer 2 is neither 0 nor the same as Trainer 1, a double battle against both",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TrainerMessage",
      "id": "0x00D6",
      "parameters": [
        "Flex: Trainer ID",
        "Flex: Type"
      ],
      "description": "Displays the text of Trainer ID trainer at condition Type",
      "notes": "The possible Type values are the following (expand the note for see them)",
      "type": "command"
    },
    {
      "name": "TrainerMsgCheck",
      "id": "0x00D7",
      "parameters": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pok\u00e9mon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 0 in Noticing, 2 in Defeat and 0 in One Pok\u00e9mon. If it corresponds to a double battle, stores 3, 5 and 6 or 7, 9 and 10 depending on whether it's the first or the second trainer",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerRematchMsgCheck",
      "id": "0x00D8",
      "parameters": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pok\u00e9mon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 17 in Noticing, 0 in Defeat and 0 in One Pok\u00e9mon. If it corresponds to a double battle, stores 18, 0 and 6 or 19, 0 and 10 depending on whether it's the first or the second trainer",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerTypeCheck",
      "id": "0x00D9",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the script ID corresponds to a single battle, stores 1 if it corresponds to a double battle",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerMusic",
      "id": "0x00DA",
      "parameters": [
        "Flex: Trainer"
      ],
      "description": "Retrieves the Trainer Class ID of the passed Trainer and plays its eye contact music.",
      "notes": "It checks if player is in Johto or Kanto for that.",
      "type": "command"
    },
    {
      "name": "LostBattle",
      "id": "0x00DB",
      "parameters": [],
      "description": "Return to Pok\u00e9mon Center or player's house after being defeated",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckBattleIsLost",
      "id": "0x00DC",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player has been defeated in battle, stores 1 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckDefeatedPokemon",
      "id": "0x00DD",
      "parameters": [
        "Var: Variable",
        "u8: ???"
      ],
      "description": "Stores 0 in Variable if player defeated or caught the wild Pokemon, stores 1 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Check2vs2",
      "id": "0x00DE",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has at least 2 not fainted Pok\u00e9mon, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyTrainerBattle",
      "id": "0x00DF",
      "parameters": [],
      "description": "Starts a battle against trainer with ID 1",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyTrainerFlag",
      "id": "0x00E0",
      "parameters": [],
      "description": "Sets the trainer flag with the same ID as the invoking event",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyTrainerFlagJump",
      "id": "0x00E1",
      "parameters": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if trainer flag with the invoking event ID is set",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E2",
      "id": "0x00E2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E3",
      "id": "0x00E3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E4",
      "id": "0x00E4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E5",
      "id": "0x00E5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E6",
      "id": "0x00E6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E7",
      "id": "0x00E7",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E8",
      "id": "0x00E8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0E9",
      "id": "0x00E9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0EA",
      "id": "0x00EA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0EB",
      "id": "0x00EB",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0EC",
      "id": "0x00EC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0ED",
      "id": "0x00ED",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckPokerus",
      "id": "0x00EE",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if one or more Pok\u00e9mon in the party are infected with the Pok\u00e9rus",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPokemonGender",
      "id": "0x00EF",
      "parameters": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if Pok\u00e9mon at Party Position is male, 1 if is female and 2 if gender is unknown",
      "notes": "Unknown gender value is supposed and should be checked.",
      "type": "command"
    },
    {
      "name": "WarpLift",
      "id": "0x00F0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetElevatorFloor",
      "id": "0x00F1",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current floor in a elevator",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ElevatorBox",
      "id": "0x00F2",
      "parameters": [
        "u8: X",
        "u8: Y",
        "Var: Variable",
        "Flex: Floor"
      ],
      "description": "Shows the current floor number in a box at X and Y coordinates in the screen",
      "notes": "Each X and Y unit implies 8 pixels. Values of 0 or higher than the screen may glitch the screen. Variable and Floor parameters have not been tested.",
      "type": "command"
    },
    {
      "name": "CountJohtoDexSeen",
      "id": "0x00F3",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the Johto Pok\u00e9dex",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountJohtoDexObtained",
      "id": "0x00F4",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the Johto Pok\u00e9dex",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountNationalDexSeen",
      "id": "0x00F5",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the National Pok\u00e9dex",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountNationalDexObtained",
      "id": "0x00F6",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the National Pok\u00e9dex",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyNationalDexCheck",
      "id": "0x00F7",
      "parameters": [],
      "description": "Nothing",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetDexProgressMsg",
      "id": "0x00F8",
      "parameters": [
        "u8: Mode",
        "Var: Message",
        "Var: Unknown"
      ],
      "description": "Checks the number of seen Pok\u00e9mon in the Johto Pok\u00e9dex (if Mode is 0) or the number of obtained Pok\u00e9mon in the National Pok\u00e9dex (otherwise) and stores the corresponding Professor message in Message, also storing 0x4AA in Unknown",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WildBattle",
      "id": "0x00F9",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a wild battle against a Pok\u00e9mon of level Level",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WildBattleNoButtons",
      "id": "0x00FA",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a first wild battle against a Pok\u00e9mon of level Level",
      "notes": "The difference between this and other similar commands is that Bag, Run and Pok\u00e9mon buttons are disabled.",
      "type": "command"
    },
    {
      "name": "CatchTutorial",
      "id": "0x00FB",
      "parameters": [],
      "description": "Starts the catch tutorial battle",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0FC",
      "id": "0x00FC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckSaveGame",
      "id": "0x00FD",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if a different savegame exists and it's not possible to save, stores 1 if no previous savegame exists, stores 2 if game has to save a lot of data and stores 3 if game can perform a quick save",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0FE",
      "id": "0x00FE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_0FF",
      "id": "0x00FF",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_100",
      "id": "0x0100",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_101",
      "id": "0x0101",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_102",
      "id": "0x0102",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_103",
      "id": "0x0103",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_104",
      "id": "0x0104",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_105",
      "id": "0x0105",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_106",
      "id": "0x0106",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_107",
      "id": "0x0107",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_108",
      "id": "0x0108",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_109",
      "id": "0x0109",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_10A",
      "id": "0x010A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_10B",
      "id": "0x010B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_10C",
      "id": "0x010C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_10D",
      "id": "0x010D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_10E",
      "id": "0x010E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_10F",
      "id": "0x010F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_110",
      "id": "0x0110",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_111",
      "id": "0x0111",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_112",
      "id": "0x0112",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MartScreen",
      "id": "0x0113",
      "parameters": [
        "Flex: Unused"
      ],
      "description": "Opens the common mart shopping screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SpMartScreen",
      "id": "0x0114",
      "parameters": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID mart shopping screen",
      "notes": "Used in the Departament Store for a shop with specific fixed items. At 0x48188 of arm9.bin (IPKS) is the pointer to the shops table, each entry of the table being a pointer to an item table.",
      "type": "command"
    },
    {
      "name": "GoodsMartScreen",
      "id": "0x0115",
      "parameters": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID goods mart shopping screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SealMartScreen",
      "id": "0x0116",
      "parameters": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID seal mart shopping screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyLostBattle",
      "id": "0x0117",
      "parameters": [],
      "description": "Return to Pok\u00e9mon Center or player's house after being defeated",
      "notes": "Same code as LostBattle command.",
      "type": "command"
    },
    {
      "name": "SetLastWarp",
      "id": "0x0118",
      "parameters": [
        "Flex: Warp ID"
      ],
      "description": "Sets map's Warp ID warp as the last used warp",
      "notes": "Supposed. This would affect actions like Escape Rope use.",
      "type": "command"
    },
    {
      "name": "CheckPlayerGender",
      "id": "0x0119",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player is male, stores 1 if female",
      "notes": "",
      "type": "command"
    },
    {
      "name": "HealPokemon",
      "id": "0x011A",
      "parameters": [],
      "description": "Heals every Pok\u00e9mon in the player's party",
      "notes": "That does not include the black fade nor the healing sound.",
      "type": "command"
    },
    {
      "name": "CMD_11B",
      "id": "0x011B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_11C",
      "id": "0x011C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_11D",
      "id": "0x011D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_11E",
      "id": "0x011E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_11F",
      "id": "0x011F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_120",
      "id": "0x0120",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_121",
      "id": "0x0121",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckPokedex",
      "id": "0x0122",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the Pok\u00e9dex, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GivePokedex",
      "id": "0x0123",
      "parameters": [],
      "description": "Gives the Pok\u00e9dex to the player",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckShoes",
      "id": "0x0124",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the running shoes, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveShoes",
      "id": "0x0125",
      "parameters": [],
      "description": "Gives the running shoes to the player",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckBadge",
      "id": "0x0126",
      "parameters": [
        "Flex: Badge ID",
        "Var: Variable"
      ],
      "description": "Checks if player has Badge ID badge, stores result in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveBadge",
      "id": "0x0127",
      "parameters": [
        "Flex: Badge ID"
      ],
      "description": "Gives the player Badge ID badge",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountBadges",
      "id": "0x0128",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of badges obtained",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyCheckBag",
      "id": "0x0129",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if flag 0x960 is set, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyGiveBag",
      "id": "0x012A",
      "parameters": [],
      "description": "Sets flag 0x960",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckPartner",
      "id": "0x012B",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the following event flag is activated, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetPartner",
      "id": "0x012C",
      "parameters": [],
      "description": "Activates the following event flag, so you can no longer use the bike, surf, rock climb...",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ClearPartner",
      "id": "0x012D",
      "parameters": [],
      "description": "Deactivates the following event flag, so you can use the bike, surf, rock climb... again",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_12E",
      "id": "0x012E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_12F",
      "id": "0x012F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_130",
      "id": "0x0130",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyCheckGameCompleted",
      "id": "0x0131",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if flag 0x964 is set, stores 0 otherwise",
      "notes": "This flag is not the one that HGSS uses when the player clears the game.",
      "type": "command"
    },
    {
      "name": "DummyGameCompleted",
      "id": "0x0132",
      "parameters": [],
      "description": "Sets flag 0x964",
      "notes": "This flag is not the one that HGSS uses when the player clears the game.",
      "type": "command"
    },
    {
      "name": "DoorAnimation",
      "id": "0x0133",
      "parameters": [
        "u16: Matrix X",
        "u16: Matrix Y",
        "Flex: Map X",
        "Flex: Map Y",
        "u8: Door ID"
      ],
      "description": "Prepares a building located at Map X and Map Y coordinates in a map located at Matrix X and Matrix Y in the current matrix for animation, with Door ID animation ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaitDoor",
      "id": "0x0134",
      "parameters": [
        "u8: Door ID"
      ],
      "description": "Wait animation of building with Door ID animation ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FreeDoor",
      "id": "0x0135",
      "parameters": [
        "u8: Door ID"
      ],
      "description": "Free animation of building with Door ID animation ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "OpenDoor",
      "id": "0x0136",
      "parameters": [
        "u8: Door ID"
      ],
      "description": "Triggers first animation of building with Door ID animation ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CloseDoor",
      "id": "0x0137",
      "parameters": [
        "u8: Door ID"
      ],
      "description": "Triggers second animation of building with Door ID animation ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetDaycareNames",
      "id": "0x0138",
      "parameters": [],
      "description": "Stores first daycare Pok\u00e9mon nickname in string buffer 0, the second daycare Pok\u00e9mon nickname in string buffer 1 and the first Pok\u00e9mon trainer's name in buffer 2",
      "notes": "If there's only one Pok\u00e9mon in the daycare, string buffer 1 does not change. If no Pok\u00e9mon is in the daycare, commands does nothing.",
      "type": "command"
    },
    {
      "name": "GetDaycareStatus",
      "id": "0x0139",
      "parameters": [
        "Var: Variable"
      ],
      "description": "If daycare Pok\u00e9mon have an egg, stores 1 in Variable. Otherwise it stores 0 if no Pok\u00e9mon is in the daycare, 2 if only one Pok\u00e9mon is in the daycare or 3 if there are two Pok\u00e9mon",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_13A",
      "id": "0x013A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_13B",
      "id": "0x013B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_13C",
      "id": "0x013C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_13D",
      "id": "0x013D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_13E",
      "id": "0x013E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_13F",
      "id": "0x013F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_140",
      "id": "0x0140",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "VermillionGymAnimation",
      "id": "0x0141",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "VermillionGymBin",
      "id": "0x0142",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_143",
      "id": "0x0143",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "InitVioletGym",
      "id": "0x0144",
      "parameters": [],
      "description": "Initializes Violet Gym internal data and 3D model animations",
      "notes": "",
      "type": "command"
    },
    {
      "name": "VioletGymElevator",
      "id": "0x0145",
      "parameters": [],
      "description": "Triggers model #111 to move up or down",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_146",
      "id": "0x0146",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AzaleaGym",
      "id": "0x0147",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AzaleaGym2",
      "id": "0x0148",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_149",
      "id": "0x0149",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_14A",
      "id": "0x014A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_14B",
      "id": "0x014B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountPartyPokemon",
      "id": "0x014C",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current number of Pok\u00e9mon in the party",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_14D",
      "id": "0x014D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_14E",
      "id": "0x014E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_14F",
      "id": "0x014F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_150",
      "id": "0x0150",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_151",
      "id": "0x0151",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetOWDefaultPosition",
      "id": "0x0152",
      "parameters": [
        "Flex: Event ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Sets Event ID spawn position to global coords X and Y",
      "notes": "Default here means it needs to be applied before the OW is loaded so that it changes it \"permanently\" by using the field context instead of the laoded map object",
      "type": "command"
    },
    {
      "name": "SetOWPosition",
      "id": "0x0153",
      "parameters": [
        "Flex: Event ID",
        "Flex: X",
        "Flex: Z",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Moves Event ID to global coords X, Y, Z with Dir direction",
      "notes": "Even though some maps are higher, it's often called with a Z (elevation) parameter of 0. Game seems to calculate the correct Z position if it is wrong.",
      "type": "command"
    },
    {
      "name": "SetOWDefaultMovement",
      "id": "0x0154",
      "parameters": [
        "Flex: Event ID",
        "Flex: Movement ID"
      ],
      "description": "Sets Event ID's default move code to Movement ID - Formatted as Move.ID",
      "notes": "Default here means it needs to be applied before the OW is loaded so that it changes it \"permanently\" by using the field context instead of the laoded map object",
      "type": "command"
    },
    {
      "name": "SetOWDefaultDirection",
      "id": "0x0155",
      "parameters": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's default direction to Direction ID",
      "notes": "Default here means it needs to be applied before the OW is loaded so that it changes it \"permanently\" by using the field context instead of the laoded map object",
      "type": "command"
    },
    {
      "name": "SetWarpPosition",
      "id": "0x0156",
      "parameters": [
        "Flex: Warp ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Warp ID to global coords X and Y",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetSpawnablePosition",
      "id": "0x0157",
      "parameters": [
        "Flex: Spawnable ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Spawnable ID to global coords X and Y",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetOWDirection",
      "id": "0x0158",
      "parameters": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's current direction to Direction ID",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_159",
      "id": "0x0159",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_15A",
      "id": "0x015A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_15B",
      "id": "0x015B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WaitTimeOrAB",
      "id": "0x015C",
      "parameters": [
        "Flex: Time"
      ],
      "description": "Stops script execution until Time frames have passed or until user presses A or B buttons",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ChoosePokemonMenu",
      "id": "0x015D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ChoosePokemonMenu2",
      "id": "0x015E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetSelectedPartySlot",
      "id": "0x015F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the selected party slot in a party Pok\u00e9mon screen, or 0xFF is user cancelled the selection",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_160",
      "id": "0x0160",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_161",
      "id": "0x0161",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPartyPokemonID",
      "id": "0x0162",
      "parameters": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the Pok\u00e9mon at Party Position",
      "notes": "It will return 0 if Pok\u00e9mon is an egg.",
      "type": "command"
    },
    {
      "name": "CheckTradedPokemon",
      "id": "0x0163",
      "parameters": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if trainer ID and secret ID of the Pok\u00e9mon at Party Position are the player's ones, stores 1 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountPartyBornPokemon",
      "id": "0x0164",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pok\u00e9mon in the Pok\u00e9mon party, excluding the eggs",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountAlivePokemonExceptFirst",
      "id": "0x0165",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable how many alive Pok\u00e9mon would remain in the Pok\u00e9mon party if Pok\u00e9mon at Party Position disappeared",
      "notes": "Eggs are excluded from the count.",
      "type": "command"
    },
    {
      "name": "CountTotalAlivePokemon",
      "id": "0x0166",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pok\u00e9mon in the Pok\u00e9mon party and PC boxes, excluding the eggs and fainted Pok\u00e9mon",
      "notes": "As Pok\u00e9mon can't be fainted in the PC boxes, only eggs are not taken into account in the PC boxes count.",
      "type": "command"
    },
    {
      "name": "CountPartyEggs",
      "id": "0x0167",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of eggs in the Pok\u00e9mon party",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TakeMoneyFlex",
      "id": "0x0168",
      "parameters": [
        "Flex: Money"
      ],
      "description": "Subtracts Money from the player's money",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_169",
      "id": "0x0169",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_16A",
      "id": "0x016A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_16B",
      "id": "0x016B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DeletePartyPokemon",
      "id": "0x016C",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Deletes the Pok\u00e9mon at Party Position from the party",
      "notes": "The Pok\u00e9mon data is destroyed.",
      "type": "command"
    },
    {
      "name": "CMD_16D",
      "id": "0x016D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_16E",
      "id": "0x016E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_16F",
      "id": "0x016F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CompareMoneyFlex",
      "id": "0x0170",
      "parameters": [
        "Var: Variable",
        "Flex: Money"
      ],
      "description": "Returns 1 to Variable if the player has Money or more money, returns 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "EggHatchScreen",
      "id": "0x0171",
      "parameters": [],
      "description": "Opens the egg hatching screen with an egg in the Pok\u00e9mon party that has 0 steps left for hatching",
      "notes": "This may crash if there's no ready egg in the Pok\u00e9mon party. It's better not to use this command unless you know what are you doing.",
      "type": "command"
    },
    {
      "name": "CMD_172",
      "id": "0x0172",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_173",
      "id": "0x0173",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_174",
      "id": "0x0174",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_175",
      "id": "0x0175",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "UnvanishOverworld",
      "id": "0x0176",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID visible again if it was invisible",
      "notes": "",
      "type": "command"
    },
    {
      "name": "VanishOverworld",
      "id": "0x0177",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID invisible, but still collisionable",
      "notes": "It's a great idea to use this command in a level script for blocking doors with invisible events.",
      "type": "command"
    },
    {
      "name": "MailScreen",
      "id": "0x0178",
      "parameters": [],
      "description": "Opens the mail screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountMail",
      "id": "0x0179",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of mails in the mailbox",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_17A",
      "id": "0x017A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetTimePeriod",
      "id": "0x017B",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current time period of the day",
      "notes": "The different values are:\n0: From 04:00 AM to 09:59 AM (Morning)\n1: From 10:00 AM to 04:59 PM (Noon)\n2: From 05:00 PM to 07:59 PM (Evening)\n3: From 08:00 PM to 11:59 PM (Night)\n4: From 00:00 AM to 03:59 AM (Midnight)",
      "type": "command"
    },
    {
      "name": "GetRandom",
      "id": "0x017C",
      "parameters": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyGetRandom",
      "id": "0x017D",
      "parameters": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable",
      "notes": "Exactly the same code as the command above.",
      "type": "command"
    },
    {
      "name": "GetPokemonHappiness",
      "id": "0x017E",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the happiness of Pok\u00e9mon in Party Position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AddHappiness",
      "id": "0x017F",
      "parameters": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Adds Happiness to the happiness of Pok\u00e9mon in Party Position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SubHappiness",
      "id": "0x0180",
      "parameters": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Subs Happiness to the happiness of Pok\u00e9mon in Party Position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_181",
      "id": "0x0181",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPlayerDirection",
      "id": "0x0182",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the direction the player is looking at",
      "notes": "Predicted. Seeing up gives 0, seeing down gives 1, seeing left gives 2 and seeing right gives 3.",
      "type": "command"
    },
    {
      "name": "CMD_183",
      "id": "0x0183",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_184",
      "id": "0x0184",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckBornPokemonInParty",
      "id": "0x0185",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Pok\u00e9mon is currently in the Pok\u00e9mon party, stores 0 otherwise",
      "notes": "Eggs do not count as Pok\u00e9mon, so they will be ignored.",
      "type": "command"
    },
    {
      "name": "CheckPokemonSizeRecord",
      "id": "0x0186",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores 0 in Variable if Pok\u00e9mon at Party Position does not have a bigger relative size than player's record, stores 1 if it's the same size and stores 2 if it has a bigger relative size",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetPokemonSizeRecord",
      "id": "0x0187",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Stores the relative size of Pok\u00e9mon at Party Position as player's record",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPartyPokemonSize",
      "id": "0x0188",
      "parameters": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the integer part of Pok\u00e9mon at Party Position size in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPokemonRecordSize",
      "id": "0x0189",
      "parameters": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Pok\u00e9mon ID"
      ],
      "description": "Stores the integer part of player's record size, normalized to Pok\u00e9mon ID range, in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ChoosePokemonDelete",
      "id": "0x018A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "StoreDeleteMove",
      "id": "0x018B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountPokemonMoves",
      "id": "0x018C",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of moves that the Pok\u00e9mon at Party Position currently has",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DeleteMove",
      "id": "0x018D",
      "parameters": [
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Deletes the move in Move Slot from the Pok\u00e9mon at Party Position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPartyPokemonMove",
      "id": "0x018E",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores in Variable the ID of the move in Move Slot from the Pok\u00e9mon at Party Position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextPartyPokemonMove",
      "id": "0x018F",
      "parameters": [
        "u8: String Buffer",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores the name of the move in Move Slot from the Pok\u00e9mon at Party Position in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "Strength",
      "id": "0x0190",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n0: Disables Strength so player can no longer move boulders\n1: Allows the player to automatically move Strength boulders\n2: Checks if Strength is activated, store answer in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_191",
      "id": "0x0191",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2",
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_192",
      "id": "0x0192",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2",
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_193",
      "id": "0x0193",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveItemStored",
      "id": "0x0194",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_195",
      "id": "0x0195",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_196",
      "id": "0x0196",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_197",
      "id": "0x0197",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_198",
      "id": "0x0198",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_199",
      "id": "0x0199",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_19A",
      "id": "0x019A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_19B",
      "id": "0x019B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_19C",
      "id": "0x019C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_19D",
      "id": "0x019D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_19E",
      "id": "0x019E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_19F",
      "id": "0x019F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A0",
      "id": "0x01A0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A1",
      "id": "0x01A1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A2",
      "id": "0x01A2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A3",
      "id": "0x01A3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A4",
      "id": "0x01A4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A5",
      "id": "0x01A5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A6",
      "id": "0x01A6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckCompleteJohtoDex",
      "id": "0x01A7",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pok\u00e9mon in the Johto Pok\u00e9dex has been seen, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckCompleteNationalDex",
      "id": "0x01A8",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pok\u00e9mon in the National Pok\u00e9dex has been caught, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1A9",
      "id": "0x01A9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1AA",
      "id": "0x01AA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1AB",
      "id": "0x01AB",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1AC",
      "id": "0x01AC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountFossils",
      "id": "0x01AD",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of fossils in the bag",
      "notes": "Technically it's the number of items in the bag whose ID is between 99 and 105.",
      "type": "command"
    },
    {
      "name": "PreparePokeGearCall",
      "id": "0x01AE",
      "parameters": [
        "Var: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "StartPokeGearCall",
      "id": "0x01AF",
      "parameters": [],
      "description": "Starts the Pok\u00e9Gear phone call that was previously set.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckFossilPokemon",
      "id": "0x01B0",
      "parameters": [
        "Var: Variable",
        "Flex: Item ID"
      ],
      "description": "Stores in Variable the ID of the Pok\u00e9mon to which Item ID fossil belongs",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckFossil",
      "id": "0x01B1",
      "parameters": [
        "Var: Position",
        "Var: Item ID",
        "Flex: Amount"
      ],
      "description": "Stores in Item ID the ID of the first fossil item in the bag that the player has at least Amount quantity of, and stores in Position the amount of fossils in the bag before the first fossil that met the quantity condition",
      "notes": "Stores 0 in both variables if there's no fossil in the bag.",
      "type": "command"
    },
    {
      "name": "CountPokemonUnderLevel",
      "id": "0x01B2",
      "parameters": [
        "Var: Variable",
        "Flex: Level"
      ],
      "description": "Stores in Variable the amount of Pok\u00e9mon in party whose level is equal or lower than Level",
      "notes": "Eggs are completely ignored.",
      "type": "command"
    },
    {
      "name": "SurvivePoison",
      "id": "0x01B3",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "If Pok\u00e9mon at Party Position is poisoned and at 1 HP, it cures the poison and stores 1 in Variable, otherwise it stores 0",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FinishOverworldScreen",
      "id": "0x01B4",
      "parameters": [],
      "description": "Terminates map overworld process",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyGetVar",
      "id": "0x01B5",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Does nothing.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1B6",
      "id": "0x01B6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1B7",
      "id": "0x01B7",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MessageFromArchive",
      "id": "0x01B8",
      "parameters": [
        "Flex: Text Archive",
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from Text Archive text file",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1B9",
      "id": "0x01B9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1BA",
      "id": "0x01BA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1BB",
      "id": "0x01BB",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1BC",
      "id": "0x01BC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPreviousHeaderID",
      "id": "0x01BD",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the header ID of the previous accessed map",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetCurrentHeaderID",
      "id": "0x01BE",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the header ID of the map the player is in",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetSafariFlag",
      "id": "0x01BF",
      "parameters": [
        "u8: Flag",
        "u8: Mode"
      ],
      "description": "If Flag is 0 safari encounters are activated, if Flag is 1 safari encounters are deactivated, being the own safari encounters if Mode is 0 or using the Safari Zone link if 1",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1C0",
      "id": "0x01C0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1C1",
      "id": "0x01C1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GeonetScreen",
      "id": "0x01C2",
      "parameters": [],
      "description": "Opens the Geonet screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1C3",
      "id": "0x01C3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShowPokemonPic",
      "id": "0x01C4",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Gender"
      ],
      "description": "Opens a window with the picture of Pok\u00e9mon with Gender gender and registers the Pok\u00e9mon in the Pok\u00e9dex as seen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "HidePokemonPic",
      "id": "0x01C5",
      "parameters": [],
      "description": "Hides the window of a Pok\u00e9mon picture",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1C6",
      "id": "0x01C6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1C7",
      "id": "0x01C7",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1C8",
      "id": "0x01C8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1C9",
      "id": "0x01C9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1CA",
      "id": "0x01CA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1CB",
      "id": "0x01CB",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1CC",
      "id": "0x01CC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1CD",
      "id": "0x01CD",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1CE",
      "id": "0x01CE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1CF",
      "id": "0x01CF",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "AddRoamingPokemon",
      "id": "0x01D0",
      "parameters": [
        "u8: ID"
      ],
      "description": "Activates a roaming Pokemon depending on the ID",
      "notes": "Uses ID to determine which roaming Pok\u00e9mon must appear: 0 for Entei, 1 for Raikou, 2 for Latias and 3 for Latios.",
      "type": "command"
    },
    {
      "name": "UnionGroup",
      "id": "0x01D1",
      "parameters": [
        "Command format depends on the first parameter:\nu16: 0",
        "Flex: ID",
        "Var: Variable\nu16: 1",
        "Flex: ID",
        "Var: Variable\nu16: 2",
        "Flex: ID",
        "Flex: String Buffer\nu16: 3",
        "Flex: ID",
        "Flex: String Buffer\nu16: 4",
        "Var: Variable\nu16: 5",
        "Flex: ID\nu16: 6\nu16: 7",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n0: Checks if group ID exists, returns answer in Variable\n1: Checks if group ID is accesible, returns answer in Variable\n2: Writes group ID name in String Buffer\n3: Writes leader's name of Group ID in String Buffer\n4: Opens keyboard, stores 1 in Variable if user cancels, 2 if group name already exists, 0 otherwise\n5: Enter in group ID\n6: Creates a group\n7: ???",
      "notes": "This command is the devil.",
      "type": "command"
    },
    {
      "name": "CMD_1D2",
      "id": "0x01D2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ChoosePokemonRem",
      "id": "0x01D3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1D4",
      "id": "0x01D4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "StoreMoveRem",
      "id": "0x01D5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "InitTrade",
      "id": "0x01D6",
      "parameters": [
        "u8: Trade ID"
      ],
      "description": "Initializes Trade ID trade data",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetOfferedPokemon",
      "id": "0x01D7",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the offered Pok\u00e9mon of the current trade data",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetRequestedPokemon",
      "id": "0x01D8",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the requested Pok\u00e9mon of the current trade data",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TradePokemonScreen",
      "id": "0x01D9",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Opens the trade Pok\u00e9mon screen, giving the Pok\u00e9mon at Party Position and receiving the offered Pok\u00e9mon of the current trade data",
      "notes": "",
      "type": "command"
    },
    {
      "name": "EndTrade",
      "id": "0x01DA",
      "parameters": [],
      "description": "Frees the current trade data from the memory",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyInternationalDex",
      "id": "0x01DB",
      "parameters": [],
      "description": "Nothing",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyDimorphismDex",
      "id": "0x01DC",
      "parameters": [],
      "description": "Nothing",
      "notes": "In fact it does activate a dimorphism flag in the Pok\u00e9dex data, but since the HGSS Pok\u00e9dex has the gender comparision by default, command's actual purpose is not noticeable.",
      "type": "command"
    },
    {
      "name": "NationalDex",
      "id": "0x01DD",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 1",
        "Var: Unused\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n1: Activates the National Pok\u00e9dex mode\n2: Stores 1 in Variable if player has the National Pok\u00e9dex, otherwise it stores 0",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountPokemonRibbons",
      "id": "0x01DE",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the amount of ribbons that the Pok\u00e9mon in Party Position has",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountPartyRibbons",
      "id": "0x01DF",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total amount of different ribbons in the current Pok\u00e9mon party",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckRibbon",
      "id": "0x01E0",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Stores 1 in Variable if the Pok\u00e9mon in Party Position has the Ribbon ribbon, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveRibbon",
      "id": "0x01E1",
      "parameters": [
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Gives the Ribbon ribbon to Pok\u00e9mon in Party Position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextRibbon",
      "id": "0x01E2",
      "parameters": [
        "u8: String Buffer",
        "Flex: Ribbon"
      ],
      "description": "Stores the name of the Ribbon in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountPokemonEVs",
      "id": "0x01E3",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of effort values of Pok\u00e9mon in Party Position",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "GetDayOfWeek",
      "id": "0x01E4",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current day of the week",
      "notes": "Value 0 is the first possible value and it's for Sunday.",
      "type": "command"
    },
    {
      "name": "ShowRulesList",
      "id": "0x01E5",
      "parameters": [
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyGetPokemonFootprint",
      "id": "0x01E6",
      "parameters": [],
      "description": "Nothing",
      "notes": "",
      "type": "command"
    },
    {
      "name": "PCHealAnimation",
      "id": "0x01E7",
      "parameters": [
        "Flex: Pok\u00e9Balls"
      ],
      "description": "Triggers the Pok\u00e9mon Center healing animation with Pok\u00e9Balls number of player's Pok\u00e9mon",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ElevatorAnimation",
      "id": "0x01E8",
      "parameters": [
        "Flex: Direction",
        "Flex: Count"
      ],
      "description": "Triggers the animation of building #208 up (if Direction is 0) or down (if Direction is 1) Count consecutive times",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MysteryGiftGive",
      "id": "0x01E9",
      "parameters": [
        "Command format depends on the first parameter:\nu16: 0\nu16: 1",
        "Var: Variable\nu16: 2",
        "Var: Variable\nu16: 3",
        "Var: Variable\nu16: 4\nu16: 5",
        "Var: Text File",
        "Var: Text Line\nu16: 6",
        "Var: Text File",
        "Var: Text Line\nu16: 7\nu16: 8"
      ],
      "description": "Function depends on the first parameter:\n0: Initializes the data for receiving a Mystery Gift\n1: Checks if there is a Mystery Gift, stores answer in Variable\n2: Stores the Mystery Gift ID in Variable\n3: Checks if player can receive the Mystery Gift, stores answer in Variable\n4: Gives the Mystery Gift to the player\n5: Shows the succeed text at Text File file and Text Line slot\n6: Shows the unable text at Text File file and Text Line slot\n7: Ends the Mystery Gift process\n8: Saves data and ends the Mystery Gift process",
      "notes": "This one too.",
      "type": "command"
    },
    {
      "name": "CMD_1EA",
      "id": "0x01EA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1EB",
      "id": "0x01EB",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1EC",
      "id": "0x01EC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1ED",
      "id": "0x01ED",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1EE",
      "id": "0x01EE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckVersion",
      "id": "0x01EF",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Returns 0x7 to Variable if game is HeartGold, 0x8 if SoulSilver",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FirstPokemonInParty",
      "id": "0x01F0",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the slot of the first Pok\u00e9mon in the party that is not an egg",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPartyPokemonTypes",
      "id": "0x01F1",
      "parameters": [
        "Var: Type1",
        "Var: Type2",
        "Flex: Party Slot"
      ],
      "description": "Gets the types of the Pok\u00e9mon at a given Party Slot and stores them in Type1 and Type2 respectively.",
      "notes": "The value of Type1 and Type2 will be the same if the selected Pok\u00e9mon doesn't have two types.",
      "type": "command"
    },
    {
      "name": "CMD_1F2",
      "id": "0x01F2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1F3",
      "id": "0x01F3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1F4",
      "id": "0x01F4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1F5",
      "id": "0x01F5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1F6",
      "id": "0x01F6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetLottoNumber",
      "id": "0x01F7",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores Lotto random number in Variable",
      "notes": "Supposed by analogy with Platinum.",
      "type": "command"
    },
    {
      "name": "CheckWinLotto",
      "id": "0x01F8",
      "parameters": [
        "Var: MatchPos",
        "Var: Digits",
        "Var: PC",
        "Flex: Winning Number"
      ],
      "description": "Takes a Winning Number as input and responds as follows.\nIf no matching Pok\u00e9mon could be found or an error occurs: \nMatchPos: 0; Digits: 0; PC: 0.\n\nFor all other cases:\n\nIf the matching Pok\u00e9mon is in the Player's party, PC will be assigned 0.\nOtherwise, if it's in the Player's Storage System, PC will be assigned 1.\n\nMatchPos stores the zero-based position of the winning Pok\u00e9mon (either as Party pos or Storage System pos, depending on the value of PC).\n\nWhen there's a match, the Digits var is assigned the number of matching digits of the Winning Pok\u00e9mon's PID.\nIn case of multiple matches, priority is always given to the one with the most matching digits.",
      "notes": "Supposed by analogy with Platinum.\n\nTo retrieve the exact position of a winning Pok\u00e9mon in the Storage System, first make sure PC equals 1. \n\nThe zero-based PC Page and Position indices can be calculated:\n\nPC Page index = MatchPos / 30\nPosition in page = MatchPos % 30\n\nwhere % is the modulo operator.",
      "type": "command"
    },
    {
      "name": "InitLotto",
      "id": "0x01F9",
      "parameters": [],
      "description": "Generates two random numbers and assigns them to two system lottery variables.",
      "notes": "Supposed by analogy with Platinum.",
      "type": "command"
    },
    {
      "name": "CMD_1FA",
      "id": "0x01FA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountPCFreeSpace",
      "id": "0x01FB",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the amount of free Pok\u00e9mon slots in PC boxes",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1FC",
      "id": "0x01FC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1FD",
      "id": "0x01FD",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_1FE",
      "id": "0x01FE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "StoreFriendParkResult",
      "id": "0x01FF",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_200",
      "id": "0x0200",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_201",
      "id": "0x0201",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_202",
      "id": "0x0202",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_203",
      "id": "0x0203",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextAccessory",
      "id": "0x0204",
      "parameters": [
        "u8: String Buffer",
        "Flex: Accesory"
      ],
      "description": "Stores Accesory's name in String Buffer",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckPokemonInParty",
      "id": "0x0205",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Pok\u00e9mon (or its egg) is currently in the Pok\u00e9mon party, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetDeoxysForm",
      "id": "0x0206",
      "parameters": [
        "Flex: Form"
      ],
      "description": "Sets every Deoxys in the Pok\u00e9mon party the Form form",
      "notes": "Form 0 is Normal, form 1 is Attack, form 2 is Defense and form 3 is Speed.",
      "type": "command"
    },
    {
      "name": "CheckBurmyForms",
      "id": "0x0207",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of current different Burmy forms in the Pok\u00e9mon party",
      "notes": "Returns 0 if player has no Burmy in the party, 1 if only one different form, 2 if two different forms and 3 if has three or more Burmy with three different forms.",
      "type": "command"
    },
    {
      "name": "CMD_208",
      "id": "0x0208",
      "parameters": [],
      "description": "???",
      "notes": "Sets a internal flag.",
      "type": "command"
    },
    {
      "name": "CMD_209",
      "id": "0x0209",
      "parameters": [],
      "description": "???",
      "notes": "Resets a internal flag.",
      "type": "command"
    },
    {
      "name": "GetHour",
      "id": "0x020A",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores current hour from RTC in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShakeOverworld",
      "id": "0x020B",
      "parameters": [
        "Flex: Event ID",
        "Flex: Count",
        "Flex: Time",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Makes Event ID overworld shake Count times in Time frames, moving X horizontally and Y vertically each shake",
      "notes": "Event ID must be released before this command in order to see the animation.",
      "type": "command"
    },
    {
      "name": "BlinkOverworld",
      "id": "0x020C",
      "parameters": [
        "Flex: ???",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckRegis",
      "id": "0x020D",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the 3 Regis in the party, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_20E",
      "id": "0x020E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MessageUnown",
      "id": "0x020F",
      "parameters": [
        "u16: Text Slot"
      ],
      "description": "Display line Text Slot from the text file with the Unown font",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "CheckGBACartidge",
      "id": "0x0210",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the current GBA cartridge ID in Variable",
      "notes": "Stores 0 if no cartridge, 1 if Pok\u00e9mon Sapphire, 2 if Pok\u00e9mon Ruby, 3 if Pok\u00e9mon Emerald, 4 if Pok\u00e9mon FireRed and 5 if Pok\u00e9mon LeafGreen. Somehow it could also set 7 if Pok\u00e9mon Gold, 8 if Pok\u00e9mon Silver, 10 if Pok\u00e9mon Diamond, 11 if Pok\u00e9mon Pearl, 12 if Pok\u00e9mon Platinum and 15 if Pok\u00e9mon Colosseum.",
      "type": "command"
    },
    {
      "name": "GetFirstAlivePokemonSlot",
      "id": "0x0211",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the slot of the first Pok\u00e9mon in the party that is not an egg nor is fainted",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "SetMatrixAlternativeMap",
      "id": "0x0212",
      "parameters": [
        "Flex: Alternative ID",
        "u8: Status"
      ],
      "description": "Permanently changes a worldmap matrix cell corresponding to Alternative ID if Status is 1, reverts the change if 0",
      "notes": "It only changes the map file value in the matrix, not the map header nor the map height. Seems that the only Alternative ID available values are 0 and 1, corresponding to Mahogany Town and to the Lake of Rage.",
      "type": "command"
    },
    {
      "name": "CMD_213",
      "id": "0x0213",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_214",
      "id": "0x0214",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_215",
      "id": "0x0215",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_216",
      "id": "0x0216",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPokemonLevel",
      "id": "0x0217",
      "parameters": [
        "Var: Result",
        "Flex: Party Slot"
      ],
      "description": "Stores into Result the level of the Pok\u00e9mon at a given Party Slot.",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_218",
      "id": "0x0218",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_219",
      "id": "0x0219",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_21A",
      "id": "0x021A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_21B",
      "id": "0x021B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_21C",
      "id": "0x021C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextNumberSp",
      "id": "0x021D",
      "parameters": [
        "u8: String Buffer",
        "Flex: Number",
        "u8: Alignment Type",
        "u8: Digits"
      ],
      "description": "Stores a Number in String Buffer with Alignment Type alignment and Digits length",
      "notes": "Predicted. Alignment Type 0 is left-alignment, 1 is right alignment padded with spaces and 2 is right alignment padded with zeros. Digits is used only in these last two types.",
      "type": "command"
    },
    {
      "name": "CMD_21E",
      "id": "0x021E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckBirthday",
      "id": "0x021F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the current day is the player's birthday, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MusicVolumeSet",
      "id": "0x0220",
      "parameters": [
        "Flex: Music ID",
        "Flex: Volume"
      ],
      "description": "Identifies the BGM Player which is playing Music ID and sets its Volume",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CountSeenUnown",
      "id": "0x0221",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of different seen Unown forms",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_222",
      "id": "0x0222",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_223",
      "id": "0x0223",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_224",
      "id": "0x0224",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_225",
      "id": "0x0225",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_226",
      "id": "0x0226",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_227",
      "id": "0x0227",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_228",
      "id": "0x0228",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_229",
      "id": "0x0229",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_22A",
      "id": "0x022A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_22B",
      "id": "0x022B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_22C",
      "id": "0x022C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_22D",
      "id": "0x022D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_22E",
      "id": "0x022E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_22F",
      "id": "0x022F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_230",
      "id": "0x0230",
      "parameters": [
        "Flex: ???",
        "Var: ???"
      ],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShakeCamera",
      "id": "0x0231",
      "parameters": [
        "Flex: X Magnitude",
        "Flex: Y Magnitude",
        "Flex: Count",
        "Flex: Time"
      ],
      "description": "Shakes the screen vertically and/or horizontally, moving the camera X Magnitude pixels horizontally and Y Magnitude pixels vertically in each shake, with Count total shakes of Time frames each one",
      "notes": "Don't abuse this command, as it seems that camera might end up 1 pixel up or down in each animation, especially when Count is an odd number.",
      "type": "command"
    },
    {
      "name": "Battle2vs2",
      "id": "0x0232",
      "parameters": [
        "Flex: Partner Trainer ID",
        "Flex: Trainer 1 ID",
        "Flex: Trainer 2 ID",
        "u8: ???"
      ],
      "description": "Starts a double battle with Partner Trainer ID versus Trainer 1 ID and Trainer 2 ID",
      "notes": "Last parameter seems to always be 0x1.",
      "type": "command"
    },
    {
      "name": "CMD_233",
      "id": "0x0233",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_234",
      "id": "0x0234",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_235",
      "id": "0x0235",
      "parameters": [
        "Var: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "PartyPokemonTradeScreen",
      "id": "0x0236",
      "parameters": [],
      "description": "Opens the party Pok\u00e9mon screen for a trade",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_237",
      "id": "0x0237",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_238",
      "id": "0x0238",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_239",
      "id": "0x0239",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_23A",
      "id": "0x023A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_23B",
      "id": "0x023B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_23C",
      "id": "0x023C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_23D",
      "id": "0x023D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_23E",
      "id": "0x023E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_23F",
      "id": "0x023F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_240",
      "id": "0x0240",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_241",
      "id": "0x0241",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_242",
      "id": "0x0242",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_243",
      "id": "0x0243",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_244",
      "id": "0x0244",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_245",
      "id": "0x0245",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_246",
      "id": "0x0246",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_247",
      "id": "0x0247",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_248",
      "id": "0x0248",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_249",
      "id": "0x0249",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_24A",
      "id": "0x024A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_24B",
      "id": "0x024B",
      "parameters": [],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_24C",
      "id": "0x024C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WildBattleSp",
      "id": "0x024D",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Level",
        "u8: Shiny Flag"
      ],
      "description": "Starts a wild battle against a Pok\u00e9mon of level Level, and shiny if Shiny Flag is 1",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckTrainerCardLevel",
      "id": "0x024E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current trainer card level",
      "notes": "",
      "type": "command"
    },
    {
      "name": "DummyRideBike",
      "id": "0x024F",
      "parameters": [],
      "description": "Nothing",
      "notes": "Seems to allocate the bike music in the RAM but doesn't play it.",
      "type": "command"
    },
    {
      "name": "CMD_250",
      "id": "0x0250",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShowSaveBox",
      "id": "0x0251",
      "parameters": [],
      "description": "Displays the save data box (current map name, player's name, the amount of badges, the Pok\u00e9dex counter and the play time)",
      "notes": "",
      "type": "command"
    },
    {
      "name": "HideSaveBox",
      "id": "0x0252",
      "parameters": [],
      "description": "Hides the save data box",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ScopeMode",
      "id": "0x0253",
      "parameters": [
        "u8: Mode"
      ],
      "description": "If Mode is 1, activates the scope mode, otherwise the command deactivates the scope mode",
      "notes": "The scope mode prevents the game to do certain actions (like reseting system flags) when changing map, and probably it's related with more things.",
      "type": "command"
    },
    {
      "name": "GetFollowingPokeSize",
      "id": "0x0254",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the current following Pok\u00e9mon is small and can follow the player indoors, stores 1 if it's big and can't follow the player indoors",
      "notes": "In fact it returns the second byte of the following Pok\u00e9mon data files, stored in a/1/4/1.narc, which is the one that the game reads for allowing Pok\u00e9mon entering in buildings. This command will work even if a SendBackFollowingPoke is used and the following Pok\u00e9mon is hidden at that moment.",
      "type": "command"
    },
    {
      "name": "CMD_255",
      "id": "0x0255",
      "parameters": [],
      "description": "???",
      "notes": "Draws a heart icon above the following Pok\u00e9mon. Maybe a dummy command?",
      "type": "command"
    },
    {
      "name": "CMD_256",
      "id": "0x0256",
      "parameters": [
        "u16: ???"
      ],
      "description": "???",
      "notes": "Parameter must be 1 or 2, otherwise command won't do anything. Seems to trigger a default movement for switching current player's and following Pok\u00e9mon positions (for example, when using a HM).",
      "type": "command"
    },
    {
      "name": "FollowingPokePCAnimation",
      "id": "0x0257",
      "parameters": [],
      "description": "Triggers the animation of sending the current following Pok\u00e9mon back to its Pok\u00e9Ball over the Pok\u00e9mon Center healing counter",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SendBackFollowingPoke",
      "id": "0x0258",
      "parameters": [],
      "description": "Triggers the animation of sending the current following Pok\u00e9mon back to its Pok\u00e9Ball and deactivates the following Pok\u00e9mon until the game is reset or a warp is used",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FollowingPokeFacePlayer",
      "id": "0x0259",
      "parameters": [],
      "description": "Makes the invoking event look at the player, but with a size limitation",
      "notes": "When the following Pokemon has a big size, it won't turn to the player if there is an overworld on the opposite side so it would collide. The checked flag is the second byte of the Parameter 1 field, which could be called \"double size overworlds\" flag, as it is also used for drawing two grass patches in the tall grass for the following Pokemon.",
      "type": "command"
    },
    {
      "name": "LockFollowingPoke",
      "id": "0x025A",
      "parameters": [
        "u16: Operation"
      ],
      "description": "Releases the following Pokemon animation if Operation is 0, locks the animation otherwise",
      "notes": "Predicted comparing ASM with Lock and Release commands.",
      "type": "command"
    },
    {
      "name": "WaitFollowingPoke",
      "id": "0x025B",
      "parameters": [],
      "description": "Waits the following Pokemon to end its last movement",
      "notes": "Predicted comparing ASM with Lock and Release commands.",
      "type": "command"
    },
    {
      "name": "SetFollowingPokeMovement",
      "id": "0x025C",
      "parameters": [
        "u16: Move Code"
      ],
      "description": "Changes the following Pokemon default movement to Move Code",
      "notes": "The most important movement IDs are 0x30 and 0x38 (following and ghost-following behaviours respectively).",
      "type": "command"
    },
    {
      "name": "SetFollowingPokePosition",
      "id": "0x025D",
      "parameters": [
        "u8: Position",
        "u8: Direction"
      ],
      "description": "Moves the following Pok\u00e9mon to one tile Position next to player and facing at Direction",
      "notes": "For both parameters, up is 0, down is 1, left is 2 and right is 3.",
      "type": "command"
    },
    {
      "name": "BallResetFollowingPoke",
      "id": "0x025E",
      "parameters": [],
      "description": "Moves the following Pok\u00e9mon to the current player's position, and triggers the animation of sending the Pok\u00e9mon out of its Pok\u00e9Ball after the player walks a step",
      "notes": "This is commonly used after a different event following the player, so the player sends out the following Pok\u00e9mon in the next step (instead of forcing it automatically with SendOutFollowingPoke).",
      "type": "command"
    },
    {
      "name": "NoBallResetFollowingPoke",
      "id": "0x025F",
      "parameters": [],
      "description": "Moves the following Pok\u00e9mon to the current player's position",
      "notes": "Almost same as BallResetFollowingPoke, but without the Pok\u00e9Ball animation (exactly like when a small Pok\u00e9mon spawns after the player uses a warp).",
      "type": "command"
    },
    {
      "name": "SendOutFollowingPoke",
      "id": "0x0260",
      "parameters": [],
      "description": "Triggers the animation of sending the first non-fainted Pok\u00e9mon out of its Pok\u00e9Ball and spawns it on the last player position",
      "notes": "Seems to be needed for refreshing/forcing its apparition after a Warp on the same map.",
      "type": "command"
    },
    {
      "name": "MecScript",
      "id": "0x0261",
      "parameters": [],
      "description": "???",
      "notes": "It's used in a lot of scripts that involve following Pok\u00e9mon movements, placed at the top of them. Seems that it resets a lot of following Pok\u00e9mon movement parameters and data.",
      "type": "command"
    },
    {
      "name": "CMD_262",
      "id": "0x0262",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_263",
      "id": "0x0263",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_264",
      "id": "0x0264",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_265",
      "id": "0x0265",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_266",
      "id": "0x0266",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "MakePhoto",
      "id": "0x0267",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_268",
      "id": "0x0268",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_269",
      "id": "0x0269",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckAlbumPhoto",
      "id": "0x026A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_26B",
      "id": "0x026B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_26C",
      "id": "0x026C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_26D",
      "id": "0x026D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetOWDirection",
      "id": "0x026E",
      "parameters": [
        "u16: Event ID",
        "Var: Variable"
      ],
      "description": "Stores in Variable the current direction which Event ID is facing",
      "notes": "Up is 0, Down is 1, Left is 2 and Right is 3.",
      "type": "command"
    },
    {
      "name": "HarvestApricorn",
      "id": "0x026F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "If the invoking OW is a fully-grown Apricorn tree (has an entry ID between 263 and 269), it stores 1 in Variable and triggers the harvesting animation. The invoking OW entry ID is set to 262.\n\nIn every other case (including when entry ID is 262), stores 0 in Variable and does nothing.",
      "notes": "The entry ID is not necessarily the one that is defined in the Event file, but rather what is actually visible/present at the time of interaction.",
      "type": "command"
    },
    {
      "name": "GetApricornColor",
      "id": "0x0270",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores value 0-6 in Variable, which represents the Apricorn color, hardcoded based on tree ID.\nThe correct color is returned regardless of whether the apricorn is available to harvest or not.",
      "notes": "Color codes:\nRed = 0\nYellow = 1\nBlue = 2\nGreen = 3\nPink = 4\nWhite = 5\nBlack = 6\n\nThe color assigned to each tree can be changed by accessing arm9.bin at offset 0xF6784 in HeartGold USA (31 bytes, one per tree).\nN.B.: Color codes are offset by +1 in the arm9 table (Red is 1).",
      "type": "command"
    },
    {
      "name": "GiveApricorn",
      "id": "0x0271",
      "parameters": [
        "Flex: Color",
        "Flex: Number",
        "Var: Variable"
      ],
      "description": "Attempts to add the specified Number of Apricorns of a given Color to the player's inventory. \nStores 1 in Variable if successful, or 0 if failed (couldn't exceed 99 Apricorns).",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextApricorn",
      "id": "0x0272",
      "parameters": [
        "u8: String Buffer",
        "Flex: Color"
      ],
      "description": "Stores the name of a colored Apricorn in String Buffer.",
      "notes": "If a Color value of 7 or greater is passed, it will be changed to 0 internally.",
      "type": "command"
    },
    {
      "name": "CMD_273",
      "id": "0x0273",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_274",
      "id": "0x0274",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_275",
      "id": "0x0275",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_276",
      "id": "0x0276",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_277",
      "id": "0x0277",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_278",
      "id": "0x0278",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_279",
      "id": "0x0279",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_27A",
      "id": "0x027A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_27B",
      "id": "0x027B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_27C",
      "id": "0x027C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_27D",
      "id": "0x027D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_27E",
      "id": "0x027E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_27F",
      "id": "0x027F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_280",
      "id": "0x0280",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_281",
      "id": "0x0281",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_282",
      "id": "0x0282",
      "parameters": [
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_283",
      "id": "0x0283",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_284",
      "id": "0x0284",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_285",
      "id": "0x0285",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_286",
      "id": "0x0286",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_287",
      "id": "0x0287",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_288",
      "id": "0x0288",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ScratchOffScreen",
      "id": "0x0289",
      "parameters": [],
      "description": "Loads and displays Scratch-off card interface.",
      "notes": "This command allocates resources to open an app.\nSee: ReleaseScriptApp.",
      "type": "command"
    },
    {
      "name": "ReleaseScriptApp",
      "id": "0x028A",
      "parameters": [],
      "description": "Releases resources that were previously allocated by a script command that runs an app.",
      "notes": "Used after Scratch-off app.",
      "type": "command"
    },
    {
      "name": "CMD_28B",
      "id": "0x028B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_28C",
      "id": "0x028C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_28D",
      "id": "0x028D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_28E",
      "id": "0x028E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_28F",
      "id": "0x028F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckHeadbuttCompatibility",
      "id": "0x0290",
      "parameters": [
        "Flex: Party Slot",
        "Var: Variable"
      ],
      "description": "Stores 1 into Variable if the Pok\u00e9mon at the given Party Slot can learn Headbutt.",
      "notes": "Ilex Forest Tutor: Script File 92, Script 3",
      "type": "command"
    },
    {
      "name": "CMD_291",
      "id": "0x0291",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_292",
      "id": "0x0292",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_293",
      "id": "0x0293",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_294",
      "id": "0x0294",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_295",
      "id": "0x0295",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_296",
      "id": "0x0296",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_297",
      "id": "0x0297",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_298",
      "id": "0x0298",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_299",
      "id": "0x0299",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_29A",
      "id": "0x029A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_29B",
      "id": "0x029B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_29C",
      "id": "0x029C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_29D",
      "id": "0x029D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_29E",
      "id": "0x029E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_29F",
      "id": "0x029F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A0",
      "id": "0x02A0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A1",
      "id": "0x02A1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A2",
      "id": "0x02A2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A3",
      "id": "0x02A3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A4",
      "id": "0x02A4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A5",
      "id": "0x02A5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A6",
      "id": "0x02A6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A7",
      "id": "0x02A7",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A8",
      "id": "0x02A8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2A9",
      "id": "0x02A9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2AA",
      "id": "0x02AA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetBattleOutcome",
      "id": "0x02AB",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the result of the last battle Variable",
      "notes": "Values are:\n1: Battle won\n2: Battle lost\n3: Tie\n4: Wild mon was caught\n5: You escaped\n6: Wild mon escaped",
      "type": "command"
    },
    {
      "name": "GetCurrentWeather",
      "id": "0x02AC",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the current weather in Variable",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GetPlayerPositionFull",
      "id": "0x02AD",
      "parameters": [
        "Var: X",
        "Var: Z",
        "Var: Y"
      ],
      "description": "Saves the current player position in X, Z, and Y.",
      "notes": "Mind the param order. Z is the elevation.",
      "type": "command"
    },
    {
      "name": "WildBattleFateful",
      "id": "0x02AE",
      "parameters": [
        "Flex: Pok\u00e9mon",
        "Flex: Level"
      ],
      "description": "Starts a static encounter battle against a Pok\u00e9mon of predefined Level",
      "notes": "The difference between this and WildBattle is that the wild mon has a special \"distribution mon\" (fateful encounter) flag enabled.",
      "type": "command"
    },
    {
      "name": "RegisterSeenPokemon",
      "id": "0x02AF",
      "parameters": [
        "Flex: Pok\u00e9mon"
      ],
      "description": "Marks Pok\u00e9mon in the Pok\u00e9dex as seen if it hasn't been caught",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B0",
      "id": "0x02B0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B1",
      "id": "0x02B1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B2",
      "id": "0x02B2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B3",
      "id": "0x02B3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B4",
      "id": "0x02B4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B5",
      "id": "0x02B5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B6",
      "id": "0x02B6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B7",
      "id": "0x02B7",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B8",
      "id": "0x02B8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2B9",
      "id": "0x02B9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2BA",
      "id": "0x02BA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2BB",
      "id": "0x02BB",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckWildBattle2",
      "id": "0x02BC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "WildBattle2",
      "id": "0x02BD",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2BE",
      "id": "0x02BE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetFieldVolume",
      "id": "0x02BF",
      "parameters": [
        "Flex: Volume"
      ],
      "description": "Sets PLAYER_FIELD's Volume to passed value.",
      "notes": "0 to 127 only.",
      "type": "command"
    },
    {
      "name": "CMD_2C0",
      "id": "0x02C0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2C1",
      "id": "0x02C1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2C2",
      "id": "0x02C2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2C3",
      "id": "0x02C3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "FloorTrapAnimation",
      "id": "0x02C4",
      "parameters": [],
      "description": "Triggers Team Rocket HQ trap-floor's graphical effect in the player's current position",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2C5",
      "id": "0x02C5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2C6",
      "id": "0x02C6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TalkFollowingPoke",
      "id": "0x02C7",
      "parameters": [],
      "description": "The following Pok\u00e9mon triggers a random movement, and then a random following message",
      "notes": "This seems to be the command that executes when the player talks to the following Pok\u00e9mon (at script #163). Files in a/2/2/0.narc link map names to possible texts. The following Pok\u00e9mon ends up locked, so a Release should be used after this command.",
      "type": "command"
    },
    {
      "name": "CMD_2C8",
      "id": "0x02C8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2C9",
      "id": "0x02C9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2CA",
      "id": "0x02CA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetDayCareOverworlds",
      "id": "0x02CB",
      "parameters": [],
      "description": "Deletes the Pok\u00e9mon overworlds in the Pok\u00e9mon Day Care, then adds new Pok\u00e9mon overworlds based on the Pok\u00e9mon stored in the Day Care",
      "notes": "The overworlds use IDs 0xFA and 0xFB. This script command is called in the Day Care screen-reload level script.",
      "type": "command"
    },
    {
      "name": "CMD_2CC",
      "id": "0x02CC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2CD",
      "id": "0x02CD",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2CE",
      "id": "0x02CE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2CF",
      "id": "0x02CF",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D0",
      "id": "0x02D0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D1",
      "id": "0x02D1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D2",
      "id": "0x02D2",
      "parameters": [
        "u8: ???",
        "u8: ???",
        "u16: ???",
        "u16: ???",
        "u16: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D3",
      "id": "0x02D3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D4",
      "id": "0x02D4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D5",
      "id": "0x02D5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D6",
      "id": "0x02D6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D7",
      "id": "0x02D7",
      "parameters": [
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2D8",
      "id": "0x02D8",
      "parameters": [
        "u8: ???",
        "u8: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckAlivePokemon",
      "id": "0x02D9",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Checks if player has at least 1 not fainted Pok\u00e9mon, stores the result in Variable",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "CheckFollowingPoke",
      "id": "0x02DA",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Checks if player has a following Pok\u00e9mon, stores the result in Variable",
      "notes": "Supposed.",
      "type": "command"
    },
    {
      "name": "CMD_2DB",
      "id": "0x02DB",
      "parameters": [],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2DC",
      "id": "0x02DC",
      "parameters": [
        "u8: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2DD",
      "id": "0x02DD",
      "parameters": [
        "u8: ???",
        "Var: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2DE",
      "id": "0x02DE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2DF",
      "id": "0x02DF",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E0",
      "id": "0x02E0",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E1",
      "id": "0x02E1",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E2",
      "id": "0x02E2",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E3",
      "id": "0x02E3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E4",
      "id": "0x02E4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E5",
      "id": "0x02E5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E6",
      "id": "0x02E6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E7",
      "id": "0x02E7",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E8",
      "id": "0x02E8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2E9",
      "id": "0x02E9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "OpenTouchScreen",
      "id": "0x02EA",
      "parameters": [],
      "description": "Changes the low screen design to the green Pok\u00e9ball background",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CloseTouchScreen",
      "id": "0x02EB",
      "parameters": [],
      "description": "Sets the default low screen design",
      "notes": "",
      "type": "command"
    },
    {
      "name": "YesNoTouchScreen",
      "id": "0x02EC",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Opens a Yes-No selection, stores player's answer in Variable",
      "notes": "Crashes if OpenTouchScreen is not used previously.",
      "type": "command"
    },
    {
      "name": "MultiTouchStandardText",
      "id": "0x02ED",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: ???",
        "u8: ???",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu with text bank #191, returns selected slot ID in Selection",
      "notes": "The X and Y parameters seem to have no effect.",
      "type": "command"
    },
    {
      "name": "MultiTouchLocalText",
      "id": "0x02EE",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: ???",
        "u8: ???",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu with local texts, returns selected slot ID in Selection",
      "notes": "The X and Y parameters seem to have no effect.",
      "type": "command"
    },
    {
      "name": "CreateMultiTouchBox",
      "id": "0x02EF",
      "parameters": [
        "Flex: Text Slot",
        "Flex: ???",
        "Flex: Multi Box Slot"
      ],
      "description": "Adds a box with Multi Box Slot ID showing Text Slot text",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CloseMultiTouch",
      "id": "0x02F0",
      "parameters": [],
      "description": "Closes the multiple selection boxes",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F1",
      "id": "0x02F1",
      "parameters": [
        "Flex: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F2",
      "id": "0x02F2",
      "parameters": [
        "Var: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F3",
      "id": "0x02F3",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F4",
      "id": "0x02F4",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F5",
      "id": "0x02F5",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F6",
      "id": "0x02F6",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F7",
      "id": "0x02F7",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F8",
      "id": "0x02F8",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2F9",
      "id": "0x02F9",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2FA",
      "id": "0x02FA",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2FB",
      "id": "0x02FB",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2FC",
      "id": "0x02FC",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2FD",
      "id": "0x02FD",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2FE",
      "id": "0x02FE",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_2FF",
      "id": "0x02FF",
      "parameters": [],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_300",
      "id": "0x0300",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_301",
      "id": "0x0301",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_302",
      "id": "0x0302",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_303",
      "id": "0x0303",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_304",
      "id": "0x0304",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_305",
      "id": "0x0305",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_306",
      "id": "0x0306",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_307",
      "id": "0x0307",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_308",
      "id": "0x0308",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_309",
      "id": "0x0309",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_30A",
      "id": "0x030A",
      "parameters": [],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_30B",
      "id": "0x030B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_30C",
      "id": "0x030C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_30D",
      "id": "0x030D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_30E",
      "id": "0x030E",
      "parameters": [],
      "description": "???",
      "notes": "Related with the mart interface.",
      "type": "command"
    },
    {
      "name": "CMD_30F",
      "id": "0x030F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "OverlayManager",
      "id": "0x0310",
      "parameters": [
        "u8: Table Index",
        "u8: Operation ID"
      ],
      "description": "Loads (Operation ID 0) or unloads (Operation ID 1) one of the overlays in the preset table, based on the Table Index.",
      "notes": "Table indices\n0: Overlay 20\n1: Overlay 24\n2: Overlay 21\n3: Overlay 22\n4: Overlay 25\n\nIndices greater than 4 will do nothing.\nLoading an already loaded overlay or unloading an already unloaded overlay will do nothing, either.",
      "type": "command"
    },
    {
      "name": "CMD_311",
      "id": "0x0311",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_312",
      "id": "0x0312",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_313",
      "id": "0x0313",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_314",
      "id": "0x0314",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_315",
      "id": "0x0315",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_316",
      "id": "0x0316",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_317",
      "id": "0x0317",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_318",
      "id": "0x0318",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TakeMomMoney",
      "id": "0x0319",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "GiveMomMoney",
      "id": "0x031A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "ShowMomMoney",
      "id": "0x031B",
      "parameters": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows mom savings money box at X and Y coordinates of the screen",
      "notes": "",
      "type": "command"
    },
    {
      "name": "HideMomMoney",
      "id": "0x031C",
      "parameters": [],
      "description": "Hides mom savings money box",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_31D",
      "id": "0x031D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_31E",
      "id": "0x031E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_31F",
      "id": "0x031F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_320",
      "id": "0x0320",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_321",
      "id": "0x0321",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_322",
      "id": "0x0322",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_323",
      "id": "0x0323",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_324",
      "id": "0x0324",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_325",
      "id": "0x0325",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_326",
      "id": "0x0326",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_327",
      "id": "0x0327",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_328",
      "id": "0x0328",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_329",
      "id": "0x0329",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_32A",
      "id": "0x032A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_32B",
      "id": "0x032B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_32C",
      "id": "0x032C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_32D",
      "id": "0x032D",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_32E",
      "id": "0x032E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_32F",
      "id": "0x032F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_330",
      "id": "0x0330",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_331",
      "id": "0x0331",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_332",
      "id": "0x0332",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_333",
      "id": "0x0333",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_334",
      "id": "0x0334",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_335",
      "id": "0x0335",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_336",
      "id": "0x0336",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_337",
      "id": "0x0337",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_338",
      "id": "0x0338",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_339",
      "id": "0x0339",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_33A",
      "id": "0x033A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_33B",
      "id": "0x033B",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_33C",
      "id": "0x033C",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_33D",
      "id": "0x033D",
      "parameters": [
        "Var: ???"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_33E",
      "id": "0x033E",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_33F",
      "id": "0x033F",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_340",
      "id": "0x0340",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_341",
      "id": "0x0341",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_342",
      "id": "0x0342",
      "parameters": [
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_343",
      "id": "0x0343",
      "parameters": [
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckJadeOrbRequirements",
      "id": "0x0344",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has both Kyogre and Groudon in the Pok\u00e9mon party and they have been caught in Johto, stores 0 otherwise",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_345",
      "id": "0x0345",
      "parameters": [
        "Var: Variable"
      ],
      "description": "???",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CheckMoneyFull",
      "id": "0x0346",
      "parameters": [
        "u16: Money Account",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the chosen money account is full. \nMoney account 0 = Mom's savings;\nMoney account 1 = Player;",
      "notes": "",
      "type": "command"
    },
    {
      "name": "SetLidCloseSleep",
      "id": "0x0347",
      "parameters": [],
      "description": "",
      "notes": "Seems to set a flag for the lid of the DS putting to sleep or not",
      "type": "command"
    },
    {
      "name": "CMD_348",
      "id": "0x0348",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_349",
      "id": "0x0349",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "CMD_34A",
      "id": "0x034A",
      "parameters": [],
      "description": "",
      "notes": "",
      "type": "command"
    },
    {
      "name": "TextItemLowercase",
      "id": "0x034B",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's lowercase name in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextItemPlural",
      "id": "0x034C",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's plural noun in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextPartyPokemonDefault",
      "id": "0x034D",
      "parameters": [
        "u8: String Buffer",
        "Flex: Party position"
      ],
      "description": "Stores the name of the Pok\u00e9mon in Party Position in String Buffer with default color tags encoding",
      "notes": "International release exclusive. Names stored at text file 238.",
      "type": "command"
    },
    {
      "name": "CMD_34E",
      "id": "0x034E",
      "parameters": [],
      "description": "",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextDPPtStarterSpecies",
      "id": "0x034F",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextFashionItem",
      "id": "0x0350",
      "parameters": [
        "u8: String Buffer",
        "Flex: Accesory"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextTrainerClass",
      "id": "0x0351",
      "parameters": [
        "u8: String Buffer",
        "Flex: Trainer class"
      ],
      "description": "Stores Trainer class' lowercase noun in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextSealPlural",
      "id": "0x0352",
      "parameters": [
        "u8: String Buffer",
        "Flex: Seal"
      ],
      "description": "Stores Seal's plural noun in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextCapitalize",
      "id": "0x0353",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Capitalizes the string currently stored in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextDptStoreFloor",
      "id": "0x0354",
      "parameters": [
        "u8: String Buffer",
        "u8: Floor"
      ],
      "description": "Stores Floor's name in String Buffer",
      "notes": "International release exclusive. Names stored at text file 191, lines 0x74 to 0x7A.",
      "type": "command"
    }
  ]
}