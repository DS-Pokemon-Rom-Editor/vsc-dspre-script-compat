{
  "entries": [
    {
      "name": "Debug",
      "id": "0x0000",
      "parameters": [
        "u16: Variable"
      ],
      "description": "Print variable value in DesMume Console",
      "notes":"",
      "type": "command"
    },
    {
      "name": "LinkScriptOW",
      "id": "0x0001",
      "parameters": [
        "Var: Overworld ID",
        "Var: Script Number"
      ],
      "description": "Link a script to a previously spawned NPC",
      "notes":"",
      "type": "command"
    },
    {
      "name": "End",
      "id": "0x0002",
      "parameters": [],
      "description": "End script execution",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaitTime",
      "id": "0x0003",
      "parameters": [
        "u16: Time",
        "Var: ???"
      ],
      "description": "Stop script execution for Time frames",
      "notes": "The Var's purpose is unknown. Command uses ScrReg 0 as countdown.",
      "type": "command"
    },
    {
      "name": "RegValueSet",
      "id": "0x0004",
      "parameters": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Assigns Value to Script Register value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RegDataSet",
      "id": "0x0005",
      "parameters": [
        "u8: Script Register",
        "u32: Value"
      ],
      "description": "Assigns Value to Script Register value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RegAdrsSet",
      "id": "0x0006",
      "parameters": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Assigns data in Address offset to Script Register value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "AdrsValueSet",
      "id": "0x0007",
      "parameters": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Assigns Value to the Address offset",
      "notes":"",
      "type": "command"
    },
    {
      "name": "AdrsRegSet",
      "id": "0x0008",
      "parameters": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Assigns Script Register value to the Address offset",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RegRegSet",
      "id": "0x0009",
      "parameters": [
        "u8: Script Register 1",
        "u8: Script Register 2"
      ],
      "description": "Assigns Script Register 2 value to Script Register 1 value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "AdrsAdrsSet",
      "id": "0x000A",
      "parameters": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Assigns data in Address 2 to the Address 1 offset",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetStack",
      "id": "0x000B",
      "parameters": [
        "Var: Return value"
      ],
      "description": "Returns the current depth of the stack",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetBrightness",
      "id": "0x000C",
      "parameters": [
        "u8: Script Register",
        "u8: Value"
      ],
      "description": "Compares Script Register value with Value",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x000D",
      "parameters": [
        "u8: Script Register",
        "u32: Address"
      ],
      "description": "Compares Script Register value with data in Address",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetGender",
      "id": "0x000E",
      "parameters": [
        "u32: Address",
        "u8: Script Register"
      ],
      "description": "Compares data in Address with Script Register value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CompareAdrsValue",
      "id": "0x000F",
      "parameters": [
        "u32: Address",
        "u8: Value"
      ],
      "description": "Compares data in Address with Value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CompareAdrsAdrs",
      "id": "0x0010",
      "parameters": [
        "u32: Address 1",
        "u32: Address 2"
      ],
      "description": "Compares data in Address 1 with data in Address 2",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CompareVarValue",
      "id": "0x0011",
      "parameters": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Compares Variable value with Value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CompareVars",
      "id": "0x0012",
      "parameters": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Compares Variable 1 value with Variable 2 value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ParallelCommonScript",
      "id": "0x0013",
      "parameters": [
        "u16: ???"
      ],
      "description": "???",
      "notes": "Somehow related with parallel common script execution.",
      "type": "command"
    },
    {
      "name": "CommonScript",
      "id": "0x0014",
      "parameters": [
        "u16: Global Script ID"
      ],
      "description": "Calls Global Script ID script",
      "notes": "See the HGSS sheet for more info. Table in DPPt haven't been found yet.",
      "type": "command"
    },
    {
      "name": "LocalScript",
      "id": "0x0015",
      "parameters": [],
      "description": "Returns to the invoking script/function after a Common Script",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Jump",
      "id": "0x0016",
      "parameters": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward",
      "notes": "Relative Jump can have negative values (backward jump).",
      "type": "command"
    },
    {
      "name": "JumpIfObjID",
      "id": "0x0017",
      "parameters": [
        "u8: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if invoking event has Event ID as ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "JumpIfBgID",
      "id": "0x0018",
      "parameters": [
        "u8: ???",
        "u32: Relative Jump"
      ],
      "description": "???",
      "notes": "Maybe jumps to a function if invoking event has a specific ID.",
      "type": "command"
    },
    {
      "name": "JumpIfPlayerDir",
      "id": "0x0019",
      "parameters": [
        "u8: Player Direction",
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if player is looking in Player Direction",
      "notes": "Supposed. Needs to be tested in game.",
      "type": "command"
    },
    {
      "name": "Call",
      "id": "0x001A",
      "parameters": [
        "u32: Relative Jump"
      ],
      "description": "Calls a function, Relative Jump bytes forward or backward",
      "notes": "Can be used to make loops when calling the own invoking function.",
      "type": "command"
    },
    {
      "name": "Return",
      "id": "0x001B",
      "parameters": [],
      "description": "Returns to the invoking script/function after a Call",
      "notes":"",
      "type": "command"
    },
    {
      "name": "JumpIf",
      "id": "0x001C",
      "parameters": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, jumps to a function",
      "notes": "Ask AdAstra for the condition list. Condition table is updated after a IfVarValue, IfVarVar, CheckFlag...",
      "type": "command"
    },
    {
      "name": "CallIf",
      "id": "0x001D",
      "parameters": [
        "u8: Condition",
        "u32: Relative Jump"
      ],
      "description": "If Condition in the condition table, calls a function",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetFlag",
      "id": "0x001E",
      "parameters": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 1",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ClearFlag",
      "id": "0x001F",
      "parameters": [
        "u16: Flag"
      ],
      "description": "Sets Flag to 0",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckFlag",
      "id": "0x0020",
      "parameters": [
        "u16: Flag"
      ],
      "description": "Checks if Flag is set",
      "notes": "It updates the internal condition flag and maybe part of the condition table.",
      "type": "command"
    },
    {
      "name": "FlagStatusToVar",
      "id": "0x0021",
      "parameters": [
        "Var: Flag",
        "Var: Variable"
      ],
      "description": "Checks if Flag is set and store the result in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetFlagFromVar",
      "id": "0x0022",
      "parameters": [
        "Var: Flag"
      ],
      "description": "Sets the flag whose ID is stored in Flag",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetTrainerFlag",
      "id": "0x0023",
      "parameters": [
        "Flex: Trainer ID"
      ],
      "description": "Sets the flag of Trainer ID, so marks it as beaten trainer",
      "notes": "So this trainer will not battle against you. Used in every Gym after the leader is beaten.",
      "type": "command"
    },
    {
      "name": "ClearTrainerFlag",
      "id": "0x0024",
      "parameters": [
        "Flex: Trainer ID"
      ],
      "description": "Clears the flag of Trainer ID, so marks it as unbeaten trainer",
      "notes": "So this trainer can be challenged again.",
      "type": "command"
    },
    {
      "name": "CheckTrainerFlag",
      "id": "0x0025",
      "parameters": [
        "Flex: Trainer ID"
      ],
      "description": "Checks if Trainer ID has been beaten",
      "notes": "It updates the internal condition flag and maybe part of the condition table.",
      "type": "command"
    },
    {
      "name": "IncrementVar",
      "id": "0x0026",
      "parameters": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable + Operand in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DecrementVar",
      "id": "0x0027",
      "parameters": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable - Operand in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetVar",
      "id": "0x0028",
      "parameters": [
        "Var: Variable",
        "u16: Value"
      ],
      "description": "Stores Value in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetVarFromVariable",
      "id": "0x0029",
      "parameters": [
        "Var: Variable 1",
        "Var: Variable 2"
      ],
      "description": "Assigns value of Variable 2 to Variable 1",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetVarFromFlexible",
      "id": "0x002A",
      "parameters": [
        "Var: Variable",
        "Flex: Flexible Value"
      ],
      "description": "Stores Flexible Value (or its value if variable) in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MessageAll",
      "id": "0x002B",
      "parameters": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file, all at once",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Message",
      "id": "0x002C",
      "parameters": [
        "u8: Text Slot"
      ],
      "description": "Display line Text Slot from the text file",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MessageFlex",
      "id": "0x002D",
      "parameters": [
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from the text file",
      "notes": "Unlike 002C, this command also accepts a variable as the input field.",
      "type": "command"
    },
    {
      "name": "MessageNoSkip",
      "id": "0x002E",
      "parameters": [
        "Flex: Text Slot"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x002F",
      "parameters": [
        "u8: Text Slot"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaitAB",
      "id": "0x0030",
      "parameters": [],
      "description": "Waits for button A or button B to be pressed",
      "notes": "Somehow it uses ScrReg 0 as countdown.",
      "type": "command"
    },
    {
      "name": "WaitButton",
      "id": "0x0031",
      "parameters": [],
      "description": "Waits for a button to be pressed",
      "notes": "It seems only A, B, X and direction pad buttons work.",
      "type": "command"
    },
    {
      "name": "WaitABPad",
      "id": "0x0032",
      "parameters": [],
      "description": "Waits for button A, button B or pad buttons to be pressed",
      "notes": "Supposed. Needs to be tested in game.",
      "type": "command"
    },
    {
      "name": "OpenMessage",
      "id": "0x0033",
      "parameters": [],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CloseMessage",
      "id": "0x0034",
      "parameters": [],
      "description": "Closes message box",
      "notes": "SDSME name is misleading, for no button is needed to be pressed.",
      "type": "command"
    },
    {
      "name": "FreezeMessage",
      "id": "0x0035",
      "parameters": [],
      "description": "???",
      "notes": "Probably keeps the message box alive after a script. ASM differs with CloseMessage only in a BL instruction.",
      "type": "command"
    },
    {
      "name": "SetIconBoard",
      "id": "0x0036",
      "parameters": [
        "u8: Text Slot",
        "u8: Type",
        "u16: Icon",
        "u16: Unused"
      ],
      "description": "Prepares an icon board message box displaying Text Slot message, of Type type, and with Icon image if chosen type supports it",
      "notes": "Type values from 0 to 3 are: brown (with icon), green (with icon), gray and blue.",
      "type": "command"
    },
    {
      "name": "SetTextBoard",
      "id": "0x0037",
      "parameters": [
        "u8: Type",
        "u16: Icon"
      ],
      "description": "Prepares a text board message box of Type type, and with Icon image if chosen type supports it",
      "notes": "Type values from 0 to 3 are: brown (with icon), green (with icon), gray and blue.",
      "type": "command"
    },
    {
      "name": "ShowBoard",
      "id": "0x0038",
      "parameters": [
        "u8: Process"
      ],
      "description": "Triggers different Process processes for the board",
      "notes": "Process value 0 keeps the board, value 1 creates the board, value 2 hides the board, value 3 shows the board and value 4 deletes the board.",
      "type": "command"
    },
    {
      "name": "WaitBoard",
      "id": "0x0039",
      "parameters": [],
      "description": "Waits the board last process to end",
      "notes": "Supposed.",
      "type": "command"
    },
    {
      "name": "BoardMessage",
      "id": "0x003A",
      "parameters": [
        "u8: Text Slot",
        "u16: Variable"
      ],
      "description": "Displays Text Slot message in the current text box, stores the current text box status in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CloseBoard",
      "id": "0x003B",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Returns 1 to Variable if the player has pressed a button so the board must close, 0 otherwise",
      "notes": "Variable is stored in ScrReg 0. Command waits for a button to be pressed and stores result in Variable.",
      "type": "command"
    },
    {
      "name": "Menu",
      "id": "0x003C",
      "parameters": [],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x003D",
      "parameters": [
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???",
        "u8: ???"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "YesNoBox",
      "id": "0x003E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Opens a Yes-No dialog and stores user response in Variable",
      "notes": "Variable is stored in ScrReg 0.",
      "type": "command"
    },
    {
      "name": "DummyGuinnessBox",
      "id": "0x003F",
      "parameters": [],
      "description": "Nothing",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MultiStandardText",
      "id": "0x0040",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #361, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button.",
      "type": "command"
    },
    {
      "name": "MultiLocalText",
      "id": "0x0041",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection menu at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button.",
      "type": "command"
    },
    {
      "name": "AddMultiOption",
      "id": "0x0042",
      "parameters": [
        "u8: Text Slot",
        "u8: Multi Slot"
      ],
      "description": "Adds an option with Multi Slot ID showing Text Slot text",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShowMulti",
      "id": "0x0043",
      "parameters": [],
      "description": "Shows the prepared multi in screen",
      "notes": "The game will hide it when the player has selected an option.",
      "type": "command"
    },
    {
      "name": "ListStandardText",
      "id": "0x0044",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with text bank #361, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button. The difference between a Multi and a List seems to be that lists are scrollable.",
      "type": "command"
    },
    {
      "name": "ListLocalText",
      "id": "0x0045",
      "parameters": [
        "u8: X",
        "u8: Y",
        "u8: Cursor",
        "u8: Cancel",
        "Var: Selection"
      ],
      "description": "Prepares a multiple selection list at X and Y screen position, with Cursor default selected option and possibility of cancelling depending on Cancel, with local texts, returns selected slot ID in Selection",
      "notes": "If Cancel is 1, the user can select the last option by pressing B button. The difference between a Multi and a List seems to be that lists are scrollable.",
      "type": "command"
    },
    {
      "name": "AddListOption",
      "id": "0x0046",
      "parameters": [
        "Flex: Option MSG",
        "Flex: Highlight MSG",
        "Flex: List Slot"
      ],
      "description": "Adds a new option to the list, with List Slot ID and showing text line Option MSG. It also displays text line Highlight MSG when that option is highlighted.",
      "notes": "If Highlight MSG is set to 255 [0xFF], no message will be displayed when the option is highlighted.\nThis command relies on an open message box in order to display the highlight messages. \n\nTrying to highlight an option with Highlight MSG different than 255 [0xFF] will result in a crash if no message box is already being displayed.",
      "type": "command"
    },
    {
      "name": "ShowList",
      "id": "0x0047",
      "parameters": [],
      "description": "Shows the prepared list in screen",
      "notes": "The game will hide it when the player has selected an option.",
      "type": "command"
    },
    {
      "name": "MultiColumn",
      "id": "0x0048",
      "parameters": [
        "u8: Columns"
      ],
      "description": "Splits the multi window in Columns different columns",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PlayFanfare",
      "id": "0x0049",
      "parameters": [
        "Flex: Sound"
      ],
      "description": "Plays Sound",
      "notes":"",
      "type": "command"
    },
    {
      "name": "StopFanfare",
      "id": "0x004A",
      "parameters": [
        "Flex: Sound"
      ],
      "description": "Stops Sound",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaitFanfare",
      "id": "0x004B",
      "parameters": [
        "Flex: Sound"
      ],
      "description": "Waits for Sound to finish",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PlayCry",
      "id": "0x004C",
      "parameters": [
        "Flex: Pokémon",
        "Flex: Unused"
      ],
      "description": "Plays a Pokémon cry",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaitCry",
      "id": "0x004D",
      "parameters": [],
      "description": "Waits the current cry to finish",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PlaySound",
      "id": "0x004E",
      "parameters": [
        "u16: Sound"
      ],
      "description": "Pauses current music, then Plays Sound",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaitSound",
      "id": "0x004F",
      "parameters": [],
      "description": "Waits for Sound to finish, then resumes music",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PlayMusic",
      "id": "0x0050",
      "parameters": [
        "u16: Music"
      ],
      "description": "Plays Music",
      "notes":"",
      "type": "command"
    },
    {
      "name": "StopMusic",
      "id": "0x0051",
      "parameters": [
        "u16: Unused"
      ],
      "description": "Stops current music",
      "notes": "Parameter is ignored because the game identifies what music is playing.",
      "type": "command"
    },
    {
      "name": "PlayDefaultMusic",
      "id": "0x0052",
      "parameters": [],
      "description": "Plays map default music",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetMusic",
      "id": "0x0053",
      "parameters": [
        "u16: Music"
      ],
      "description": "???",
      "notes": "Refers to a \"special bgm\".",
      "type": "command"
    },
    {
      "name": "FadeOutMusic",
      "id": "0x0054",
      "parameters": [
        "u16: Volume",
        "u16: Time"
      ],
      "description": "Fades out the current music to Volume in Time frames",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FadeInMusic",
      "id": "0x0055",
      "parameters": [
        "u16: Time"
      ],
      "description": "Fades in the current music to normal volume in Time frames",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetMusicPauseStatus",
      "id": "0x0056",
      "parameters": [
        "u8: SSEQ Player ID",
        "u8: Status"
      ],
      "description": "If Status = 1, the track that's currently played by chosen Player ID will pause. If Status = 0, Player ID will resume the previously paused music.",
      "notes": "The track won't restart from the beginning, but from the exact point where it was paused.",
      "type": "command"
    },
    {
      "name": "PlayFieldBGM",
      "id": "0x0057",
      "parameters": [
        "u16: Music ID"
      ],
      "description": "While in the field overworld, plays Music using SSEQ Player #7 (PLAYER_BGM)",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0058",
      "parameters": [
        "u8: ???"
      ],
      "description": "???",
      "notes": "Seems to set a flag related to the music system.",
      "type": "command"
    },
    {
      "name": "CheckChatotCry",
      "id": "0x0059",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Checks if Chatot has custom sound, stores answer in Variable",
      "notes": "Returns 0 or 1 to the specified Variable. Not for a specific Chatot but for all (they share a custom sound).",
      "type": "command"
    },
    {
      "name": "StartChatotCry",
      "id": "0x005A",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Starts Chatot microphone record, stores answer in Variable",
      "notes": "Returns 0 or 1 to the specified Variable depending on successful recording.",
      "type": "command"
    },
    {
      "name": "StopChatotCry",
      "id": "0x005B",
      "parameters": [],
      "description": "Stops recording Chatot custom sound",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SaveChatotCry",
      "id": "0x005C",
      "parameters": [],
      "description": "???",
      "notes": "Maybe saves the custom Chatot sound in the savegame.",
      "type": "command"
    },
    {
      "name": "LoadSpearPillarAudio",
      "id": "0x005D",
      "parameters": [],
      "description": "Loads Spear Pillar cutscene sound data (GROUP_SE_CLIMAX in the SDAT)",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Movement",
      "id": "0x005E",
      "parameters": [
        "Flex: Event ID",
        "u32: Relative Jump"
      ],
      "description": "Applies movement at Relative Jump to Event ID",
      "notes": "It seems that movements must be halfword-aligned in the script file.",
      "type": "command"
    },
    {
      "name": "WaitMovement",
      "id": "0x005F",
      "parameters": [],
      "description": "Waits for all movements to finish",
      "notes":"",
      "type": "command"
    },
    {
      "name": "LockAll",
      "id": "0x0060",
      "parameters": [],
      "description": "Locks every event in the map",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ReleaseAll",
      "id": "0x0061",
      "parameters": [],
      "description": "Releases every event in the map",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Lock",
      "id": "0x0062",
      "parameters": [
        "u16: Event ID"
      ],
      "description": "Locks Event ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Release",
      "id": "0x0063",
      "parameters": [
        "u16: Event ID"
      ],
      "description": "Releases Event ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "AddOW",
      "id": "0x0064",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Add Event ID overworld in the map",
      "notes": "It is probable that, if executing this having Event ID overworld already in the map, it gets duplicated.",
      "type": "command"
    },
    {
      "name": "RemoveOW",
      "id": "0x0065",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Removes Event ID overworld from the map",
      "notes":"",
      "type": "command"
    },
    {
      "name": "LockCamera",
      "id": "0x0066",
      "parameters": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Locks the camera at position X and Y",
      "notes": "Seems that X and Y must be the current player position",
      "type": "command"
    },
    {
      "name": "ReleaseCamera",
      "id": "0x0067",
      "parameters": [],
      "description": "Releases the camera",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FacePlayer",
      "id": "0x0068",
      "parameters": [],
      "description": "Makes the invoking event to look at the player",
      "notes": "In fact it simply takes the current player direction and makes the NPC look at the opposite direction.",
      "type": "command"
    },
    {
      "name": "GetPlayerPosition",
      "id": "0x0069",
      "parameters": [
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current player position in X and Y",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckOWPosition",
      "id": "0x006A",
      "parameters": [
        "Flex: Event ID",
        "Var: X",
        "Var: Y"
      ],
      "description": "Saves the current Event ID position in X and Y",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x006B",
      "parameters": [
        "Flex: X",
        "Flex: Z",
        "Flex: Y"
      ],
      "description": "???",
      "notes": "It has to do with camera movements",
      "type": "command"
    },
    {
      "name": "KeepOverworld",
      "id": "0x006C",
      "parameters": [
        "Flex: Event ID",
        "u8: Value"
      ],
      "description": "If Value is 1, prevents Event ID from disappearing when entering on a new map header",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetOWMovement",
      "id": "0x006D",
      "parameters": [
        "Flex: Event ID",
        "u16: Movement"
      ],
      "description": "Changes the Event ID's movement number to Movement",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetFollowingOverworld",
      "id": "0x006E",
      "parameters": [],
      "description": "Assigns ID 0xFE for any overworld that follows the player",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GiveMoney",
      "id": "0x006F",
      "parameters": [
        "u32: Money"
      ],
      "description": "Adds Money to the player's money",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TakeMoney",
      "id": "0x0070",
      "parameters": [
        "u32: Money"
      ],
      "description": "Substracts Money from the player's money",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CompareMoney",
      "id": "0x0071",
      "parameters": [
        "Var: Variable",
        "u32: Money"
      ],
      "description": "Returns 1 to Variable if the player has Money or more money, returns 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShowMoney",
      "id": "0x0072",
      "parameters": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows the money box at X and Y coordinates of the screen",
      "notes": "Each X and Y unit implies 8 pixels. Values of 0 or higher than the screen may glitch the screen.",
      "type": "command"
    },
    {
      "name": "HideMoney",
      "id": "0x0073",
      "parameters": [],
      "description": "Hides the money box",
      "notes":"",
      "type": "command"
    },
    {
      "name": "UpdateMoney",
      "id": "0x0074",
      "parameters": [],
      "description": "Updates the current money in the money box",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShowCoins",
      "id": "0x0075",
      "parameters": [
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Shows the coin box at X and Y coordinates of the screen",
      "notes": "Each X and Y unit implies 8 pixels. Values of 0 or higher than the screen may glitch the screen.",
      "type": "command"
    },
    {
      "name": "HideCoins",
      "id": "0x0076",
      "parameters": [],
      "description": "Hides the coin box",
      "notes":"",
      "type": "command"
    },
    {
      "name": "UpdateCoins",
      "id": "0x0077",
      "parameters": [],
      "description": "Updates the current coins in the coin box",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckCoins",
      "id": "0x0078",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of coins",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GiveCoins",
      "id": "0x0079",
      "parameters": [
        "Flex: Coins"
      ],
      "description": "Adds Coins to the player's coin case",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TakeCoins",
      "id": "0x007A",
      "parameters": [
        "Flex: Coins"
      ],
      "description": "Substracts Coins from the player's coin case",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GiveItem",
      "id": "0x007B",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Adds Amount of Item item, stores 1 in Variable if the player had less than 1000 - Amount (100 - Amount if TM/HM), stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TakeItem",
      "id": "0x007C",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Subs Amount of Item item, stores 1 in Variable if the player had at least Amount items in the bag, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckItemSpace",
      "id": "0x007D",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has less than 1000 - Amount of Item items (100 - Amount if TM/HM), stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckItem",
      "id": "0x007E",
      "parameters": [
        "Flex: Item",
        "Flex: Amount",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the player has at least Amount of Item items in the bag, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckItemIsMachine",
      "id": "0x007F",
      "parameters": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Item is TM or HM, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetItemPocket",
      "id": "0x0080",
      "parameters": [
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Stores the bag pocket of Item in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FullscreenMessage",
      "id": "0x0081",
      "parameters": [
        "Flex: Message ID"
      ],
      "description": "Nothing",
      "notes": "Script command ASM code seems to be empty.",
      "type": "command"
    },
    {
      "name": "DummyCheckPCItem",
      "id": "0x0082",
      "parameters": [],
      "description": "Nothing",
      "notes": "Script command ASM code seems to be empty.",
      "type": "command"
    },
    {
      "name": "GiveGoods",
      "id": "0x0083",
      "parameters": [
        "Flex: Goods",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Adds one Goods item to the underground PC, stores 1 in Variable if it could be stored and stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyTakeGoods",
      "id": "0x0084",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "CheckGoodsSpace",
      "id": "0x0085",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if there's at least one free slot in the underground PC for a goods, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyCheckGoods",
      "id": "0x0086",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "GiveTrap",
      "id": "0x0087",
      "parameters": [
        "Flex: Trap",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Adds one Trap item to the underground bag, stores 1 in Variable if it could be stored and stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyTakeTrap",
      "id": "0x0088",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyCheckTrapSpace",
      "id": "0x0089",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyCheckTrap",
      "id": "0x008A",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyGiveTreasure",
      "id": "0x008B",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyTakeTreasure",
      "id": "0x008C",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyCheckTreasureSpace",
      "id": "0x008D",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyCheckTreasure",
      "id": "0x008E",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "GiveSphere",
      "id": "0x008F",
      "parameters": [
        "Flex: Sphere",
        "Flex: Level",
        "Var: Variable"
      ],
      "description": "Adds one Sphere item of size Level to the underground bag, stores 1 in Variable if it could be given, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyTakeSphere",
      "id": "0x0090",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyCheckSphereSpace",
      "id": "0x0091",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "DummyCheckSphere",
      "id": "0x0092",
      "parameters": [
        "u16: Unused",
        "u16: Unused",
        "Var: Variable"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, Variable must be a variable.",
      "type": "command"
    },
    {
      "name": "CheckSealAmount",
      "id": "0x0093",
      "parameters": [
        "Flex: Seal ID",
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of Seal ID seals",
      "notes": "Supposed. Needs to be tested.",
      "type": "command"
    },
    {
      "name": "GiveSeal",
      "id": "0x0094",
      "parameters": [
        "Flex: Seal ID",
        "Flex: Amount"
      ],
      "description": "Adds Amount of Seal ID seals if there's enough space for them",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPokemonForm",
      "id": "0x0095",
      "parameters": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Stores in Variable the form of the Pokémon in Party Position",
      "notes": "Pokémon in Party Position doesn't have to be a Unown, it can be any Pokémon.",
      "type": "command"
    },
    {
      "name": "GivePokemon",
      "id": "0x0096",
      "parameters": [
        "Flex: Pokémon",
        "Flex: Level",
        "Flex: Item",
        "Var: Variable"
      ],
      "description": "Gives Pokémon at level Level with an Item, store 1 in Variable if succeed and 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GivePokemonEgg",
      "id": "0x0097",
      "parameters": [
        "Flex: Pokémon",
        "Flex: Location"
      ],
      "description": "Gives a Pokémon egg received from Location text slot at text bank #435",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ReplaceMove",
      "id": "0x0098",
      "parameters": [
        "Flex: Party Position",
        "Flex: Move Position",
        "Flex: Move ID"
      ],
      "description": "Replaces Party Position Pokémon move at Move Position move slot by Move ID new move",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "CheckMove",
      "id": "0x0099",
      "parameters": [
        "Var: Variable",
        "Flex: Move ID",
        "Flex: Party Position"
      ],
      "description": "Stores 1 in Variable if Pokémon at Party Position knows Move ID move, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckMoveInParty",
      "id": "0x009A",
      "parameters": [
        "Var: Variable",
        "Flex: Move ID"
      ],
      "description": "Checks if any Pokémon in the party knows Move ID move, stores in Variable the position of the first Pokémon that knows it or stores 6 if no Pokémon in the party knows the move",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x009B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummySetWeather",
      "id": "0x009C",
      "parameters": [],
      "description": "Nothing",
      "notes": "Command is empty.",
      "type": "command"
    },
    {
      "name": "DummyInitWeather",
      "id": "0x009D",
      "parameters": [],
      "description": "Nothing",
      "notes": "Command is empty.",
      "type": "command"
    },
    {
      "name": "DummyUpdateWeather",
      "id": "0x009E",
      "parameters": [],
      "description": "Nothing",
      "notes": "Command is empty.",
      "type": "command"
    },
    {
      "name": "DummyCheckMapPosition",
      "id": "0x009F",
      "parameters": [],
      "description": "Nothing",
      "notes": "Command is empty.",
      "type": "command"
    },
    {
      "name": "DummyCountPartyPokemon",
      "id": "0x00A0",
      "parameters": [],
      "description": "Nothing",
      "notes": "Command is empty.",
      "type": "command"
    },
    {
      "name": "ReturnScreen",
      "id": "0x00A1",
      "parameters": [],
      "description": "Restores the normal overworld screen",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00A2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00A3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00A4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00A5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DressPokemon",
      "id": "0x00A6",
      "parameters": [
        "Flex: Party Pos",
        "Var: ???",
        "Flex: ???"
      ],
      "description": "Shows Dress-Up screen with Pokémon at specified Party Pos",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DisplayDressedPokemon",
      "id": "0x00A7",
      "parameters": [
        "u16: Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Portrait Slot was correctly loaded, stores 1 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DisplayContestPokemon",
      "id": "0x00A8",
      "parameters": [
        "u16: Contest Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Contest Portrait Slot was correctly loaded, stores 1 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SealCapsuleScreen",
      "id": "0x00A9",
      "parameters": [],
      "description": "Opens the capsule editor screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WorldMapScreen",
      "id": "0x00AA",
      "parameters": [],
      "description": "Opens the worldmap screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PCBoxScreen",
      "id": "0x00AB",
      "parameters": [
        "u8: Operation"
      ],
      "description": "Opens a PC screen to perform the chosen Operation.",
      "notes": "Operation codes: \n0 -> \"Deposit Pokemon\"\n1 -> \"Withdraw Pokemon\"\n2 -> \"Move Pokemon\"\n3 -> \"Move Items\"\n4 -> \"Compare Pokemon\"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00AC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00AD",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00AE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00AF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "EndGameScreen",
      "id": "0x00B0",
      "parameters": [],
      "description": "Opens the Hall of Fame and game ending screens",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00B1",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00B2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00B3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "StarterSelectionScreen",
      "id": "0x00B4",
      "parameters": [],
      "description": "Opens the starter Pokémon selection screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "EndStarterSelectionScreen",
      "id": "0x00B5",
      "parameters": [],
      "description": "Stores the selected starter Pokémon in the save data and frees the Pokémon selection screen resources",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00B6",
      "parameters": [
        "Flex: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00B7",
      "parameters": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00B8",
      "parameters": [
        "Var: Variable"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00B9",
      "parameters": [
        "Flex: ???",
        "Var: Variable"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ChoosePlayerName",
      "id": "0x00BA",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming the player, stores 1 in Variable if user cancels the proccess",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WritePokemonName",
      "id": "0x00BB",
      "parameters": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Opens the keyboard for naming a Pokémon in Party Position, stores 1 in Variable if user cancels the proccess",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FadeScreen",
      "id": "0x00BC",
      "parameters": [
        "u16: Transition",
        "u16: Time",
        "u16: Type",
        "u16: Color"
      ],
      "description": "Fade screen of Type type with Transition different screens of Time frames each one, to or from Color color",
      "notes": "Type 0 for fade in, Type 1 for fade out. Color has 15-bit format. Transition is the number of color changes that the game does in the fading.",
      "type": "command"
    },
    {
      "name": "WaitFadeScreen",
      "id": "0x00BD",
      "parameters": [],
      "description": "Wait for the screen fade to end",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Warp",
      "id": "0x00BE",
      "parameters": [
        "Flex: Map",
        "u16: Door",
        "Flex: X",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Warps to X and Y position of Map header with initial Dir direction, using Door warp",
      "notes": "When Door is 0 it doesn't use any door animation.",
      "type": "command"
    },
    {
      "name": "RockClimbAnimation",
      "id": "0x00BF",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses rock climb with the Pokémon at Party Position position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SurfAnimation",
      "id": "0x00C0",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses surf with the Pokémon at Party Position position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaterfallAnimation",
      "id": "0x00C1",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses waterfall with the Pokémon at Party Position position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FlyAnimation",
      "id": "0x00C2",
      "parameters": [
        "u16: Map",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Flies to Map header map, to coordinates X and Y",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "FlashAnimation",
      "id": "0x00C3",
      "parameters": [],
      "description": "Sets weather to 0 (sunny) and then updates the weather graphics",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DefogAnimation",
      "id": "0x00C4",
      "parameters": [],
      "description": "Sets weather to 0 (sunny) and then updates the weather graphics",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CutAnimation",
      "id": "0x00C5",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Uses cut with the Pokémon at Party Position position",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "DressPlayer",
      "id": "0x00C6",
      "parameters": [],
      "description": "Changes the current player form to the contest dress",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBike",
      "id": "0x00C7",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player is riding the bike, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RideBike",
      "id": "0x00C8",
      "parameters": [
        "u8: Action"
      ],
      "description": "Changes player form from normal to riding the bike if Action is 1, otherwise it sets the normal form to the player",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CyclingRoad",
      "id": "0x00C9",
      "parameters": [
        "u8: Action"
      ],
      "description": "If Action is 1, the game sets the cycling road flag and moves the player down. Otherwise the flag is deactivated.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPlayerForm",
      "id": "0x00CA",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current player form",
      "notes": "Values 0 is for normal form, value 1 for riding the bike and value 2 for surfing.",
      "type": "command"
    },
    {
      "name": "SetPlayerForm",
      "id": "0x00CB",
      "parameters": [
        "u16: Form"
      ],
      "description": "Activates the Form bit in the internal player form data",
      "notes": "The purpose of the different bits still needs to be researched.",
      "type": "command"
    },
    {
      "name": "UpdatePlayerForm",
      "id": "0x00CC",
      "parameters": [],
      "description": "Updates changes in the internal player form data in the screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPlayerName",
      "id": "0x00CD",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores player's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextRivalName",
      "id": "0x00CE",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores rival's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextCounterpart",
      "id": "0x00CF",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores counterpart's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPartyPokemon",
      "id": "0x00D0",
      "parameters": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the name of the Pokémon in Party Position in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextItem",
      "id": "0x00D1",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPocket",
      "id": "0x00D2",
      "parameters": [
        "u8: String Buffer",
        "Flex: Pocket"
      ],
      "description": "Stores Pocket's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextMachineMove",
      "id": "0x00D3",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores the name of the move contained in Item TM/HM in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextMove",
      "id": "0x00D4",
      "parameters": [
        "u8: String Buffer",
        "Flex: Move"
      ],
      "description": "Stores battle Move's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextNumber",
      "id": "0x00D5",
      "parameters": [
        "u8: String Buffer",
        "Flex: Number"
      ],
      "description": "Stores a Number in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPokeNickname",
      "id": "0x00D6",
      "parameters": [
        "u8: String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the nickname of the Pokémon in Party Position in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPoketch",
      "id": "0x00D7",
      "parameters": [
        "u8: String Buffer",
        "Flex: Pokétch App"
      ],
      "description": "Stores Pokétch App's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextTrainer",
      "id": "0x00D8",
      "parameters": [
        "u8: String Buffer",
        "Flex: Trainer"
      ],
      "description": "Stores Trainer's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPlayerTrainerType",
      "id": "0x00D9",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores player's Union Room trainer type in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPokemon",
      "id": "0x00DA",
      "parameters": [
        "u8: String Buffer",
        "Flex: Pokémon",
        "u16: Unused",
        "u8: Unused"
      ],
      "description": "Stores Pokémon's name in String Buffer",
      "notes": "The two Unused parameters are for defining male/female nouns and singular/plural nouns respectively. However both don't apply in this command.",
      "type": "command"
    },
    {
      "name": "TextStarterPokemon",
      "id": "0x00DB",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the player' starter Pokémon in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextRivalStarter",
      "id": "0x00DC",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the rival' starter Pokémon in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextCounterpartStarter",
      "id": "0x00DD",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores the name of the counterpart' starter Pokémon in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckStarter",
      "id": "0x00DE",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the starter Pokémon ID in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextGoods",
      "id": "0x00DF",
      "parameters": [
        "u8: String Buffer",
        "Flex: Goods"
      ],
      "description": "Stores underground Goods' name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextTrap",
      "id": "0x00E0",
      "parameters": [
        "u8: String Buffer",
        "Flex: Trap"
      ],
      "description": "Stores underground Trap's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextTreasure",
      "id": "0x00E1",
      "parameters": [
        "u8: String Buffer",
        "Flex: Treasure"
      ],
      "description": "Stores underground Treasure's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextMapName",
      "id": "0x00E2",
      "parameters": [
        "u8: String Buffer",
        "Flex: Map"
      ],
      "description": "Stores Map header name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetSwarmInfo",
      "id": "0x00E3",
      "parameters": [
        "Var: Map",
        "Var: Pokémon"
      ],
      "description": "Selects a zone depending on a random seed, then stores the zone ID in Map and the corresponding swarm Pokémon of that zone in Pokémon",
      "notes": "Predicted. Needs to be checked.",
      "type": "command"
    },
    {
      "name": "TrainerID",
      "id": "0x00E4",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the trainer ID number in Variable depending on the script ID",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerBattle",
      "id": "0x00E5",
      "parameters": [
        "Flex: Trainer 1",
        "Flex: Trainer 2"
      ],
      "description": "Starts a battle against Trainer 1 and, if Trainer 2 is neither 0 nor the same as Trainer 1, a double battle against both",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TrainerMessage",
      "id": "0x00E6",
      "parameters": [
        "Flex: Trainer ID",
        "Flex: Type"
      ],
      "description": "Displays the text of Trainer ID trainer at condition Type",
      "notes": "The possible Type values are the following (expand the note for see them)",
      "type": "command"
    },
    {
      "name": "TrainerMsgCheck",
      "id": "0x00E7",
      "parameters": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pokémon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 0 in Noticing, 2 in Defeat and 0 in One Pokémon. If it corresponds to a double battle, stores 3, 5 and 6 or 7, 9 and 10 depending on whether it's the first or the second trainer",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerRematchMsgCheck",
      "id": "0x00E8",
      "parameters": [
        "Var: Noticing",
        "Var: Defeat",
        "Var: One Pokémon"
      ],
      "description": "If the script ID corresponds to a single battle trainer, stores 17 in Noticing, 0 in Defeat and 0 in One Pokémon. If it corresponds to a double battle, stores 18, 0 and 6 or 19, 0 and 10 depending on whether it's the first or the second trainer",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerTypeCheck",
      "id": "0x00E9",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the script ID corresponds to a single battle, stores 1 if it corresponds to a double battle",
      "notes": "This means you shouldn't use this command in a normal script.",
      "type": "command"
    },
    {
      "name": "TrainerMusic",
      "id": "0x00EA",
      "parameters": [
        "Flex: Trainer"
      ],
      "description": "Plays Trainer's overworld music",
      "notes":"",
      "type": "command"
    },
    {
      "name": "LostBattle",
      "id": "0x00EB",
      "parameters": [],
      "description": "Return to Pokémon Center or player's house after being defeated",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBattleIsLost",
      "id": "0x00EC",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player has been defeated in battle, stores 1 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckDefeatedPokemon",
      "id": "0x00ED",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player defeated or caught the wild Pokemon, stores 1 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Check2vs2",
      "id": "0x00EE",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has at least 2 not fainted Pokémon, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyTrainerBattle",
      "id": "0x00EF",
      "parameters": [],
      "description": "Starts a battle against trainer with ID 1",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyTrainerFlag",
      "id": "0x00F0",
      "parameters": [],
      "description": "Sets the trainer flag with the same ID as the invoking event",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyTrainerFlagJump",
      "id": "0x00F1",
      "parameters": [
        "u32: Relative Jump"
      ],
      "description": "Jumps to a function, Relative Jump bytes forward or backward, if trainer flag with the invoking event ID is set",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00F9",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00FA",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00FB",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00FC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00FD",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00FE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x00FF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0100",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0101",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0102",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0103",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0104",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0105",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0106",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0107",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0108",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0109",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x010A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x010B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x010C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x010D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x010E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x010F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0110",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0111",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0112",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0113",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0114",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0115",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0116",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0117",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0118",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPokerus",
      "id": "0x0119",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if one or more Pokémon in the party are infected with the Pokérus",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetPokemonGender",
      "id": "0x011A",
      "parameters": [
        "Flex: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if Pokémon at Party Position is male, 1 if is female and 2 if gender is unknown",
      "notes": "Unknown gender value is supposed and should be checked.",
      "type": "command"
    },
    {
      "name": "SetWarpData",
      "id": "0x011B",
      "parameters": [
        "Flex: Map",
        "Flex: Warp",
        "Flex: X",
        "Flex: Y",
        "Flex: Dir"
      ],
      "description": "Changes the data of the special warp in the current map with Map destination header, X and Y coordinates and Dir player direction, saving Warp in the save data as the last used warp",
      "notes": "Not sure if it sets data for a warp event, or it updates location data in the savegame.",
      "type": "command"
    },
    {
      "name": "GetElevatorFloor",
      "id": "0x011C",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current floor in a elevator",
      "notes": "It does something to the value based on the current Header.",
      "type": "command"
    },
    {
      "name": "ElevatorBox",
      "id": "0x011D",
      "parameters": [
        "u8: X",
        "u8: Y",
        "Var: Variable",
        "Flex: Floor"
      ],
      "description": "Shows the current floor number in a box at X and Y coordinates in the screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountSinnohDexSeen",
      "id": "0x011E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the Sinnoh Pokédex",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountSinnohDexObtained",
      "id": "0x011F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the Sinnoh Pokédex",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountNationalDexSeen",
      "id": "0x0120",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total seen Pokemon in the National Pokédex",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountNationalDexObtained",
      "id": "0x0121",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total obtained Pokemon in the National Pokédex",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyNationalDexCheck",
      "id": "0x0122",
      "parameters": [],
      "description": "Nothing",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetDexProgressMsg",
      "id": "0x0123",
      "parameters": [
        "u8: Mode",
        "Var: Variable"
      ],
      "description": "Checks the number of seen Pokémon in the Sinnoh Pokédex (if Mode is 0) or the number of obtained Pokémon in the National Pokédex (otherwise) and stores the corresponding Professor message in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WildBattle",
      "id": "0x0124",
      "parameters": [
        "Flex: Pokémon",
        "Flex: Level"
      ],
      "description": "Starts a wild battle against a Pokémon of level Level",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FirstBattle",
      "id": "0x0125",
      "parameters": [
        "Flex: Trainer ID"
      ],
      "description": "Starts a first battle against Trainer ID",
      "notes": "The difference between this and the TrainerBattle command is that Bag, Run and Pokémon buttons are disabled.",
      "type": "command"
    },
    {
      "name": "CatchTutorial",
      "id": "0x0126",
      "parameters": [],
      "description": "Starts the catch tutorial",
      "notes":"",
      "type": "command"
    },
    {
      "name": "UpdateHoneyTree",
      "id": "0x0127",
      "parameters": [],
      "description": "Updates the internal honey tree data for setting up a new wild encounter",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckHoneyTree",
      "id": "0x0128",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player can spread honey in the tree, stores 2 if player already spread honey and stores 3 if the wild encounter is ready",
      "notes":"",
      "type": "command"
    },
    {
      "name": "HoneyTreeBattle",
      "id": "0x0129",
      "parameters": [],
      "description": "Starts the honey tree wild encounter",
      "notes":"",
      "type": "command"
    },
    {
      "name": "StopHoneyTreeAnimation",
      "id": "0x012A",
      "parameters": [],
      "description": "Removes the honey tree 3D animation",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SignatureScreen",
      "id": "0x012B",
      "parameters": [],
      "description": "Calls the Player Signature screen.",
      "notes": "Make sure to fade the screen from black after calling this command.",
      "type": "command"
    },
    {
      "name": "CheckSaveGame",
      "id": "0x012C",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if a different savegame exists and it's not possible to save, stores 1 if no previous savegame exists, stores 2 if game has to save a lot of data and stores 3 if game can perform a quick save",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SaveGame",
      "id": "0x012D",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Saves the game and stores 1 in Variable if savegame was succesfully made, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPortrait",
      "id": "0x012E",
      "parameters": [
        "u16: Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Portrait Slot is empty, stores 1 otherwise",
      "notes": "Used in Jubilife TV.",
      "type": "command"
    },
    {
      "name": "CheckContestPortrait",
      "id": "0x012F",
      "parameters": [
        "u16: Contest Portrait Slot",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the chosen Contest Portrait Slot is empty, stores 1 otherwise",
      "notes": "Used in Hearthome Contest Hall.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0130",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GivePoketch",
      "id": "0x0131",
      "parameters": [],
      "description": "Activates the Poketch",
      "notes": "This includes both the touch screen animation and an internal save data update.",
      "type": "command"
    },
    {
      "name": "CheckPoketch",
      "id": "0x0132",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the Poketch, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GivePoketchApp",
      "id": "0x0133",
      "parameters": [
        "Flex: App"
      ],
      "description": "Adds App Poketch application to the player's Poketch",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPoketchApp",
      "id": "0x0134",
      "parameters": [
        "Flex: App",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has App Poketch application, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0135",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0136",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0137",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0138",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0139",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x013A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x013B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x013C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x013D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x013E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x013F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0140",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0141",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0142",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0143",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0144",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0145",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0146",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MartScreen",
      "id": "0x0147",
      "parameters": [
        "Flex: Unused"
      ],
      "description": "Opens the common mart shopping screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SpMartScreen",
      "id": "0x0148",
      "parameters": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID mart shopping screen",
      "notes": "Used in the Departament Store for a shop with specific fixed items.",
      "type": "command"
    },
    {
      "name": "GoodsMartScreen",
      "id": "0x0149",
      "parameters": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID goods mart shopping screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SealMartScreen",
      "id": "0x014A",
      "parameters": [
        "Flex: Mart ID"
      ],
      "description": "Opens the Mart ID seal mart shopping screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "BlackCenterText",
      "id": "0x014B",
      "parameters": [
        "Flex: Message ID"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetLastWarp",
      "id": "0x014C",
      "parameters": [
        "Flex: Warp ID"
      ],
      "description": "Sets map's Warp ID warp as the last used warp",
      "notes": "Supposed. This would affect actions like Escape Rope use.",
      "type": "command"
    },
    {
      "name": "CheckPlayerGender",
      "id": "0x014D",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if player is male, stores 1 if female",
      "notes":"",
      "type": "command"
    },
    {
      "name": "HealPokemon",
      "id": "0x014E",
      "parameters": [],
      "description": "Heals every Pokémon in the player's party",
      "notes": "That does not include the black fade nor the healing sound.",
      "type": "command"
    },
    {
      "name": "DummyUnderground",
      "id": "0x014F",
      "parameters": [],
      "description": "Nothing",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0150",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0151",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetPlayerDirComm",
      "id": "0x0152",
      "parameters": [
        "u16: Direction"
      ],
      "description": "Turns player towards the chosen Direction (used during communications with other players)",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0153",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0154",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0155",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0156",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPokedex",
      "id": "0x0157",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the Pokédex, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GivePokedex",
      "id": "0x0158",
      "parameters": [],
      "description": "Gives the Pokédex to the player",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckShoes",
      "id": "0x0159",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the running shoes, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GiveShoes",
      "id": "0x015A",
      "parameters": [],
      "description": "Gives the running shoes to the player",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBadge",
      "id": "0x015B",
      "parameters": [
        "Flex: Badge ID",
        "Var: Variable"
      ],
      "description": "Checks if player has Badge ID badge, stores boolean result in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GiveBadge",
      "id": "0x015C",
      "parameters": [
        "Flex: Badge ID"
      ],
      "description": "Gives the player Badge ID badge",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountBadges",
      "id": "0x015D",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of badges obtained",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBag",
      "id": "0x015E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the bag, stores 0 otherwise",
      "notes": "Supposed.",
      "type": "command"
    },
    {
      "name": "GiveBag",
      "id": "0x015F",
      "parameters": [],
      "description": "Gives the bag to the player",
      "notes": "Supposed.",
      "type": "command"
    },
    {
      "name": "CheckPartner",
      "id": "0x0160",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the following event flag is activated, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetPartner",
      "id": "0x0161",
      "parameters": [],
      "description": "Activates the following event flag, so you can no longer use the bike, surf, rock climb...",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ClearPartner",
      "id": "0x0162",
      "parameters": [],
      "description": "Deactivates the following event flag, so you can use the bike, surf, rock climb... again",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckStepFlag",
      "id": "0x0163",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Checks if player has moved one step, stores the result in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetStepFlag",
      "id": "0x0164",
      "parameters": [],
      "description": "Activates the Step system flag",
      "notes": "Used for Route 201 script, function #u32",
      "type": "command"
    },
    {
      "name": "ClearStepFlag",
      "id": "0x0165",
      "parameters": [],
      "description": "Clears the Step system flag",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckGameIsCompleted",
      "id": "0x0166",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the game has been completed, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GameCompleted",
      "id": "0x0167",
      "parameters": [],
      "description": "Activates the completed game flag",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DoorAnimation",
      "id": "0x0168",
      "parameters": [
        "u16: Matrix X",
        "u16: Matrix Y",
        "Flex: Map X",
        "Flex: Map Y",
        "u8: Door ID"
      ],
      "description": "Prepares a building located at Map X and Map Y coordinates in a map located at Matrix X and Matrix Y in the current matrix for animation, with Door ID animation ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaitDoor",
      "id": "0x0169",
      "parameters": [
        "u8: Door ID"
      ],
      "description": "Wait animation of building with Door ID animation ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FreeDoor",
      "id": "0x016A",
      "parameters": [
        "u8: Door ID"
      ],
      "description": "Free animation of building with Door ID animation ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "OpenDoor",
      "id": "0x016B",
      "parameters": [
        "u8: Door ID"
      ],
      "description": "Triggers first animation of building with Door ID animation ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CloseDoor",
      "id": "0x016C",
      "parameters": [],
      "description": "Triggers second animation of building with Door ID animation ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetDaycareNames",
      "id": "0x016D",
      "parameters": [],
      "description": "Stores first daycare Pokémon nickname in string buffer 0, the second daycare Pokémon nickname in string buffer 1 and the first Pokémon trainer's name in buffer 2",
      "notes": "If there's only one Pokémon in the daycare, string buffer 1 does not change. If no Pokémon is in the daycare, commands does nothing.",
      "type": "command"
    },
    {
      "name": "GetDaycareStatus",
      "id": "0x016E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "If daycare Pokémon have an egg, stores 1 in Variable. Otherwise it stores 0 if no Pokémon is in the daycare, 2 if only one Pokémon is in the daycare or 3 if there are two Pokémon",
      "notes":"",
      "type": "command"
    },
    {
      "name": "InitPastoriaGym",
      "id": "0x016F",
      "parameters": [],
      "description": "Initializes Pastoria Gym internal data and 3D model animations",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PastoriaGymButton",
      "id": "0x0170",
      "parameters": [],
      "description": "Checks if a button 3D model is at player position and moves the water level",
      "notes": "The game checks for buildings 239, 240 and 241 in the current player coordinates.",
      "type": "command"
    },
    {
      "name": "InitHearthomeGym",
      "id": "0x0171",
      "parameters": [],
      "description": "Initializes Hearthome Gym internal data and 3D model animations",
      "notes":"",
      "type": "command"
    },
    {
      "name": "HearthomeGymElevator",
      "id": "0x0172",
      "parameters": [],
      "description": "Triggers a elevator to move up or down",
      "notes": "Checks the current player height position to determine the direction.",
      "type": "command"
    },
    {
      "name": "CanalaveGymElevator",
      "id": "0x0173",
      "parameters": [],
      "description": "Initializes Canalave Gym internal data and 3D model animations",
      "notes":"",
      "type": "command"
    },
    {
      "name": "InitVeilstoneGym",
      "id": "0x0174",
      "parameters": [],
      "description": "Initializes Veilstone Gym internal data and 3D model animations",
      "notes":"",
      "type": "command"
    },
    {
      "name": "InitSunyshoreGym",
      "id": "0x0175",
      "parameters": [
        "u8: Room"
      ],
      "description": "Initializes Sunyshore Gym Room map internal data and 3D model animations",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SunyshoreGymGear",
      "id": "0x0176",
      "parameters": [
        "u8: Rotation"
      ],
      "description": "Rotates Sunyshore Gym gears +90º if Rotation is 0, -90º if Rotation is 1 or +180º if Rotation is 2",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountPartyPokemon",
      "id": "0x0177",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current number of Pokémon in party",
      "notes":"",
      "type": "command"
    },
    {
      "name": "BagScreen",
      "id": "0x0178",
      "parameters": [
        "u8: Mode"
      ],
      "description": "Opens the bag with only Normal pocket avalible if Mode is 0, otherwise only with the Berries pocket avalible",
      "notes":"",
      "type": "command"
    },
    {
      "name": "BagScreenSelection",
      "id": "0x0179",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the selected item after a BagScreen command, or zero if user cancels the selection",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPocketItems",
      "id": "0x017A",
      "parameters": [
        "Flex: Pocket",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if bag's Pocket has at least one item there, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextBerry",
      "id": "0x017B",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item",
        "Flex: Number"
      ],
      "description": "Stores the name of Item berry in String Buffer, returning a plural noun if Number is greater than 1",
      "notes": "Item value must be greater or equal than 0x95 (Cheri Berry).",
      "type": "command"
    },
    {
      "name": "TextNature",
      "id": "0x017C",
      "parameters": [
        "u8: String Buffer",
        "Flex: Nature"
      ],
      "description": "Stores the name of Nature in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBerryGrowth",
      "id": "0x017D",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the current berry growth phase of the invoking event in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBerrySpecies",
      "id": "0x017E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the berry item ID corresponding on the current invoking event berry tree in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBerryMulch",
      "id": "0x017F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the mulch item ID corresponding on the current invoking event berry tree in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBerryDryness",
      "id": "0x0180",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the dryness grade corresponding on the current invoking event berry tree in Variable",
      "notes": "When ground is dry it returns 0, when it's normal it returns 1 and when it's wet it returns 2.",
      "type": "command"
    },
    {
      "name": "CheckBerryAmount",
      "id": "0x0181",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the amount of berries in the berry tree of the invoking event in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetBerryMulch",
      "id": "0x0182",
      "parameters": [
        "Flex: Item"
      ],
      "description": "Sets Item mulch to the berry of the invoking event",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetBerrySpecies",
      "id": "0x0183",
      "parameters": [
        "Flex: Item"
      ],
      "description": "Sets Item berry species to the berry of the invoking event",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WateringAnimation",
      "id": "0x0184",
      "parameters": [
        "u16: Action"
      ],
      "description": "Sets the player the watering form if Action is 0, and the normal form if Action is 1",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TakeBerries",
      "id": "0x0185",
      "parameters": [],
      "description": "Picks up the berries of invoking event, and returns the tree to growth phase 0",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetOWDefaultPosition",
      "id": "0x0186",
      "parameters": [
        "Flex: Event ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Sets Event ID spawn position to global coords X and Y",
      "notes": "This command sets the position where an overworld is intended to appear after an AddOW command.",
      "type": "command"
    },
    {
      "name": "SetOWPosition",
      "id": "0x0187",
      "parameters": [
        "w"
      ],
      "description": "Moves Event ID to global coords X, Y, Z with Dir direction",
      "notes": "Supposed by analogy with HGSS. Even though some maps are higher, the Z parameter is often 0. Game seems to calculate the correct Z position if it is wrong.",
      "type": "command"
    },
    {
      "name": "SetOWDefaultMovement",
      "id": "0x0188",
      "parameters": [
        "Flex: Event ID",
        "Flex: Movement ID"
      ],
      "description": "Sets Event ID's default move code to Movement ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetOWDefaultDirection",
      "id": "0x0189",
      "parameters": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's default direction to Direction ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetWarpPosition",
      "id": "0x018A",
      "parameters": [
        "Flex: Warp ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Warp ID to global coords X and Y",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetSpawnablePosition",
      "id": "0x018B",
      "parameters": [
        "Flex: Spawnable ID",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Moves Spawnable ID to global coords X and Y",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetOWDirection",
      "id": "0x018C",
      "parameters": [
        "Flex: Event ID",
        "Flex: Direction ID"
      ],
      "description": "Sets Event ID's current direction to Direction ID",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x018D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x018E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x018F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WaitTimeOrAB",
      "id": "0x0190",
      "parameters": [
        "Flex: Time"
      ],
      "description": "Stops script execution until Time frames have passed or until user presses A or B buttons",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PokemonSelectionScreen",
      "id": "0x0191",
      "parameters": [],
      "description": "Calls the Pokémon selection screen",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0192",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetSelectedPartySlot",
      "id": "0x0193",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the selected party slot in a party Pokémon screen, or 0xFF is user cancelled the selection",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0194",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0195",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0196",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0197",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetPartyPokemonID",
      "id": "0x0198",
      "parameters": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the Pokémon at Party Position",
      "notes": "It will return 0 if Pokémon is an egg.",
      "type": "command"
    },
    {
      "name": "CheckTradedPokemon",
      "id": "0x0199",
      "parameters": [
        "Var: Party Position",
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if trainer ID and secret ID of the Pokémon at Party Position are the player's ones, stores 1 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountPartyBornPokemon",
      "id": "0x019A",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pokémon in the Pokémon party, excluding the eggs",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountAlivePokemonExceptFirst",
      "id": "0x019B",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable how many alive Pokémon would remain in the Pokémon party if Pokémon at Party Position disappeared",
      "notes": "Eggs are excluded from the count.",
      "type": "command"
    },
    {
      "name": "CountTotalAlivePokemon",
      "id": "0x019C",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Pokémon in the Pokémon party and PC boxes, excluding the eggs and fainted Pokémon",
      "notes": "As Pokémon can't be fainted in the PC boxes, only eggs are not taken into account in the PC boxes count.",
      "type": "command"
    },
    {
      "name": "CountPartyEggs",
      "id": "0x019D",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of eggs in the Pokémon party",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x019E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x019F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A0",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A1",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TakeMoneyFlex",
      "id": "0x01A3",
      "parameters": [
        "Flex: Money"
      ],
      "description": "Substracts Money from the player's money",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01A9",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01AA",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CompareMoneyFlex",
      "id": "0x01AB",
      "parameters": [
        "Var: Variable",
        "Flex: Money"
      ],
      "description": "Returns 1 to Variable if the player has Money or more money, returns 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "EggHatchScreen",
      "id": "0x01AC",
      "parameters": [],
      "description": "Opens the egg hatching screen with an egg in the Pokémon party that has 0 steps left for hatching",
      "notes": "This may crash if there's no ready egg in the Pokémon party. It's better not to use this command unless you know what are you doing.",
      "type": "command"
    },
    {
      "name": "DummyDaycare",
      "id": "0x01AD",
      "parameters": [
        "Var: Unused"
      ],
      "description": "Nothing",
      "notes": "Even though it does nothing, it needs a variable as parameter.",
      "type": "command"
    },
    {
      "name": "CheckDaycareLevel",
      "id": "0x01AE",
      "parameters": [
        "Var: Variable",
        "Flex: Position"
      ],
      "description": "Stores at string buffer 0 the nickname and at string buffer 1 the level of the Pokémon at Position daycare position, and also stores the level in Variable",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01AF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01B0",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "UnvanishOverworld",
      "id": "0x01B1",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID visible again if it was invisible",
      "notes":"",
      "type": "command"
    },
    {
      "name": "VanishOverworld",
      "id": "0x01B2",
      "parameters": [
        "Flex: Event ID"
      ],
      "description": "Makes Event ID invisible, but still collisionable",
      "notes": "It's a great idea to use this command in a level script for blocking doors with invisible events.",
      "type": "command"
    },
    {
      "name": "MailScreen",
      "id": "0x01B3",
      "parameters": [],
      "description": "Opens the mail screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountMail",
      "id": "0x01B4",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of mails in the mailbox",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01B5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetTimePeriod",
      "id": "0x01B6",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current time period of the day",
      "notes": "The different values are:\n0: From 04:00 AM to 09:59 AM (Morning)\n1: From 10:00 AM to 04:59 PM (Noon)\n2: From 05:00 PM to 07:59 PM (Evening)\n3: From 08:00 PM to 11:59 PM (Night)\n4: From 00:00 AM to 03:59 AM (Midnight)",
      "type": "command"
    },
    {
      "name": "GetRandom",
      "id": "0x01B7",
      "parameters": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyGetRandom",
      "id": "0x01B8",
      "parameters": [
        "Var: Variable",
        "Flex: Range"
      ],
      "description": "Generates a random number between 0 and Range - 1, and stores it in Variable",
      "notes": "Exactly the same code as the command above.",
      "type": "command"
    },
    {
      "name": "GetPokemonHappiness",
      "id": "0x01B9",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the happiness of Pokémon in Party Position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "AddHappiness",
      "id": "0x01BA",
      "parameters": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Adds Happiness to the happiness of Pokémon in Party Position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SubHappiness",
      "id": "0x01BB",
      "parameters": [
        "Flex: Happiness",
        "Flex: Party Position"
      ],
      "description": "Subs Happiness to the happiness of Pokémon in Party Position",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01BC",
      "parameters": [
        "Flex: ???",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetPlayerDirection",
      "id": "0x01BD",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the direction the player is looking at",
      "notes": "Predicted. Seeing up gives 0, seeing down gives 1, seeing left gives 2 and seeing right gives 3.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01BE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01BF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBornPokemonInParty",
      "id": "0x01C0",
      "parameters": [
        "Flex: Pokémon",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Pokémon is currently in the Pokémon party, stores 0 otherwise",
      "notes": "Eggs do not count as Pokémon, so they will be ignored.",
      "type": "command"
    },
    {
      "name": "CheckPokemonSizeRecord",
      "id": "0x01C1",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores 0 in Variable if Pokémon at Party Position has not a bigger relative size than player's record, stores 1 if it's the same size and stores 2 if it has a bigger relative size",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetPokemonSizeRecord",
      "id": "0x01C2",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Stores the relative size of Pokémon at Party Position as player's record",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPartyPokemonSize",
      "id": "0x01C3",
      "parameters": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Party Position"
      ],
      "description": "Stores the integer part of Pokémon at Party Position size in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPokemonSizeRecord",
      "id": "0x01C4",
      "parameters": [
        "Flex: Integer String Buffer",
        "Flex: Decimal String Buffer",
        "Flex: Pokémon ID"
      ],
      "description": "Stores the integer part of player's record size, normalized to Pokémon ID range, in Integer String Buffer (1 to 3 digits) and the decimal part of the size in Decimal String Buffer (1 digit)",
      "notes":"",
      "type": "command"
    },
    {
      "name": "InitPokemonSizeRecord",
      "id": "0x01C5",
      "parameters": [],
      "description": "Initializes player's record size with a minimum required value",
      "notes": "This record is 33280 unnormalized units in Pokémon Platinum.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01C6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01C7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountPokemonMoves",
      "id": "0x01C8",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of moves that the Pokémon at Party Position has",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DeleteMove",
      "id": "0x01C9",
      "parameters": [
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Deletes the move in Move Slot from the Pokémon at Party Position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetPartyPokemonMove",
      "id": "0x01CA",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores in Variable the ID of the move in Move Slot from the Pokémon at Party Position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextPartyPokemonMove",
      "id": "0x01CB",
      "parameters": [
        "u8: String Buffer",
        "Flex: Party Position",
        "Flex: Move Slot"
      ],
      "description": "Stores the name of the move in Move Slot from the Pokémon at Party Position in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01CC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01CD",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01CE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Strength",
      "id": "0x01CF",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n0: Disables Strength so player can no longer move boulders\n1: Allows the player to automatically move Strength boulders\n2: Checks if Strength is activated, store answer in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Flash",
      "id": "0x01D0",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n0: Clears the Flash system flag\n1: Sets the Flash system flag\n2: Checks if Flash is activated, store answer in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "Defog",
      "id": "0x01D1",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 0\nu8: 1\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n0: Clears the Defog system flag\n1: Sets the Defog system flag\n2: Checks if Defog is activated, store answer in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01D9",
      "parameters": [
        "Flex: ???",
        "Flex: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01DA",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01DB",
      "parameters": [
        "u16: Init",
        "u16: Mode"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01DC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01DD",
      "parameters": [
        "u16: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01DE",
      "parameters": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01DF",
      "parameters": [
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E0",
      "parameters": [
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E1",
      "parameters": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description":"",
      "notes": "In Platinum it uses one more Var parameter to store an answer.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E2",
      "parameters": [
        "Flex: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E3",
      "parameters": [
        "Var: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E4",
      "parameters": [
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E5",
      "parameters": [
        "u16: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E6",
      "parameters": [
        "u16: ???",
        "Var: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01E7",
      "parameters": [
        "u16: ???",
        "u16: ???",
        "u16: ???",
        "u8: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckCompleteSinnohDex",
      "id": "0x01E8",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pokémon in the Sinnoh Pokédex has been seen, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckCompleteNationalDex",
      "id": "0x01E9",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if every Pokémon in the National Pokédex has been caught, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RegisterSinnohPokedex",
      "id": "0x01EA",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RegisterNationalPokedex",
      "id": "0x01EB",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01EC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01ED",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01EE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01EF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01F0",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountFossils",
      "id": "0x01F1",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of fossils in the bag",
      "notes": "Technically it's the number of items in the bag whose ID is between 99 and 105.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01F2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01F3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckFossilPokemon",
      "id": "0x01F4",
      "parameters": [
        "Var: Variable",
        "Flex: Item ID"
      ],
      "description": "Stores in Variable the ID of the Pokémon to which Item ID fossil belongs",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckFossil",
      "id": "0x01F5",
      "parameters": [
        "Var: Position",
        "Var: Item ID",
        "Flex: Amount"
      ],
      "description": "Stores in Item ID the ID of the first fossil in the bag that the player has at least Amount quantity of, and stores in Position the amount of fossils in the bag before the first fossil, that met the quantity condition",
      "notes": "Stores 0 in both variables if there's no fossil in the bag.",
      "type": "command"
    },
    {
      "name": "CountPokemonUnderLevel",
      "id": "0x01F6",
      "parameters": [
        "Var: Variable",
        "Flex: Level"
      ],
      "description": "Stores in Variable the amount of Pokémon in party whose level is equal or lower than Level",
      "notes": "Eggs are completely ignored.",
      "type": "command"
    },
    {
      "name": "SurvivePoison",
      "id": "0x01F7",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "If Pokémon at Party Position is poisoned and at 1 HP, it cures the poison and stores 1 in Variable, otherwise it stores 0",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FinishOverworldScreen",
      "id": "0x01F8",
      "parameters": [],
      "description": "Terminates map overworld process",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01F9",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MessageAllFromArchive",
      "id": "0x01FA",
      "parameters": [
        "Flex: Text Archive",
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from Text Archive text file, all at once",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MessageFromArchive",
      "id": "0x01FB",
      "parameters": [
        "Flex: Text Archive",
        "Flex: Text Slot"
      ],
      "description": "Display line Text Slot from Text Archive text file",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01FC",
      "parameters": [
        "u16: ???",
        "u16: ???",
        "u16: ???",
        "u16: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01FD",
      "parameters": [
        "u16: ???",
        "u16: ???",
        "u16: ???",
        "u16: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01FE",
      "parameters": [
        "u8: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x01FF",
      "parameters": [
        "u8: ???",
        "Var: Variable",
        "u16: ???",
        "u8: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetPreviousHeaderID",
      "id": "0x0200",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the header ID of the previous map accessed",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetCurrentHeaderID",
      "id": "0x0201",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current header ID",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetSafariFlag",
      "id": "0x0202",
      "parameters": [
        "u8: Flag"
      ],
      "description": "If Flag is 0 safari encounters are activated, if Flag is 1 safari encounters are deactivated",
      "notes":"",
      "type": "command"
    },
    {
      "name": "BattleRoomWarp",
      "id": "0x0203",
      "parameters": [
        "u16: Map",
        "u16: Door",
        "Flex: X",
        "Flex: Y",
        "u16: Dir"
      ],
      "description": "Warps to X and Y position of Map header with initial Dir direction, using Door warp",
      "notes": "Essentially identical to the normal Warp command, but the params format is slightly different. Also, this command updates some internal stuff to let the game engine know you're about to communicate wirelessly.",
      "type": "command"
    },
    {
      "name": "ExitBattleRoom",
      "id": "0x0204",
      "parameters": [],
      "description": "Returns to previous map once wireless communication ends",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GeonetScreen",
      "id": "0x0205",
      "parameters": [],
      "description": "Opens the Geonet screen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GreatMarshBinoculars",
      "id": "0x0206",
      "parameters": [],
      "description": "Brings up the view of the Great Marsh and the daily Pokemon as seen from the viewing platform.",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0207",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShowPokemonPic",
      "id": "0x0208",
      "parameters": [
        "Flex: Pokémon",
        "Flex: Gender"
      ],
      "description": "Opens a window with the picture of Pokémon with Gender gender and registers the Pokémon in the Pokédex as seen",
      "notes":"",
      "type": "command"
    },
    {
      "name": "HidePokemonPic",
      "id": "0x0209",
      "parameters": [],
      "description": "Hides the window of a Pokémon picture",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x020A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x020B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x020C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SpearPillarSequence",
      "id": "0x020D",
      "parameters": [
        "u8: Operation to perform",
        "Var: Variable"
      ],
      "description": "Starts a pre-scripted Spear Pillar sequence ",
      "notes": "When Operation to perform equals 0, it triggers Cyrus' Red Chain animation, then the screen fades to black. When it equals 1, it checks whether the sequence is still running or not. Variable gets 0 if the sequence is still playing.",
      "type": "command"
    },
    {
      "name": "KeepSafariTrain",
      "id": "0x020E",
      "parameters": [],
      "description": "Sets the safari train in the same sector where it was the last time it was moved",
      "notes": "This is called by a level script every time the player changes map in the Great Marsh, so the train doesn't return to the first map after being unloaded.",
      "type": "command"
    },
    {
      "name": "SafariTrainAnimation",
      "id": "0x020F",
      "parameters": [
        "Var: Position",
        "u16: Move Type"
      ],
      "description": "Moves the safari train 3D model from its current position to Position safari sector, with the player not riding on it if Move Type is 3 or the player riding on the train otherwise",
      "notes": "Position goes from 0 to 2.",
      "type": "command"
    },
    {
      "name": "CheckSafariTrainMovement",
      "id": "0x0210",
      "parameters": [
        "u16: Position",
        "Var: Variable"
      ],
      "description": "Stores 5 in Variable if the safari train is currently at Position safari sector, stores 6 otherwise",
      "notes": "Position goes from 0 to 2.",
      "type": "command"
    },
    {
      "name": "IgnoreHeights",
      "id": "0x0211",
      "parameters": [
        "u8: Flag"
      ],
      "description": "If Flag Value is 0, the player becomes able to walk ignoring terrain heights, otherwise the flag is cleared and the mode is deactivated",
      "notes": "Predicted. Needs to be tested. It is used when the player rides on the safari train.",
      "type": "command"
    },
    {
      "name": "GetPokemonNature",
      "id": "0x0212",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the nature of the Pokémon at Party Position",
      "notes": "If Party Position exceeds the number of Pokémon currently in the player's party, 0 is returned.",
      "type": "command"
    },
    {
      "name": "CheckPartyNature",
      "id": "0x0213",
      "parameters": [
        "Var: Variable",
        "Flex: Nature ID"
      ],
      "description": "Stores in Variable the position of the first Pokémon with a given Nature ID in the player's party.",
      "notes": "If no Pokémon has that Nature ID, 0xFF [255] is returned.",
      "type": "command"
    },
    {
      "name": "CheckSpiritombCounter",
      "id": "0x0214",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current underground talk counter value",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ClearAmitySquareSteps",
      "id": "0x0215",
      "parameters": [],
      "description": "Sets the Amity Square step counter to zero",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckAmitySquareSteps",
      "id": "0x0216",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current amount of steps walked in the Amity Square",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetAmitySquareAccessory",
      "id": "0x0217",
      "parameters": [
        "Var: Variable",
        "Flex: Pokémon"
      ],
      "description": "Stores in Variable a random accessory item ID corresponding to a specific Pokémon",
      "notes": "See how Amity Square accessories work in Bulbapedia. If specified Pokémon is not allowed in Amity Square, it gets an accessory corresponding to the evolutionary family of Chimchar.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0218",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0219",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x021A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x021B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "AddRoamingPokemon",
      "id": "0x021C",
      "parameters": [
        "u8: ID"
      ],
      "description": "Activates a roaming Pokemon depending on the ID",
      "notes": "Uses ID to determine which roaming Pokémon must appear: 0 for Mesprit, 1 for Cresselia, 2 for Darkrai, 3 for Moltres, 4 for Zapdos and 5 for Articuno.",
      "type": "command"
    },
    {
      "name": "UnionGroup",
      "id": "0x021D",
      "parameters": [
        "Command format depends on the first parameter:\nu16: 0",
        "Flex: ID",
        "Var: Variable\nu16: 1",
        "Flex: ID",
        "Var: Variable\nu16: 2",
        "Flex: ID",
        "Flex: String Buffer\nu16: 3",
        "Flex: ID",
        "Flex: String Buffer\nu16: 4",
        "Var: Variable\nu16: 5",
        "Flex: ID\nu16: 6"
      ],
      "description": "Function depends on the first parameter:\n0: Checks if group ID exists, returns answer in Variable\n1: Checks if group ID is accesible, returns answer in Variable\n2: Writes group ID name in String Buffer\n3: Writes leader's name of Group ID in String Buffer\n4: Opens keyboard, stores 1 in Variable if user cancels, 2 if group name already exists, 0 otherwise\n5: Enter in group ID\n6: Creates a group",
      "notes": "This command is the devil.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x021E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x021F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0220",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RememberMoveScreen",
      "id": "0x0221",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Shows a list of moves that the Pokémon at the selected Party Position can remember.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyMoveCommand",
      "id": "0x0222",
      "parameters": [],
      "description": "Empty code.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ResponseRememberMove",
      "id": "0x0223",
      "parameters": [
        "Var: Response"
      ],
      "description": "Assigns 0 to Response variable if the last Remember Move screen taught a move to one of the player's Pokémon. Assigns 0xFF if player cancelled the operation.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TeachMoveScreen",
      "id": "0x0224",
      "parameters": [
        "Flex: Party Position",
        "Flex: Move ID"
      ],
      "description": "Shows a list with just the chosen Move ID, to be taught to Pokémon at given Party Position.",
      "notes": "Used by Grandma Wilma on Route 210 to teach Draco Meteor and by the old man on Route 228 to teach Blast Burn, Hydro Cannon or Frenzy Plant to your starter.",
      "type": "command"
    },
    {
      "name": "ResponseTeachMove",
      "id": "0x0225",
      "parameters": [
        "Var: Response"
      ],
      "description": "Assigns 0 to Response variable if the last Teach Move screen taught a new move to one of the player's Pokémon. Assigns 0xFF if player cancelled the operation.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "InitTrade",
      "id": "0x0226",
      "parameters": [
        "u8: Trade ID"
      ],
      "description": "Initializes Trade ID trade data",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetOfferedPokemon",
      "id": "0x0227",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the offered Pokémon of the current trade data",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetRequestedPokemon",
      "id": "0x0228",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the ID of the requested Pokémon of the current trade data",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TradePokemonScreen",
      "id": "0x0229",
      "parameters": [
        "Flex: Party Position"
      ],
      "description": "Opens the trade Pokémon screen, giving the Pokémon at Party Position and receiving the offered Pokémon of the current trade data",
      "notes":"",
      "type": "command"
    },
    {
      "name": "EndTrade",
      "id": "0x022A",
      "parameters": [],
      "description": "Frees the current trade data from the memory",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ActivateInternationalDex",
      "id": "0x022B",
      "parameters": [],
      "description": "Allows the Pokédex to show international entries for some registered Pokémon",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ActivateDimorphismDex",
      "id": "0x022C",
      "parameters": [],
      "description": "Allows the Pokédex to compare genders between Pokémon",
      "notes":"",
      "type": "command"
    },
    {
      "name": "NationalDex",
      "id": "0x022D",
      "parameters": [
        "Command format depends on the first parameter:\nu8: 1",
        "Var: Unused\nu8: 2",
        "Var: Variable"
      ],
      "description": "Function depends on the first parameter:\n1: Activates the National Pokédex mode\n2: Stores 1 in Variable if player has the National Pokédex, otherwise it stores 0",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountPokemonRibbons",
      "id": "0x022E",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the amount of ribbons that the Pokémon in Party Position has",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountPartyRibbons",
      "id": "0x022F",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the total amount of different ribbons in the current Pokémon party",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckRibbon",
      "id": "0x0230",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Stores 1 in Variable if the Pokémon in Party Position has the Ribbon ribbon, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GiveRibbon",
      "id": "0x0231",
      "parameters": [
        "Flex: Party Position",
        "Flex: Ribbon"
      ],
      "description": "Gives the Ribbon ribbon to Pokémon in Party Position",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextRibbon",
      "id": "0x0232",
      "parameters": [
        "u8: String Buffer",
        "Flex: Ribbon"
      ],
      "description": "Stores the name of the Ribbon in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountPokemonEVs",
      "id": "0x0233",
      "parameters": [
        "Var: Variable",
        "Flex: Party Position"
      ],
      "description": "Stores in Variable the total amount of effort values of Pokémon in Party Position",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "GetDayOfWeek",
      "id": "0x0234",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current day of the week",
      "notes": "Value 0 is the first possible value and it's for Sunday.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0235",
      "parameters": [
        "Command format depends on the first parameter:\nu16: 0",
        "Var: Variable\nu16: 1",
        "u16: ???",
        "Var: Variable",
        "Var: Variable\nu16: 2",
        "u16: 3",
        "Flex: ???",
        "Var: Variable",
        "Var: Variable\nu16: 4",
        "Var: Variable",
        "Var: Variable\nu16: 5",
        "Flex: ???",
        "Flex: ???",
        "Var: Variable\nu16: 6",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0236",
      "parameters": [
        "Flex: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0237",
      "parameters": [
        "Command format depends on the first parameter:\nu16: 0",
        "Flex: ???",
        "Var: Variable",
        "Var: Variable\nu16: 1",
        "Flex: ???",
        "Flex: ???",
        "Flex: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0238",
      "parameters": [
        "Flex: ???",
        "Variable: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShowRulesList",
      "id": "0x0239",
      "parameters": [
        "Var: Variable"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetPokemonFootprint",
      "id": "0x023A",
      "parameters": [
        "Var: ???",
        "Var: ???",
        "Flex: Party Position"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PCHealAnimation",
      "id": "0x023B",
      "parameters": [
        "Flex: PokéBalls"
      ],
      "description": "Triggers the Pokémon Center healing animation with PokéBalls number of player's Pokémon",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ElevatorAnimation",
      "id": "0x023C",
      "parameters": [
        "Flex: Direction",
        "Flex: Count"
      ],
      "description": "Triggers the animation of building #498 up (if Direction is 0) or down (if Direction is 1) Count consecutive times",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShipAnimation",
      "id": "0x023D",
      "parameters": [
        "u8: Ship Direction",
        "u8: Player Orientation",
        "u16: Destination Header",
        "u16: Destination X",
        "u16: Destination Z"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MysteryGiftGive",
      "id": "0x023E",
      "parameters": [
        "Command format depends on the first parameter:\nu16: 0\nu16: 1",
        "Var: Variable\nu16: 2",
        "Var: Variable\nu16: 3",
        "Var: Variable\nu16: 4\nu16: 5",
        "Var: Text File",
        "Var: Text Line\nu16: 6",
        "Var: Text File",
        "Var: Text Line\nu16: 7\nu16: 8"
      ],
      "description": "Function depends on the first parameter:\n0: Initializes the data for receiving a Mystery Gift\n1: Checks if there is a Mystery Gift, stores answer in Variable\n2: Stores the Mystery Gift ID in Variable\n3: Checks if player can receive the Mystery Gift, stores answer in Variable\n4: Gives the Mystery Gift to the player\n5: Shows the succeed text at Text File file and Text Line slot\n6: Shows the unable text at Text File file and Text Line slot\n7: Ends the Mystery Gift process\n8: Saves data and ends the Mystery Gift process",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x023F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0240",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0241",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0242",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0243",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0244",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0245",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckVersion",
      "id": "0x0246",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Returns 0xC to Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "FirstPokemonInParty",
      "id": "0x0247",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the slot of the first Pokémon in the party that is not an egg",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0248",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0249",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x024A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x024B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x024C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x024D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetLottoNumber",
      "id": "0x024E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores Lotto random number in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckWinLotto",
      "id": "0x024F",
      "parameters": [
        "Var: MatchPos",
        "Var: Digits",
        "Var: PC",
        "Flex: Winning Number"
      ],
      "description": "Takes a Winning Number as input and responds as follows.\nIf no matching Pokémon could be found or an error occurs: \nMatchPos: 0; Digits: 0; PC: 0.\n\nFor all other cases:\n\nIf the matching Pokémon is in the Player's party, PC will be assigned 0.\nOtherwise, if it's in the Player's Storage System, PC will be assigned 1.\n\nMatchPos stores the zero-based position of the winning Pokémon (either as Party pos or Storage System pos, depending on the value of PC).\n\nWhen there's a match, the Digits var is assigned the number of matching digits of the Winning Pokémon's PID.\nIn case of multiple matches, priority is always given to the one with the most matching digits.",
      "notes": "To retrieve the exact position of a winning Pokémon in the Storage System, first make sure PC equals 1. \n\nThe zero-based PC Page and Position indices can be calculated:\n\nPC Page index = MatchPos / 30\nPosition in page = MatchPos % 30\n\nwhere % is the modulo operator.",
      "type": "command"
    },
    {
      "name": "InitLotto",
      "id": "0x0250",
      "parameters": [],
      "description": "Generates two random numbers and assigns them to two system lottery variables.",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0251",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountPCFreeSpace",
      "id": "0x0252",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the amount of free Pokémon slots in PC boxes",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0253",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0254",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0255",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0256",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0257",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0258",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0259",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x025A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x025B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x025C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x025D",
      "parameters": [
        "???: Variable"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x025E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x025F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0260",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextAccessory",
      "id": "0x0261",
      "parameters": [
        "u8: String Buffer",
        "Flex: Accesory"
      ],
      "description": "Stores Accessory's name in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPokemonInParty",
      "id": "0x0262",
      "parameters": [
        "Flex: Pokémon",
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if Pokémon (or its egg) is currently in the Pokémon party, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetDeoxysForm",
      "id": "0x0263",
      "parameters": [
        "Flex: Form"
      ],
      "description": "Sets every Deoxys in the Pokémon party the Form form",
      "notes": "Form 0 is Normal, form 1 is Attack, form 2 is Defense and form 3 is Speed.",
      "type": "command"
    },
    {
      "name": "CheckCombeeGenders",
      "id": "0x0264",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Checks if player has a Combee/Vespiquen in their party and stores the result in Variable:\nStores 2 if player has at least one male and one female;\nStores 1 if player has one male only or one female only;\nStores 0 if no Combee is found.",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0265",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0266",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SlotMachine",
      "id": "0x0267",
      "parameters": [
        "Flex: ???"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetHour",
      "id": "0x0268",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores current hour from RTC in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShakeOverworld",
      "id": "0x0269",
      "parameters": [
        "Flex: Event ID",
        "Flex: Count",
        "Flex: Speed",
        "Flex: X",
        "Flex: Y"
      ],
      "description": "Makes Event ID overworld to shake Count times in Time frames, moving X horizontally and Y vertically each shake",
      "notes":"",
      "type": "command"
    },
    {
      "name": "BlinkOverworld",
      "id": "0x026A",
      "parameters": [
        "Flex: Event ID",
        "Flex: Count",
        "Flex: Time"
      ],
      "description": "???",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckRegis",
      "id": "0x026B",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if player has the 3 Regis in the party, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x026C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MessageUnown",
      "id": "0x026D",
      "parameters": [
        "u16: Text Slot"
      ],
      "description": "Display line Text Slot from the text file with the Unown font",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckGBACartidge",
      "id": "0x026E",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the current GBA cartridge ID in Variable",
      "notes": "Stores 0 if no cartridge, 1 if Pokémon Sapphire, 2 if Pokémon Ruby, 3 if Pokémon Emerald, 4 if Pokémon FireRed and 5 if Pokémon LeafGreen. Somehow it could also set 7 if Pokémon Gold, 8 if Pokémon Silver, 10 if Pokémon Diamond, 11 if Pokémon Pearl, 12 if Pokémon Platinum and 15 if Pokémon Colosseum.",
      "type": "command"
    },
    {
      "name": "ResetSpiritombCounter",
      "id": "0x026F",
      "parameters": [],
      "description": "Resets the underground talking counter to zero",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetMatrixAlternativeMap",
      "id": "0x0270",
      "parameters": [
        "Flex: Alternative ID",
        "u8: Status"
      ],
      "description": "Permanently changes a worldmap matrix cell corresponding to Alternative ID if Status is 1, reverts the change if 0",
      "notes": "It only changes the map file value in the matrix, not the map header nor the map height. Seems that the only Alternative ID available values are 2 and 3, corresponding to Spring Path and to Seabreak Path.",
      "type": "command"
    },
    {
      "name": "WriteStone",
      "id": "0x0271",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Opens the keyboard for writing in the Route 224 stone, stores 1 in Variable if user cancels the proccess",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextStoneName",
      "id": "0x0272",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Stores the name that the player wrote in the Route 224 stone in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0273",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0274",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0275",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0276",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0277",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0278",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0279",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SunyshoreBinoculars",
      "id": "0x027A",
      "parameters": [],
      "description": "Brings up the view of the Pokemon League Castle as seen from the Vista Lighthouse in Sunyshore City.",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x027B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x027C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x027D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x027E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x027F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextNumberSp",
      "id": "0x0280",
      "parameters": [
        "u8: String Buffer",
        "Flex: Number",
        "u8: Alignment Type",
        "u8: Digits"
      ],
      "description": "Stores a Number in String Buffer with Alignment Type alignment and Digits length",
      "notes": "Predicted. Alignment Type 0 is left-alignment, 1 is right alignment padded with spaces and 2 is right alignment padded with zeros. Digits is used only in these last two types.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0281",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckBirthday",
      "id": "0x0282",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 1 in Variable if the current day is the player's birthday, stores 0 otherwise",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MusicVolumeSet",
      "id": "0x0283",
      "parameters": [
        "Flex: Music ID",
        "Flex: Volume"
      ],
      "description": "Identifies the BGM Player which is playing Music ID and sets its Volume",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CountSeenUnown",
      "id": "0x0284",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of different seen Unown forms",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0285",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0286",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0287",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0288",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0289",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x028A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckEventValidity",
      "id": "0x028B",
      "parameters": [
        "u8: Event ID",
        "Var: Variable"
      ],
      "description": "Stores 1 into Variable in the following cases:\n- Variable 16451 [0x4043] equals 4617\n- Variable 16452 [0x4044] equals 4370\n- Variable 16453 [0x4045] equals 4387\n- Variable 16454 [0x4046] equals 4355\n\nStores 0 otherwise.",
      "notes": "These variables are set to the proper values by the Wonder Mail postman script command.\nDPPt only checks for 3 possible events [Rotom is a Platinum exclusive].",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x028C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x028D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x028E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x028F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0290",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0291",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0292",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0293",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0294",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0295",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0296",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetBP",
      "id": "0x0297",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the number of Battle Frontier points the player has in their wallet.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "AddBP",
      "id": "0x0298",
      "parameters": [
        "Flex: Number"
      ],
      "description": "Adds the chosen Number of Battle Frontier points to Player's wallet.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SubBP",
      "id": "0x0299",
      "parameters": [
        "Flex: Number"
      ],
      "description": "Removes the chosen Number of Battle Frontier points from Player's wallet.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CompareBP",
      "id": "0x029A",
      "parameters": [
        "Flex: Number",
        "Var: Variable"
      ],
      "description": "Stores 1 into Variable if Player has at least the chosen Number of Battle Frontier points in their wallet, 0 otherwise.",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x029B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x029C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x029D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x029E",
      "parameters": [
        "Flex: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShakeCamera",
      "id": "0x029F",
      "parameters": [
        "Flex: Type"
      ],
      "description": "Shakes the screen vertically (if Type is 0) or horizontally (if Type is 1)",
      "notes": "HGSS allows more parameters for this animation than DP or Pt.",
      "type": "command"
    },
    {
      "name": "Battle2vs2",
      "id": "0x02A0",
      "parameters": [
        "Flex: Partner Trainer ID",
        "Flex: Trainer 1 ID",
        "Flex: Trainer 2 ID"
      ],
      "description": "Starts a double battle with Partner Trainer ID versus Trainer 1 ID and Trainer 2 ID",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A1",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PartyPokemonTradeScreen",
      "id": "0x02A5",
      "parameters": [],
      "description": "Opens the party Pokémon screen for a trade",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02A9",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02AA",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02AB",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ActivateMysteryGift",
      "id": "0x02AC",
      "parameters": [],
      "description": "Shows Mystery Gift option in Start Menu.",
      "notes": "Only sets one byte in the savedata.",
      "type": "command"
    },
    {
      "name": "GetOWMovement",
      "id": "0x02AD",
      "parameters": [
        "Var: Variable",
        "Flex: Overworld"
      ],
      "description": "Stores Overworld's Movement ID into passed Variable",
      "notes": "Stores 0 if the overworld is invalid or not found.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02AE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02AF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B0",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B1",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "TextSeal",
      "id": "0x02B3",
      "parameters": [
        "u8: String Buffer",
        "Flex: Seal ID"
      ],
      "description": "Stores the name of Seal ID seal in String Buffer",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyLockAll",
      "id": "0x02B4",
      "parameters": [],
      "description": "Locks every event in the map and waits the invoking overworld to finish its movement for locking it",
      "notes": "It does the same as LockAll as long as the script is invoked by an overworld, otherwise it might freeze.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02B9",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02BA",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02BB",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "LastBattleCheckCaught",
      "id": "0x02BC",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores 0 in Variable if the last Pokémon battle resulted in a successful capture, 1 otherwise.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "WildBattleSp",
      "id": "0x02BD",
      "parameters": [
        "Flex: Pokémon",
        "Flex: Level"
      ],
      "description": "Starts a legendary battle against a Pokémon of predefined Level",
      "notes": "The difference between this command and the regular WildBattle is the initial message that pops up.\nThis command's text line is a duplicate of WildBattle's, except in Japanese roms. ",
      "type": "command"
    },
    {
      "name": "CheckTrainerCardLevel",
      "id": "0x02BE",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores in Variable the current trainer card level",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DummyRideBike",
      "id": "0x02BF",
      "parameters": [],
      "description": "Nothing",
      "notes": "Seems to allocate the bike music in the RAM but doesn't play it.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02C0",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ShowSaveBox",
      "id": "0x02C1",
      "parameters": [],
      "description": "Displays the save data box (current map name, player's name, the amount of badges, the Pokédex counter and the play time)",
      "notes":"",
      "type": "command"
    },
    {
      "name": "HideSaveBox",
      "id": "0x02C2",
      "parameters": [],
      "description": "Hides the save data box",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ScopeMode",
      "id": "0x02C3",
      "parameters": [
        "u8: Mode"
      ],
      "description": "If Mode is 1, activates the scope mode, otherwise the command deactivates the scope mode",
      "notes": "The scope mode prevents the game to do certain actions (like reseting system flags) when changing map, and probably it's related with more things.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02C4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02C5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SpinTradeScreen",
      "id": "0x02C6",
      "parameters": [],
      "description": "Starts the Spin Trade screen.",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02C7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02C8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "InitEternaGym",
      "id": "0x02C9",
      "parameters": [],
      "description": "Initializes Eterna Gym internal data and 3D model animations",
      "notes":"",
      "type": "command"
    },
    {
      "name": "EternaGymClockAnim",
      "id": "0x02CA",
      "parameters": [],
      "description": "Triggers the Eterna Gym next flower clock animation",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02CB",
      "parameters": [
        "Var: ???",
        "Flex: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02CC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SetDarkFog",
      "id": "0x02CD",
      "parameters": [],
      "description": "Sets weather #26 to the current map",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ClearDarkFog",
      "id": "0x02CE",
      "parameters": [],
      "description": "Sets the default weather to the current map",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02CF",
      "parameters": [
        "Flex: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D0",
      "parameters": [
        "Var: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D1",
      "parameters": [
        "Flex: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D2",
      "parameters": [
        "u16: ???",
        "Flex: ???",
        "u16: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D3",
      "parameters": [
        "Flex: ???",
        "Flex: ???",
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D7",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02D9",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02DA",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02DB",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02DC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02DD",
      "parameters": [],
      "description":"",
      "notes": "Battle Pokémon list?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02DE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02DF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E0",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E1",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E2",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E5",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E6",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E7",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E8",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02E9",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02EA",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02EB",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02EC",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02ED",
      "parameters": [],
      "description":"",
      "notes": "Related to move teaching?",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02EE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02EF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "InitVilla",
      "id": "0x02F0",
      "parameters": [],
      "description": "Initializes Villa internal data and 3D model animations",
      "notes":"",
      "type": "command"
    },
    {
      "name": "ChangePokemonForm",
      "id": "0x02F1",
      "parameters": [
        "Flex: Party Position",
        "Flex: Form"
      ],
      "description": "Changes the form value of the Pokémon at Party Position to Form",
      "notes": "Predicted.",
      "type": "command"
    },
    {
      "name": "InitDistortionWorld",
      "id": "0x02F2",
      "parameters": [],
      "description": "Initializes Distortion World internal data and 3D model animations",
      "notes": "Crashes if used outside of Distortion World.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02F3",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02F4",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02F5",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02F6",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02F7",
      "parameters": [],
      "description":"",
      "notes": "Start WiFi Square",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02F8",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "LoadFieldAudio",
      "id": "0x02F9",
      "parameters": [
        "Flex: Music ID"
      ],
      "description": "Loads Field scene sound data (GROUP_SE_FIELD in the SDAT) and starts playing SSEQ with Music ID.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetPlayingBGM",
      "id": "0x02FA",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores into Variable the ID of the current playing SSEQ.",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SpearPillarSequence2",
      "id": "0x02FB",
      "parameters": [],
      "description": "Starts part 2 of the Spear Pillar Sequence (Giratina Cutscene)",
      "notes": "Meant as a continuation of the sequence started by 020D. Makes Dialga and Palkia appear, triggers Cyrus' dialogue, Lake Guardians cutscene, Giratina scene begins, then screen fades to black.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02FC",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02FD",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02FE",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x02FF",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0300",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0301",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckUsedRotomAppliances",
      "id": "0x0302",
      "parameters": [
        "Var: Heat",
        "Var: Wash",
        "Var: Frost",
        "Var: Fan",
        "Var: Mow"
      ],
      "description": "Stores in Heat, Wash, Frost, Fan and Mow 1 if that appliance is being used by a Rotom, or 0 if the appliance is free",
      "notes": "Stores 1 in the variable when 'some condition' (that I didn't check) applies.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0303",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0304",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0305",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0306",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0307",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0308",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0309",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x030A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x030B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x030C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x030D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x030E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x030F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0310",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0311",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0312",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0313",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0314",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GetCurrentWeather",
      "id": "0x0315",
      "parameters": [
        "Var: Variable"
      ],
      "description": "Stores the current weather in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0316",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0317",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0318",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "GiratinaBattle",
      "id": "0x0319",
      "parameters": [
        "Flex: Pokémon",
        "Flex: Level"
      ],
      "description": "Starts a Distortion World wild battle against a Pokémon with level Level",
      "notes":"",
      "type": "command"
    },
    {
      "name": "RegisterSeenPokemon",
      "id": "0x031A",
      "parameters": [
        "Flex: Pokémon"
      ],
      "description": "Marks Pokémon in the Pokédex as seen if it hasn't been catched",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x031B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x031C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x031D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x031E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x031F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "PortalAnimation",
      "id": "0x0320",
      "parameters": [],
      "description": "Prepares 3D data of Distortion World's portal and plays the animation (also with sound effect 0x5D3 #1491).",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0321",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0322",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0323",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0324",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0325",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0326",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0327",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0328",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0329",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x032A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckEventRegigigas",
      "id": "0x032B",
      "parameters": [
        "Var: Return Value"
      ],
      "description": "Return Value is 1 if Player has an event Regigigas in their party, 0 otherwise.",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x032C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x032D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x032E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x032F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0330",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0331",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0332",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0333",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0334",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0335",
      "parameters": [
        "u16: ???",
        "u32: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0336",
      "parameters": [
        "Var: ???"
      ],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CheckPokemonIsSeen",
      "id": "0x0337",
      "parameters": [
        "Flex: Pokémon",
        "Var: Variable"
      ],
      "description": "Checks if Pokémon is registered as seen in the Pokédex, stores the answer in Variable",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0338",
      "parameters": [],
      "description":"",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0339",
      "parameters": [],
      "description":"",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x033A",
      "parameters": [
        "u8: ???"
      ],
      "description":"",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x033B",
      "parameters": [
        "u8: ???"
      ],
      "description":"",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextItemLowercase",
      "id": "0x033C",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's lowercase name in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextItemPlural",
      "id": "0x033D",
      "parameters": [
        "u8: String Buffer",
        "Flex: Item"
      ],
      "description": "Stores Item's plural noun in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x033E",
      "parameters": [
        "u8: String Buffer",
        "Flex: Underground goods"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x033F",
      "parameters": [
        "u8: String Buffer",
        "Flex: Underground trap"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0340",
      "parameters": [
        "u8: String Buffer",
        "Flex: Underground treasure"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0341",
      "parameters": [
        "u8: String Buffer",
        "Flex: ???",
        "u16: ???",
        "u8: ???"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0342",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0343",
      "parameters": [
        "u8: String Buffer",
        "Flex: Accesory"
      ],
      "description": "???",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextTrainerClass",
      "id": "0x0344",
      "parameters": [
        "u8: String Buffer",
        "Flex: Trainer class"
      ],
      "description": "Stores Trainer class' lowercase noun in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextSealPlural",
      "id": "0x0345",
      "parameters": [
        "u8: String Buffer",
        "Flex: Seal"
      ],
      "description": "Stores Seal's plural noun in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextCapitalize",
      "id": "0x0346",
      "parameters": [
        "u8: String Buffer"
      ],
      "description": "Capitalizes the string currently stored in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name": "TextFloor",
      "id": "0x0347",
      "parameters": [
        "u8: String Buffer",
        "u8: Floor"
      ],
      "description": "Stores Floor's name in String Buffer",
      "notes": "International release exclusive.",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0348",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "MultiplyVar",
      "id": "0x0349",
      "parameters": [
        "Var: Variable",
        "Flex: Operand"
      ],
      "description": "Stores the operation Variable * Operand in Variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CreateOW",
      "id": "0x034A",
      "parameters": [
        "Var: NPC ID",
        "Var: x coord",
        "Var: z coord",
        "Var: direction of the NPC",
        "Var: owtable entry number",
        "Var: movement code"
      ],
      "description": "Bypass the event file to spawn an NPC at the given coordinates",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x034B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x034C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x034D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x034E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x034F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0350",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0351",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0352",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0353",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0354",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0355",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0356",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0357",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0358",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0359",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x035A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x035B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x035C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name": "SpawnBuilding",
      "id": "0x035D",
      "parameters": [
        "Var: Bld ID",
        "Var: Response",
        "Var: Global X",
        "Var: Decimal X",
        "Var: Global Y",
        "Var: Decimal Y",
        "Var: Global Z",
        "Var: Decimal Z"
      ],
      "description": "Spawns a building at the given coordinates, stores it in a variable",
      "notes":"",
      "type": "command"
    },
    {
      "name": "DeleteBuilding",
      "id": "0x035E",
      "parameters": [
        "Var: Bld ID"
      ],
      "description": "Remove the previously placed building ",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CollisionTile",
      "id": "0x035F",
      "parameters": [
        "Var: Cell X",
        "Var: Cell Y",
        "Var: Layer",
        "Var: Collision C",
        "Var: Collision T"
      ],
      "description": "Add a collision tile",
      "notes":"",
      "type": "command"
    },
    {
      "name": "CollisionZone",
      "id": "0x0360",
      "parameters": [
        "Var: X",
        "Var: X Size",
        "Var: Y",
        "Var: Layer",
        "Var: Collision T",
        "Var: Collision C"
      ],
      "description": "Add a collision zone, if the layer is equal to 3, you have to specify both collision T and collision C. If layer is equal to 1, it's the tile type. If layer is equal to 2, it's the collision type",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0361",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0362",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0363",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0364",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0365",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0366",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0367",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0368",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0369",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x036A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x036B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x036C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x036D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x036E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x036F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0370",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0371",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0372",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0373",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0374",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0375",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0376",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0377",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0378",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0379",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x037A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x037B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x037C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x037D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x037E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x037F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0380",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0381",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0382",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0383",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0384",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0385",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0386",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0387",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0388",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0389",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x038A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x038B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x038C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x038D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x038E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x038F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0390",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0391",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0392",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0393",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0394",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0395",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0396",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0397",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0398",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x0399",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x039A",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x039B",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x039C",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x039D",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x039E",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x039F",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x03A0",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    },
    {
      "name":"",
      "id": "0x03A1",
      "parameters": [],
      "description":"",
      "notes":"",
      "type": "command"
    }
  ]
}